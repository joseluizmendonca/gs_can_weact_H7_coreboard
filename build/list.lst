ARM GAS  /tmp/ccLQsuPG.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"list.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.vListInitialise,"ax",%progbits
  19              		.align	1
  20              		.global	vListInitialise
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	vListInitialise:
  26              	.LVL0:
  27              	.LFB4:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/list.c"
   1:Middlewares/Third_Party/FreeRTOS/list.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/list.c ****  * FreeRTOS Kernel V10.5.0
   3:Middlewares/Third_Party/FreeRTOS/list.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/list.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/list.c ****  * SPDX-License-Identifier: MIT
   6:Middlewares/Third_Party/FreeRTOS/list.c ****  *
   7:Middlewares/Third_Party/FreeRTOS/list.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:Middlewares/Third_Party/FreeRTOS/list.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:Middlewares/Third_Party/FreeRTOS/list.c ****  * the Software without restriction, including without limitation the rights to
  10:Middlewares/Third_Party/FreeRTOS/list.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:Middlewares/Third_Party/FreeRTOS/list.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:Middlewares/Third_Party/FreeRTOS/list.c ****  * subject to the following conditions:
  13:Middlewares/Third_Party/FreeRTOS/list.c ****  *
  14:Middlewares/Third_Party/FreeRTOS/list.c ****  * The above copyright notice and this permission notice shall be included in all
  15:Middlewares/Third_Party/FreeRTOS/list.c ****  * copies or substantial portions of the Software.
  16:Middlewares/Third_Party/FreeRTOS/list.c ****  *
  17:Middlewares/Third_Party/FreeRTOS/list.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Middlewares/Third_Party/FreeRTOS/list.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:Middlewares/Third_Party/FreeRTOS/list.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:Middlewares/Third_Party/FreeRTOS/list.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:Middlewares/Third_Party/FreeRTOS/list.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:Middlewares/Third_Party/FreeRTOS/list.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:Middlewares/Third_Party/FreeRTOS/list.c ****  *
  24:Middlewares/Third_Party/FreeRTOS/list.c ****  * https://www.FreeRTOS.org
  25:Middlewares/Third_Party/FreeRTOS/list.c ****  * https://github.com/FreeRTOS
  26:Middlewares/Third_Party/FreeRTOS/list.c ****  *
  27:Middlewares/Third_Party/FreeRTOS/list.c ****  */
  28:Middlewares/Third_Party/FreeRTOS/list.c **** 
  29:Middlewares/Third_Party/FreeRTOS/list.c **** 
  30:Middlewares/Third_Party/FreeRTOS/list.c **** #include <stdlib.h>
ARM GAS  /tmp/ccLQsuPG.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/list.c **** 
  32:Middlewares/Third_Party/FreeRTOS/list.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Middlewares/Third_Party/FreeRTOS/list.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/list.c ****  * task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/list.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/list.c **** 
  37:Middlewares/Third_Party/FreeRTOS/list.c **** #include "FreeRTOS.h"
  38:Middlewares/Third_Party/FreeRTOS/list.c **** #include "list.h"
  39:Middlewares/Third_Party/FreeRTOS/list.c **** 
  40:Middlewares/Third_Party/FreeRTOS/list.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  41:Middlewares/Third_Party/FreeRTOS/list.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be
  42:Middlewares/Third_Party/FreeRTOS/list.c ****  * defined for the header files above, but not in this file, in order to
  43:Middlewares/Third_Party/FreeRTOS/list.c ****  * generate the correct privileged Vs unprivileged linkage and placement. */
  44:Middlewares/Third_Party/FreeRTOS/list.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  45:Middlewares/Third_Party/FreeRTOS/list.c **** 
  46:Middlewares/Third_Party/FreeRTOS/list.c **** /*-----------------------------------------------------------
  47:Middlewares/Third_Party/FreeRTOS/list.c **** * PUBLIC LIST API documented in list.h
  48:Middlewares/Third_Party/FreeRTOS/list.c **** *----------------------------------------------------------*/
  49:Middlewares/Third_Party/FreeRTOS/list.c **** 
  50:Middlewares/Third_Party/FreeRTOS/list.c **** void vListInitialise( List_t * const pxList )
  51:Middlewares/Third_Party/FreeRTOS/list.c **** {
  29              		.loc 1 51 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  52:Middlewares/Third_Party/FreeRTOS/list.c ****     /* The list structure contains a list item which is used to mark the
  53:Middlewares/Third_Party/FreeRTOS/list.c ****      * end of the list.  To initialise the list the list end is inserted
  54:Middlewares/Third_Party/FreeRTOS/list.c ****      * as the only list entry. */
  55:Middlewares/Third_Party/FreeRTOS/list.c ****     pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini li
  34              		.loc 1 55 5 view .LVU1
  35              		.loc 1 55 40 is_stmt 0 view .LVU2
  36 0000 00F10803 		add	r3, r0, #8
  37              		.loc 1 55 21 view .LVU3
  38 0004 4360     		str	r3, [r0, #4]
  56:Middlewares/Third_Party/FreeRTOS/list.c **** 
  57:Middlewares/Third_Party/FreeRTOS/list.c ****     listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );
  39              		.loc 1 57 75 is_stmt 1 view .LVU4
  58:Middlewares/Third_Party/FreeRTOS/list.c **** 
  59:Middlewares/Third_Party/FreeRTOS/list.c ****     /* The list end value is the highest possible value in the list to
  60:Middlewares/Third_Party/FreeRTOS/list.c ****      * ensure it remains at the end of the list. */
  61:Middlewares/Third_Party/FreeRTOS/list.c ****     pxList->xListEnd.xItemValue = portMAX_DELAY;
  40              		.loc 1 61 5 view .LVU5
  41              		.loc 1 61 33 is_stmt 0 view .LVU6
  42 0006 4FF0FF32 		mov	r2, #-1
  43 000a 8260     		str	r2, [r0, #8]
  62:Middlewares/Third_Party/FreeRTOS/list.c **** 
  63:Middlewares/Third_Party/FreeRTOS/list.c ****     /* The list end next and previous pointers point to itself so we know
  64:Middlewares/Third_Party/FreeRTOS/list.c ****      * when the list is empty. */
  65:Middlewares/Third_Party/FreeRTOS/list.c ****     pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );     /*lint !e826 !e740 !e9087
  44              		.loc 1 65 5 is_stmt 1 view .LVU7
  45              		.loc 1 65 29 is_stmt 0 view .LVU8
  46 000c C360     		str	r3, [r0, #12]
  66:Middlewares/Third_Party/FreeRTOS/list.c ****     pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087
  47              		.loc 1 66 5 is_stmt 1 view .LVU9
  48              		.loc 1 66 33 is_stmt 0 view .LVU10
  49 000e 0361     		str	r3, [r0, #16]
ARM GAS  /tmp/ccLQsuPG.s 			page 3


  67:Middlewares/Third_Party/FreeRTOS/list.c **** 
  68:Middlewares/Third_Party/FreeRTOS/list.c ****     /* Initialize the remaining fields of xListEnd when it is a proper ListItem_t */
  69:Middlewares/Third_Party/FreeRTOS/list.c ****     #if ( configUSE_MINI_LIST_ITEM == 0 )
  70:Middlewares/Third_Party/FreeRTOS/list.c ****     {
  71:Middlewares/Third_Party/FreeRTOS/list.c ****         pxList->xListEnd.pvOwner = NULL;
  72:Middlewares/Third_Party/FreeRTOS/list.c ****         pxList->xListEnd.pxContainer = NULL;
  73:Middlewares/Third_Party/FreeRTOS/list.c ****         listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );
  74:Middlewares/Third_Party/FreeRTOS/list.c ****     }
  75:Middlewares/Third_Party/FreeRTOS/list.c ****     #endif
  76:Middlewares/Third_Party/FreeRTOS/list.c **** 
  77:Middlewares/Third_Party/FreeRTOS/list.c ****     pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  50              		.loc 1 77 5 is_stmt 1 view .LVU11
  51              		.loc 1 77 29 is_stmt 0 view .LVU12
  52 0010 0023     		movs	r3, #0
  53 0012 0360     		str	r3, [r0]
  78:Middlewares/Third_Party/FreeRTOS/list.c **** 
  79:Middlewares/Third_Party/FreeRTOS/list.c ****     /* Write known values into the list if
  80:Middlewares/Third_Party/FreeRTOS/list.c ****      * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  81:Middlewares/Third_Party/FreeRTOS/list.c ****     listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
  54              		.loc 1 81 51 is_stmt 1 view .LVU13
  82:Middlewares/Third_Party/FreeRTOS/list.c ****     listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
  55              		.loc 1 82 51 view .LVU14
  83:Middlewares/Third_Party/FreeRTOS/list.c **** }
  56              		.loc 1 83 1 is_stmt 0 view .LVU15
  57 0014 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE4:
  61              		.section	.text.vListInitialiseItem,"ax",%progbits
  62              		.align	1
  63              		.global	vListInitialiseItem
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  68              	vListInitialiseItem:
  69              	.LVL1:
  70              	.LFB5:
  84:Middlewares/Third_Party/FreeRTOS/list.c **** /*-----------------------------------------------------------*/
  85:Middlewares/Third_Party/FreeRTOS/list.c **** 
  86:Middlewares/Third_Party/FreeRTOS/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
  87:Middlewares/Third_Party/FreeRTOS/list.c **** {
  71              		.loc 1 87 1 is_stmt 1 view -0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  88:Middlewares/Third_Party/FreeRTOS/list.c ****     /* Make sure the list item is not recorded as being on a list. */
  89:Middlewares/Third_Party/FreeRTOS/list.c ****     pxItem->pxContainer = NULL;
  76              		.loc 1 89 5 view .LVU17
  77              		.loc 1 89 25 is_stmt 0 view .LVU18
  78 0000 0023     		movs	r3, #0
  79 0002 0361     		str	r3, [r0, #16]
  90:Middlewares/Third_Party/FreeRTOS/list.c **** 
  91:Middlewares/Third_Party/FreeRTOS/list.c ****     /* Write known values into the list item if
  92:Middlewares/Third_Party/FreeRTOS/list.c ****      * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  93:Middlewares/Third_Party/FreeRTOS/list.c ****     listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  80              		.loc 1 93 60 is_stmt 1 view .LVU19
  94:Middlewares/Third_Party/FreeRTOS/list.c ****     listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
ARM GAS  /tmp/ccLQsuPG.s 			page 4


  81              		.loc 1 94 61 view .LVU20
  95:Middlewares/Third_Party/FreeRTOS/list.c **** }
  82              		.loc 1 95 1 is_stmt 0 view .LVU21
  83 0004 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE5:
  87              		.section	.text.vListInsertEnd,"ax",%progbits
  88              		.align	1
  89              		.global	vListInsertEnd
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  94              	vListInsertEnd:
  95              	.LVL2:
  96              	.LFB6:
  96:Middlewares/Third_Party/FreeRTOS/list.c **** /*-----------------------------------------------------------*/
  97:Middlewares/Third_Party/FreeRTOS/list.c **** 
  98:Middlewares/Third_Party/FreeRTOS/list.c **** void vListInsertEnd( List_t * const pxList,
  99:Middlewares/Third_Party/FreeRTOS/list.c ****                      ListItem_t * const pxNewListItem )
 100:Middlewares/Third_Party/FreeRTOS/list.c **** {
  97              		.loc 1 100 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 101:Middlewares/Third_Party/FreeRTOS/list.c ****     ListItem_t * const pxIndex = pxList->pxIndex;
 102              		.loc 1 101 5 view .LVU23
 103              		.loc 1 101 24 is_stmt 0 view .LVU24
 104 0000 4368     		ldr	r3, [r0, #4]
 105              	.LVL3:
 102:Middlewares/Third_Party/FreeRTOS/list.c **** 
 103:Middlewares/Third_Party/FreeRTOS/list.c ****     /* Only effective when configASSERT() is also defined, these tests may catch
 104:Middlewares/Third_Party/FreeRTOS/list.c ****      * the list data structures being overwritten in memory.  They will not catch
 105:Middlewares/Third_Party/FreeRTOS/list.c ****      * data errors caused by incorrect configuration or use of FreeRTOS. */
 106:Middlewares/Third_Party/FreeRTOS/list.c ****     listTEST_LIST_INTEGRITY( pxList );
 106              		.loc 1 106 38 is_stmt 1 view .LVU25
 107:Middlewares/Third_Party/FreeRTOS/list.c ****     listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 107              		.loc 1 107 50 view .LVU26
 108:Middlewares/Third_Party/FreeRTOS/list.c **** 
 109:Middlewares/Third_Party/FreeRTOS/list.c ****     /* Insert a new list item into pxList, but rather than sort the list,
 110:Middlewares/Third_Party/FreeRTOS/list.c ****      * makes the new list item the last item to be removed by a call to
 111:Middlewares/Third_Party/FreeRTOS/list.c ****      * listGET_OWNER_OF_NEXT_ENTRY(). */
 112:Middlewares/Third_Party/FreeRTOS/list.c ****     pxNewListItem->pxNext = pxIndex;
 108              		.loc 1 112 5 view .LVU27
 109              		.loc 1 112 27 is_stmt 0 view .LVU28
 110 0002 4B60     		str	r3, [r1, #4]
 113:Middlewares/Third_Party/FreeRTOS/list.c ****     pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 111              		.loc 1 113 5 is_stmt 1 view .LVU29
 112              		.loc 1 113 40 is_stmt 0 view .LVU30
 113 0004 9A68     		ldr	r2, [r3, #8]
 114              		.loc 1 113 31 view .LVU31
 115 0006 8A60     		str	r2, [r1, #8]
 114:Middlewares/Third_Party/FreeRTOS/list.c **** 
 115:Middlewares/Third_Party/FreeRTOS/list.c ****     /* Only used during decision coverage testing. */
 116:Middlewares/Third_Party/FreeRTOS/list.c ****     mtCOVERAGE_TEST_DELAY();
 116              		.loc 1 116 28 is_stmt 1 view .LVU32
 117:Middlewares/Third_Party/FreeRTOS/list.c **** 
ARM GAS  /tmp/ccLQsuPG.s 			page 5


 118:Middlewares/Third_Party/FreeRTOS/list.c ****     pxIndex->pxPrevious->pxNext = pxNewListItem;
 117              		.loc 1 118 5 view .LVU33
 118              		.loc 1 118 33 is_stmt 0 view .LVU34
 119 0008 5160     		str	r1, [r2, #4]
 119:Middlewares/Third_Party/FreeRTOS/list.c ****     pxIndex->pxPrevious = pxNewListItem;
 120              		.loc 1 119 5 is_stmt 1 view .LVU35
 121              		.loc 1 119 25 is_stmt 0 view .LVU36
 122 000a 9960     		str	r1, [r3, #8]
 120:Middlewares/Third_Party/FreeRTOS/list.c **** 
 121:Middlewares/Third_Party/FreeRTOS/list.c ****     /* Remember which list the item is in. */
 122:Middlewares/Third_Party/FreeRTOS/list.c ****     pxNewListItem->pxContainer = pxList;
 123              		.loc 1 122 5 is_stmt 1 view .LVU37
 124              		.loc 1 122 32 is_stmt 0 view .LVU38
 125 000c 0861     		str	r0, [r1, #16]
 123:Middlewares/Third_Party/FreeRTOS/list.c **** 
 124:Middlewares/Third_Party/FreeRTOS/list.c ****     ( pxList->uxNumberOfItems )++;
 126              		.loc 1 124 5 is_stmt 1 view .LVU39
 127              		.loc 1 124 13 is_stmt 0 view .LVU40
 128 000e 0368     		ldr	r3, [r0]
 129              	.LVL4:
 130              		.loc 1 124 32 view .LVU41
 131 0010 0133     		adds	r3, r3, #1
 132 0012 0360     		str	r3, [r0]
 125:Middlewares/Third_Party/FreeRTOS/list.c **** }
 133              		.loc 1 125 1 view .LVU42
 134 0014 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE6:
 138              		.section	.text.vListInsert,"ax",%progbits
 139              		.align	1
 140              		.global	vListInsert
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	vListInsert:
 146              	.LVL5:
 147              	.LFB7:
 126:Middlewares/Third_Party/FreeRTOS/list.c **** /*-----------------------------------------------------------*/
 127:Middlewares/Third_Party/FreeRTOS/list.c **** 
 128:Middlewares/Third_Party/FreeRTOS/list.c **** void vListInsert( List_t * const pxList,
 129:Middlewares/Third_Party/FreeRTOS/list.c ****                   ListItem_t * const pxNewListItem )
 130:Middlewares/Third_Party/FreeRTOS/list.c **** {
 148              		.loc 1 130 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153              		.loc 1 130 1 is_stmt 0 view .LVU44
 154 0000 30B4     		push	{r4, r5}
 155              	.LCFI0:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 4, -8
 158              		.cfi_offset 5, -4
 131:Middlewares/Third_Party/FreeRTOS/list.c ****     ListItem_t * pxIterator;
 159              		.loc 1 131 5 is_stmt 1 view .LVU45
 132:Middlewares/Third_Party/FreeRTOS/list.c ****     const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 160              		.loc 1 132 5 view .LVU46
ARM GAS  /tmp/ccLQsuPG.s 			page 6


 161              		.loc 1 132 22 is_stmt 0 view .LVU47
 162 0002 0D68     		ldr	r5, [r1]
 163              	.LVL6:
 133:Middlewares/Third_Party/FreeRTOS/list.c **** 
 134:Middlewares/Third_Party/FreeRTOS/list.c ****     /* Only effective when configASSERT() is also defined, these tests may catch
 135:Middlewares/Third_Party/FreeRTOS/list.c ****      * the list data structures being overwritten in memory.  They will not catch
 136:Middlewares/Third_Party/FreeRTOS/list.c ****      * data errors caused by incorrect configuration or use of FreeRTOS. */
 137:Middlewares/Third_Party/FreeRTOS/list.c ****     listTEST_LIST_INTEGRITY( pxList );
 164              		.loc 1 137 38 is_stmt 1 view .LVU48
 138:Middlewares/Third_Party/FreeRTOS/list.c ****     listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 165              		.loc 1 138 50 view .LVU49
 139:Middlewares/Third_Party/FreeRTOS/list.c **** 
 140:Middlewares/Third_Party/FreeRTOS/list.c ****     /* Insert the new list item into the list, sorted in xItemValue order.
 141:Middlewares/Third_Party/FreeRTOS/list.c ****      *
 142:Middlewares/Third_Party/FreeRTOS/list.c ****      * If the list already contains a list item with the same item value then the
 143:Middlewares/Third_Party/FreeRTOS/list.c ****      * new list item should be placed after it.  This ensures that TCBs which are
 144:Middlewares/Third_Party/FreeRTOS/list.c ****      * stored in ready lists (all of which have the same xItemValue value) get a
 145:Middlewares/Third_Party/FreeRTOS/list.c ****      * share of the CPU.  However, if the xItemValue is the same as the back marker
 146:Middlewares/Third_Party/FreeRTOS/list.c ****      * the iteration loop below will not end.  Therefore the value is checked
 147:Middlewares/Third_Party/FreeRTOS/list.c ****      * first, and the algorithm slightly modified if necessary. */
 148:Middlewares/Third_Party/FreeRTOS/list.c ****     if( xValueOfInsertion == portMAX_DELAY )
 166              		.loc 1 148 5 view .LVU50
 167              		.loc 1 148 7 is_stmt 0 view .LVU51
 168 0004 B5F1FF3F 		cmp	r5, #-1
 169 0008 11D0     		beq	.L9
 149:Middlewares/Third_Party/FreeRTOS/list.c ****     {
 150:Middlewares/Third_Party/FreeRTOS/list.c ****         pxIterator = pxList->xListEnd.pxPrevious;
 151:Middlewares/Third_Party/FreeRTOS/list.c ****     }
 152:Middlewares/Third_Party/FreeRTOS/list.c ****     else
 153:Middlewares/Third_Party/FreeRTOS/list.c ****     {
 154:Middlewares/Third_Party/FreeRTOS/list.c ****         /* *** NOTE ***********************************************************
 155:Middlewares/Third_Party/FreeRTOS/list.c ****         *  If you find your application is crashing here then likely causes are
 156:Middlewares/Third_Party/FreeRTOS/list.c ****         *  listed below.  In addition see https://www.FreeRTOS.org/FAQHelp.html for
 157:Middlewares/Third_Party/FreeRTOS/list.c ****         *  more tips, and ensure configASSERT() is defined!
 158:Middlewares/Third_Party/FreeRTOS/list.c ****         *  https://www.FreeRTOS.org/a00110.html#configASSERT
 159:Middlewares/Third_Party/FreeRTOS/list.c ****         *
 160:Middlewares/Third_Party/FreeRTOS/list.c ****         *   1) Stack overflow -
 161:Middlewares/Third_Party/FreeRTOS/list.c ****         *      see https://www.FreeRTOS.org/Stacks-and-stack-overflow-checking.html
 162:Middlewares/Third_Party/FreeRTOS/list.c ****         *   2) Incorrect interrupt priority assignment, especially on Cortex-M
 163:Middlewares/Third_Party/FreeRTOS/list.c ****         *      parts where numerically high priority values denote low actual
 164:Middlewares/Third_Party/FreeRTOS/list.c ****         *      interrupt priorities, which can seem counter intuitive.  See
 165:Middlewares/Third_Party/FreeRTOS/list.c ****         *      https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html and the definition
 166:Middlewares/Third_Party/FreeRTOS/list.c ****         *      of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 167:Middlewares/Third_Party/FreeRTOS/list.c ****         *      https://www.FreeRTOS.org/a00110.html
 168:Middlewares/Third_Party/FreeRTOS/list.c ****         *   3) Calling an API function from within a critical section or when
 169:Middlewares/Third_Party/FreeRTOS/list.c ****         *      the scheduler is suspended, or calling an API function that does
 170:Middlewares/Third_Party/FreeRTOS/list.c ****         *      not end in "FromISR" from an interrupt.
 171:Middlewares/Third_Party/FreeRTOS/list.c ****         *   4) Using a queue or semaphore before it has been initialised or
 172:Middlewares/Third_Party/FreeRTOS/list.c ****         *      before the scheduler has been started (are interrupts firing
 173:Middlewares/Third_Party/FreeRTOS/list.c ****         *      before vTaskStartScheduler() has been called?).
 174:Middlewares/Third_Party/FreeRTOS/list.c ****         *   5) If the FreeRTOS port supports interrupt nesting then ensure that
 175:Middlewares/Third_Party/FreeRTOS/list.c ****         *      the priority of the tick interrupt is at or below
 176:Middlewares/Third_Party/FreeRTOS/list.c ****         *      configMAX_SYSCALL_INTERRUPT_PRIORITY.
 177:Middlewares/Third_Party/FreeRTOS/list.c ****         **********************************************************************/
 178:Middlewares/Third_Party/FreeRTOS/list.c **** 
 179:Middlewares/Third_Party/FreeRTOS/list.c ****         for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <=
 170              		.loc 1 179 9 is_stmt 1 view .LVU52
ARM GAS  /tmp/ccLQsuPG.s 			page 7


 171              		.loc 1 179 25 is_stmt 0 view .LVU53
 172 000a 00F10803 		add	r3, r0, #8
 173              	.LVL7:
 174              	.L7:
 175              		.loc 1 179 67 is_stmt 1 discriminator 1 view .LVU54
 176 000e 1C46     		mov	r4, r3
 177              		.loc 1 179 77 is_stmt 0 discriminator 1 view .LVU55
 178 0010 5B68     		ldr	r3, [r3, #4]
 179              	.LVL8:
 180              		.loc 1 179 85 discriminator 1 view .LVU56
 181 0012 1A68     		ldr	r2, [r3]
 182              		.loc 1 179 9 discriminator 1 view .LVU57
 183 0014 AA42     		cmp	r2, r5
 184 0016 FAD9     		bls	.L7
 185              	.L6:
 180:Middlewares/Third_Party/FreeRTOS/list.c ****         {
 181:Middlewares/Third_Party/FreeRTOS/list.c ****             /* There is nothing to do here, just iterating to the wanted
 182:Middlewares/Third_Party/FreeRTOS/list.c ****              * insertion position. */
 183:Middlewares/Third_Party/FreeRTOS/list.c ****         }
 184:Middlewares/Third_Party/FreeRTOS/list.c ****     }
 185:Middlewares/Third_Party/FreeRTOS/list.c **** 
 186:Middlewares/Third_Party/FreeRTOS/list.c ****     pxNewListItem->pxNext = pxIterator->pxNext;
 186              		.loc 1 186 5 is_stmt 1 view .LVU58
 187              		.loc 1 186 39 is_stmt 0 view .LVU59
 188 0018 6368     		ldr	r3, [r4, #4]
 189              		.loc 1 186 27 view .LVU60
 190 001a 4B60     		str	r3, [r1, #4]
 187:Middlewares/Third_Party/FreeRTOS/list.c ****     pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 191              		.loc 1 187 5 is_stmt 1 view .LVU61
 192              		.loc 1 187 39 is_stmt 0 view .LVU62
 193 001c 9960     		str	r1, [r3, #8]
 188:Middlewares/Third_Party/FreeRTOS/list.c ****     pxNewListItem->pxPrevious = pxIterator;
 194              		.loc 1 188 5 is_stmt 1 view .LVU63
 195              		.loc 1 188 31 is_stmt 0 view .LVU64
 196 001e 8C60     		str	r4, [r1, #8]
 189:Middlewares/Third_Party/FreeRTOS/list.c ****     pxIterator->pxNext = pxNewListItem;
 197              		.loc 1 189 5 is_stmt 1 view .LVU65
 198              		.loc 1 189 24 is_stmt 0 view .LVU66
 199 0020 6160     		str	r1, [r4, #4]
 190:Middlewares/Third_Party/FreeRTOS/list.c **** 
 191:Middlewares/Third_Party/FreeRTOS/list.c ****     /* Remember which list the item is in.  This allows fast removal of the
 192:Middlewares/Third_Party/FreeRTOS/list.c ****      * item later. */
 193:Middlewares/Third_Party/FreeRTOS/list.c ****     pxNewListItem->pxContainer = pxList;
 200              		.loc 1 193 5 is_stmt 1 view .LVU67
 201              		.loc 1 193 32 is_stmt 0 view .LVU68
 202 0022 0861     		str	r0, [r1, #16]
 194:Middlewares/Third_Party/FreeRTOS/list.c **** 
 195:Middlewares/Third_Party/FreeRTOS/list.c ****     ( pxList->uxNumberOfItems )++;
 203              		.loc 1 195 5 is_stmt 1 view .LVU69
 204              		.loc 1 195 13 is_stmt 0 view .LVU70
 205 0024 0368     		ldr	r3, [r0]
 206              		.loc 1 195 32 view .LVU71
 207 0026 0133     		adds	r3, r3, #1
 208 0028 0360     		str	r3, [r0]
 196:Middlewares/Third_Party/FreeRTOS/list.c **** }
 209              		.loc 1 196 1 view .LVU72
 210 002a 30BC     		pop	{r4, r5}
ARM GAS  /tmp/ccLQsuPG.s 			page 8


 211              	.LCFI1:
 212              		.cfi_remember_state
 213              		.cfi_restore 5
 214              		.cfi_restore 4
 215              		.cfi_def_cfa_offset 0
 216              	.LVL9:
 217              		.loc 1 196 1 view .LVU73
 218 002c 7047     		bx	lr
 219              	.LVL10:
 220              	.L9:
 221              	.LCFI2:
 222              		.cfi_restore_state
 150:Middlewares/Third_Party/FreeRTOS/list.c ****     }
 223              		.loc 1 150 9 is_stmt 1 view .LVU74
 150:Middlewares/Third_Party/FreeRTOS/list.c ****     }
 224              		.loc 1 150 20 is_stmt 0 view .LVU75
 225 002e 0469     		ldr	r4, [r0, #16]
 226              	.LVL11:
 150:Middlewares/Third_Party/FreeRTOS/list.c ****     }
 227              		.loc 1 150 20 view .LVU76
 228 0030 F2E7     		b	.L6
 229              		.cfi_endproc
 230              	.LFE7:
 232              		.section	.text.uxListRemove,"ax",%progbits
 233              		.align	1
 234              		.global	uxListRemove
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 239              	uxListRemove:
 240              	.LVL12:
 241              	.LFB8:
 197:Middlewares/Third_Party/FreeRTOS/list.c **** /*-----------------------------------------------------------*/
 198:Middlewares/Third_Party/FreeRTOS/list.c **** 
 199:Middlewares/Third_Party/FreeRTOS/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 200:Middlewares/Third_Party/FreeRTOS/list.c **** {
 242              		.loc 1 200 1 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 201:Middlewares/Third_Party/FreeRTOS/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 202:Middlewares/Third_Party/FreeRTOS/list.c ****  * item. */
 203:Middlewares/Third_Party/FreeRTOS/list.c ****     List_t * const pxList = pxItemToRemove->pxContainer;
 247              		.loc 1 203 5 view .LVU78
 248              		.loc 1 203 20 is_stmt 0 view .LVU79
 249 0000 0369     		ldr	r3, [r0, #16]
 250              	.LVL13:
 204:Middlewares/Third_Party/FreeRTOS/list.c **** 
 205:Middlewares/Third_Party/FreeRTOS/list.c ****     pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 251              		.loc 1 205 5 is_stmt 1 view .LVU80
 252              		.loc 1 205 19 is_stmt 0 view .LVU81
 253 0002 4168     		ldr	r1, [r0, #4]
 254              		.loc 1 205 56 view .LVU82
 255 0004 8268     		ldr	r2, [r0, #8]
 256              		.loc 1 205 40 view .LVU83
 257 0006 8A60     		str	r2, [r1, #8]
ARM GAS  /tmp/ccLQsuPG.s 			page 9


 206:Middlewares/Third_Party/FreeRTOS/list.c ****     pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 258              		.loc 1 206 5 is_stmt 1 view .LVU84
 259              		.loc 1 206 56 is_stmt 0 view .LVU85
 260 0008 4168     		ldr	r1, [r0, #4]
 261              		.loc 1 206 40 view .LVU86
 262 000a 5160     		str	r1, [r2, #4]
 207:Middlewares/Third_Party/FreeRTOS/list.c **** 
 208:Middlewares/Third_Party/FreeRTOS/list.c ****     /* Only used during decision coverage testing. */
 209:Middlewares/Third_Party/FreeRTOS/list.c ****     mtCOVERAGE_TEST_DELAY();
 263              		.loc 1 209 28 is_stmt 1 view .LVU87
 210:Middlewares/Third_Party/FreeRTOS/list.c **** 
 211:Middlewares/Third_Party/FreeRTOS/list.c ****     /* Make sure the index is left pointing to a valid item. */
 212:Middlewares/Third_Party/FreeRTOS/list.c ****     if( pxList->pxIndex == pxItemToRemove )
 264              		.loc 1 212 5 view .LVU88
 265              		.loc 1 212 15 is_stmt 0 view .LVU89
 266 000c 5A68     		ldr	r2, [r3, #4]
 267              		.loc 1 212 7 view .LVU90
 268 000e 8242     		cmp	r2, r0
 269 0010 06D0     		beq	.L12
 270              	.L11:
 213:Middlewares/Third_Party/FreeRTOS/list.c ****     {
 214:Middlewares/Third_Party/FreeRTOS/list.c ****         pxList->pxIndex = pxItemToRemove->pxPrevious;
 215:Middlewares/Third_Party/FreeRTOS/list.c ****     }
 216:Middlewares/Third_Party/FreeRTOS/list.c ****     else
 217:Middlewares/Third_Party/FreeRTOS/list.c ****     {
 218:Middlewares/Third_Party/FreeRTOS/list.c ****         mtCOVERAGE_TEST_MARKER();
 271              		.loc 1 218 33 is_stmt 1 view .LVU91
 219:Middlewares/Third_Party/FreeRTOS/list.c ****     }
 220:Middlewares/Third_Party/FreeRTOS/list.c **** 
 221:Middlewares/Third_Party/FreeRTOS/list.c ****     pxItemToRemove->pxContainer = NULL;
 272              		.loc 1 221 5 view .LVU92
 273              		.loc 1 221 33 is_stmt 0 view .LVU93
 274 0012 0022     		movs	r2, #0
 275 0014 0261     		str	r2, [r0, #16]
 222:Middlewares/Third_Party/FreeRTOS/list.c ****     ( pxList->uxNumberOfItems )--;
 276              		.loc 1 222 5 is_stmt 1 view .LVU94
 277              		.loc 1 222 13 is_stmt 0 view .LVU95
 278 0016 1A68     		ldr	r2, [r3]
 279              		.loc 1 222 32 view .LVU96
 280 0018 013A     		subs	r2, r2, #1
 281 001a 1A60     		str	r2, [r3]
 223:Middlewares/Third_Party/FreeRTOS/list.c **** 
 224:Middlewares/Third_Party/FreeRTOS/list.c ****     return pxList->uxNumberOfItems;
 282              		.loc 1 224 5 is_stmt 1 view .LVU97
 283              		.loc 1 224 18 is_stmt 0 view .LVU98
 284 001c 1868     		ldr	r0, [r3]
 285              	.LVL14:
 225:Middlewares/Third_Party/FreeRTOS/list.c **** }
 286              		.loc 1 225 1 view .LVU99
 287 001e 7047     		bx	lr
 288              	.LVL15:
 289              	.L12:
 214:Middlewares/Third_Party/FreeRTOS/list.c ****     }
 290              		.loc 1 214 9 is_stmt 1 view .LVU100
 214:Middlewares/Third_Party/FreeRTOS/list.c ****     }
 291              		.loc 1 214 41 is_stmt 0 view .LVU101
 292 0020 8268     		ldr	r2, [r0, #8]
ARM GAS  /tmp/ccLQsuPG.s 			page 10


 214:Middlewares/Third_Party/FreeRTOS/list.c ****     }
 293              		.loc 1 214 25 view .LVU102
 294 0022 5A60     		str	r2, [r3, #4]
 295 0024 F5E7     		b	.L11
 296              		.cfi_endproc
 297              	.LFE8:
 299              		.text
 300              	.Letext0:
 301              		.file 2 "/home/joseluiz/Programs/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux/arm-none-eabi/include
 302              		.file 3 "/home/joseluiz/Programs/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux/arm-none-eabi/include
 303              		.file 4 "Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
 304              		.file 5 "Middlewares/Third_Party/FreeRTOS/include/list.h"
ARM GAS  /tmp/ccLQsuPG.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 list.c
     /tmp/ccLQsuPG.s:19     .text.vListInitialise:0000000000000000 $t
     /tmp/ccLQsuPG.s:25     .text.vListInitialise:0000000000000000 vListInitialise
     /tmp/ccLQsuPG.s:62     .text.vListInitialiseItem:0000000000000000 $t
     /tmp/ccLQsuPG.s:68     .text.vListInitialiseItem:0000000000000000 vListInitialiseItem
     /tmp/ccLQsuPG.s:88     .text.vListInsertEnd:0000000000000000 $t
     /tmp/ccLQsuPG.s:94     .text.vListInsertEnd:0000000000000000 vListInsertEnd
     /tmp/ccLQsuPG.s:139    .text.vListInsert:0000000000000000 $t
     /tmp/ccLQsuPG.s:145    .text.vListInsert:0000000000000000 vListInsert
     /tmp/ccLQsuPG.s:233    .text.uxListRemove:0000000000000000 $t
     /tmp/ccLQsuPG.s:239    .text.uxListRemove:0000000000000000 uxListRemove

NO UNDEFINED SYMBOLS
