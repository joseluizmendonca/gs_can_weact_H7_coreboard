ARM GAS  /tmp/ccteX1la.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_it.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB141:
  27              		.file 1 "Src/stm32h7xx_it.c"
   1:Src/stm32h7xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32h7xx_it.c **** /**
   3:Src/stm32h7xx_it.c ****   ******************************************************************************
   4:Src/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   5:Src/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32h7xx_it.c ****   ******************************************************************************
   7:Src/stm32h7xx_it.c ****   * @attention
   8:Src/stm32h7xx_it.c ****   *
   9:Src/stm32h7xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Src/stm32h7xx_it.c ****   * All rights reserved.
  11:Src/stm32h7xx_it.c ****   *
  12:Src/stm32h7xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32h7xx_it.c ****   * in the root directory of this software component.
  14:Src/stm32h7xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32h7xx_it.c ****   *
  16:Src/stm32h7xx_it.c ****   ******************************************************************************
  17:Src/stm32h7xx_it.c ****   */
  18:Src/stm32h7xx_it.c **** /* USER CODE END Header */
  19:Src/stm32h7xx_it.c **** 
  20:Src/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32h7xx_it.c **** #include "main.h"
  22:Src/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  23:Src/stm32h7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32h7xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32h7xx_it.c **** /* USER CODE END Includes */
  26:Src/stm32h7xx_it.c **** 
  27:Src/stm32h7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Src/stm32h7xx_it.c **** /* USER CODE BEGIN TD */
  29:Src/stm32h7xx_it.c **** 
  30:Src/stm32h7xx_it.c **** /* USER CODE END TD */
  31:Src/stm32h7xx_it.c **** 
ARM GAS  /tmp/ccteX1la.s 			page 2


  32:Src/stm32h7xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Src/stm32h7xx_it.c **** /* USER CODE BEGIN PD */
  34:Src/stm32h7xx_it.c **** 
  35:Src/stm32h7xx_it.c **** /* USER CODE END PD */
  36:Src/stm32h7xx_it.c **** 
  37:Src/stm32h7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Src/stm32h7xx_it.c **** /* USER CODE BEGIN PM */
  39:Src/stm32h7xx_it.c **** 
  40:Src/stm32h7xx_it.c **** /* USER CODE END PM */
  41:Src/stm32h7xx_it.c **** 
  42:Src/stm32h7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Src/stm32h7xx_it.c **** /* USER CODE BEGIN PV */
  44:Src/stm32h7xx_it.c **** 
  45:Src/stm32h7xx_it.c **** /* USER CODE END PV */
  46:Src/stm32h7xx_it.c **** 
  47:Src/stm32h7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/stm32h7xx_it.c **** /* USER CODE BEGIN PFP */
  49:Src/stm32h7xx_it.c **** 
  50:Src/stm32h7xx_it.c **** /* USER CODE END PFP */
  51:Src/stm32h7xx_it.c **** 
  52:Src/stm32h7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Src/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  54:Src/stm32h7xx_it.c **** 
  55:Src/stm32h7xx_it.c **** /* USER CODE END 0 */
  56:Src/stm32h7xx_it.c **** 
  57:Src/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Src/stm32h7xx_it.c **** extern FDCAN_HandleTypeDef hfdcan1;
  59:Src/stm32h7xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_OTG_FS;
  60:Src/stm32h7xx_it.c **** extern TIM_HandleTypeDef htim1;
  61:Src/stm32h7xx_it.c **** 
  62:Src/stm32h7xx_it.c **** /* USER CODE BEGIN EV */
  63:Src/stm32h7xx_it.c **** 
  64:Src/stm32h7xx_it.c **** /* USER CODE END EV */
  65:Src/stm32h7xx_it.c **** 
  66:Src/stm32h7xx_it.c **** /******************************************************************************/
  67:Src/stm32h7xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  68:Src/stm32h7xx_it.c **** /******************************************************************************/
  69:Src/stm32h7xx_it.c **** /**
  70:Src/stm32h7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Src/stm32h7xx_it.c ****   */
  72:Src/stm32h7xx_it.c **** void NMI_Handler(void)
  73:Src/stm32h7xx_it.c **** {
  28              		.loc 1 73 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  74:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Src/stm32h7xx_it.c **** 
  76:Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Src/stm32h7xx_it.c ****   while (1)
  35              		.loc 1 78 3 discriminator 1 view .LVU1
  79:Src/stm32h7xx_it.c ****   {
  80:Src/stm32h7xx_it.c ****   }
ARM GAS  /tmp/ccteX1la.s 			page 3


  36              		.loc 1 80 3 discriminator 1 view .LVU2
  78:Src/stm32h7xx_it.c ****   {
  37              		.loc 1 78 9 discriminator 1 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE141:
  42              		.section	.text.HardFault_Handler,"ax",%progbits
  43              		.align	1
  44              		.global	HardFault_Handler
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  49              	HardFault_Handler:
  50              	.LFB142:
  81:Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Src/stm32h7xx_it.c **** }
  83:Src/stm32h7xx_it.c **** 
  84:Src/stm32h7xx_it.c **** /**
  85:Src/stm32h7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Src/stm32h7xx_it.c ****   */
  87:Src/stm32h7xx_it.c **** void HardFault_Handler(void)
  88:Src/stm32h7xx_it.c **** {
  51              		.loc 1 88 1 view -0
  52              		.cfi_startproc
  53              		@ Volatile: function does not return.
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.L4:
  89:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Src/stm32h7xx_it.c **** 
  91:Src/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Src/stm32h7xx_it.c ****   while (1)
  58              		.loc 1 92 3 discriminator 1 view .LVU5
  93:Src/stm32h7xx_it.c ****   {
  94:Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Src/stm32h7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Src/stm32h7xx_it.c ****   }
  59              		.loc 1 96 3 discriminator 1 view .LVU6
  92:Src/stm32h7xx_it.c ****   {
  60              		.loc 1 92 9 discriminator 1 view .LVU7
  61 0000 FEE7     		b	.L4
  62              		.cfi_endproc
  63              	.LFE142:
  65              		.section	.text.MemManage_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	MemManage_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  72              	MemManage_Handler:
  73              	.LFB143:
  97:Src/stm32h7xx_it.c **** }
  98:Src/stm32h7xx_it.c **** 
  99:Src/stm32h7xx_it.c **** /**
 100:Src/stm32h7xx_it.c ****   * @brief This function handles Memory management fault.
 101:Src/stm32h7xx_it.c ****   */
ARM GAS  /tmp/ccteX1la.s 			page 4


 102:Src/stm32h7xx_it.c **** void MemManage_Handler(void)
 103:Src/stm32h7xx_it.c **** {
  74              		.loc 1 103 1 view -0
  75              		.cfi_startproc
  76              		@ Volatile: function does not return.
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.L6:
 104:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 105:Src/stm32h7xx_it.c **** 
 106:Src/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 107:Src/stm32h7xx_it.c ****   while (1)
  81              		.loc 1 107 3 discriminator 1 view .LVU9
 108:Src/stm32h7xx_it.c ****   {
 109:Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 110:Src/stm32h7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 111:Src/stm32h7xx_it.c ****   }
  82              		.loc 1 111 3 discriminator 1 view .LVU10
 107:Src/stm32h7xx_it.c ****   {
  83              		.loc 1 107 9 discriminator 1 view .LVU11
  84 0000 FEE7     		b	.L6
  85              		.cfi_endproc
  86              	.LFE143:
  88              		.section	.text.BusFault_Handler,"ax",%progbits
  89              		.align	1
  90              		.global	BusFault_Handler
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	BusFault_Handler:
  96              	.LFB144:
 112:Src/stm32h7xx_it.c **** }
 113:Src/stm32h7xx_it.c **** 
 114:Src/stm32h7xx_it.c **** /**
 115:Src/stm32h7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 116:Src/stm32h7xx_it.c ****   */
 117:Src/stm32h7xx_it.c **** void BusFault_Handler(void)
 118:Src/stm32h7xx_it.c **** {
  97              		.loc 1 118 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L8:
 119:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 120:Src/stm32h7xx_it.c **** 
 121:Src/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 122:Src/stm32h7xx_it.c ****   while (1)
 104              		.loc 1 122 3 discriminator 1 view .LVU13
 123:Src/stm32h7xx_it.c ****   {
 124:Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 125:Src/stm32h7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 126:Src/stm32h7xx_it.c ****   }
 105              		.loc 1 126 3 discriminator 1 view .LVU14
 122:Src/stm32h7xx_it.c ****   {
ARM GAS  /tmp/ccteX1la.s 			page 5


 106              		.loc 1 122 9 discriminator 1 view .LVU15
 107 0000 FEE7     		b	.L8
 108              		.cfi_endproc
 109              	.LFE144:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	UsageFault_Handler:
 119              	.LFB145:
 127:Src/stm32h7xx_it.c **** }
 128:Src/stm32h7xx_it.c **** 
 129:Src/stm32h7xx_it.c **** /**
 130:Src/stm32h7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 131:Src/stm32h7xx_it.c ****   */
 132:Src/stm32h7xx_it.c **** void UsageFault_Handler(void)
 133:Src/stm32h7xx_it.c **** {
 120              		.loc 1 133 1 view -0
 121              		.cfi_startproc
 122              		@ Volatile: function does not return.
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.L10:
 134:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 135:Src/stm32h7xx_it.c **** 
 136:Src/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 137:Src/stm32h7xx_it.c ****   while (1)
 127              		.loc 1 137 3 discriminator 1 view .LVU17
 138:Src/stm32h7xx_it.c ****   {
 139:Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 140:Src/stm32h7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 141:Src/stm32h7xx_it.c ****   }
 128              		.loc 1 141 3 discriminator 1 view .LVU18
 137:Src/stm32h7xx_it.c ****   {
 129              		.loc 1 137 9 discriminator 1 view .LVU19
 130 0000 FEE7     		b	.L10
 131              		.cfi_endproc
 132              	.LFE145:
 134              		.section	.text.DebugMon_Handler,"ax",%progbits
 135              		.align	1
 136              		.global	DebugMon_Handler
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 141              	DebugMon_Handler:
 142              	.LFB146:
 142:Src/stm32h7xx_it.c **** }
 143:Src/stm32h7xx_it.c **** 
 144:Src/stm32h7xx_it.c **** /**
 145:Src/stm32h7xx_it.c ****   * @brief This function handles Debug monitor.
 146:Src/stm32h7xx_it.c ****   */
 147:Src/stm32h7xx_it.c **** void DebugMon_Handler(void)
 148:Src/stm32h7xx_it.c **** {
 143              		.loc 1 148 1 view -0
ARM GAS  /tmp/ccteX1la.s 			page 6


 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 149:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 150:Src/stm32h7xx_it.c **** 
 151:Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 152:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 153:Src/stm32h7xx_it.c **** 
 154:Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 155:Src/stm32h7xx_it.c **** }
 148              		.loc 1 155 1 view .LVU21
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE146:
 153              		.section	.text.FDCAN1_IT0_IRQHandler,"ax",%progbits
 154              		.align	1
 155              		.global	FDCAN1_IT0_IRQHandler
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	FDCAN1_IT0_IRQHandler:
 161              	.LFB147:
 156:Src/stm32h7xx_it.c **** 
 157:Src/stm32h7xx_it.c **** /******************************************************************************/
 158:Src/stm32h7xx_it.c **** /* STM32H7xx Peripheral Interrupt Handlers                                    */
 159:Src/stm32h7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 160:Src/stm32h7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 161:Src/stm32h7xx_it.c **** /* please refer to the startup file (startup_stm32h7xx.s).                    */
 162:Src/stm32h7xx_it.c **** /******************************************************************************/
 163:Src/stm32h7xx_it.c **** 
 164:Src/stm32h7xx_it.c **** /**
 165:Src/stm32h7xx_it.c ****   * @brief This function handles FDCAN1 interrupt 0.
 166:Src/stm32h7xx_it.c ****   */
 167:Src/stm32h7xx_it.c **** void FDCAN1_IT0_IRQHandler(void)
 168:Src/stm32h7xx_it.c **** {
 162              		.loc 1 168 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166 0000 08B5     		push	{r3, lr}
 167              	.LCFI0:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 3, -8
 170              		.cfi_offset 14, -4
 169:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN FDCAN1_IT0_IRQn 0 */
 170:Src/stm32h7xx_it.c **** 
 171:Src/stm32h7xx_it.c ****   /* USER CODE END FDCAN1_IT0_IRQn 0 */
 172:Src/stm32h7xx_it.c ****   HAL_FDCAN_IRQHandler(&hfdcan1);
 171              		.loc 1 172 3 view .LVU23
 172 0002 0248     		ldr	r0, .L14
 173 0004 FFF7FEFF 		bl	HAL_FDCAN_IRQHandler
 174              	.LVL0:
 173:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN FDCAN1_IT0_IRQn 1 */
 174:Src/stm32h7xx_it.c **** 
 175:Src/stm32h7xx_it.c ****   /* USER CODE END FDCAN1_IT0_IRQn 1 */
 176:Src/stm32h7xx_it.c **** }
ARM GAS  /tmp/ccteX1la.s 			page 7


 175              		.loc 1 176 1 is_stmt 0 view .LVU24
 176 0008 08BD     		pop	{r3, pc}
 177              	.L15:
 178 000a 00BF     		.align	2
 179              	.L14:
 180 000c 00000000 		.word	hfdcan1
 181              		.cfi_endproc
 182              	.LFE147:
 184              		.section	.text.FDCAN1_IT1_IRQHandler,"ax",%progbits
 185              		.align	1
 186              		.global	FDCAN1_IT1_IRQHandler
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 191              	FDCAN1_IT1_IRQHandler:
 192              	.LFB148:
 177:Src/stm32h7xx_it.c **** 
 178:Src/stm32h7xx_it.c **** /**
 179:Src/stm32h7xx_it.c ****   * @brief This function handles FDCAN1 interrupt 1.
 180:Src/stm32h7xx_it.c ****   */
 181:Src/stm32h7xx_it.c **** void FDCAN1_IT1_IRQHandler(void)
 182:Src/stm32h7xx_it.c **** {
 193              		.loc 1 182 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 08B5     		push	{r3, lr}
 198              	.LCFI1:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 3, -8
 201              		.cfi_offset 14, -4
 183:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN FDCAN1_IT1_IRQn 0 */
 184:Src/stm32h7xx_it.c **** 
 185:Src/stm32h7xx_it.c ****   /* USER CODE END FDCAN1_IT1_IRQn 0 */
 186:Src/stm32h7xx_it.c ****   HAL_FDCAN_IRQHandler(&hfdcan1);
 202              		.loc 1 186 3 view .LVU26
 203 0002 0248     		ldr	r0, .L18
 204 0004 FFF7FEFF 		bl	HAL_FDCAN_IRQHandler
 205              	.LVL1:
 187:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN FDCAN1_IT1_IRQn 1 */
 188:Src/stm32h7xx_it.c **** 
 189:Src/stm32h7xx_it.c ****   /* USER CODE END FDCAN1_IT1_IRQn 1 */
 190:Src/stm32h7xx_it.c **** }
 206              		.loc 1 190 1 is_stmt 0 view .LVU27
 207 0008 08BD     		pop	{r3, pc}
 208              	.L19:
 209 000a 00BF     		.align	2
 210              	.L18:
 211 000c 00000000 		.word	hfdcan1
 212              		.cfi_endproc
 213              	.LFE148:
 215              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 216              		.align	1
 217              		.global	TIM1_UP_IRQHandler
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
ARM GAS  /tmp/ccteX1la.s 			page 8


 222              	TIM1_UP_IRQHandler:
 223              	.LFB149:
 191:Src/stm32h7xx_it.c **** 
 192:Src/stm32h7xx_it.c **** /**
 193:Src/stm32h7xx_it.c ****   * @brief This function handles TIM1 update interrupt.
 194:Src/stm32h7xx_it.c ****   */
 195:Src/stm32h7xx_it.c **** void TIM1_UP_IRQHandler(void)
 196:Src/stm32h7xx_it.c **** {
 224              		.loc 1 196 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 08B5     		push	{r3, lr}
 229              	.LCFI2:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 3, -8
 232              		.cfi_offset 14, -4
 197:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 0 */
 198:Src/stm32h7xx_it.c **** 
 199:Src/stm32h7xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 0 */
 200:Src/stm32h7xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 233              		.loc 1 200 3 view .LVU29
 234 0002 0248     		ldr	r0, .L22
 235 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 236              	.LVL2:
 201:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 1 */
 202:Src/stm32h7xx_it.c **** 
 203:Src/stm32h7xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 1 */
 204:Src/stm32h7xx_it.c **** }
 237              		.loc 1 204 1 is_stmt 0 view .LVU30
 238 0008 08BD     		pop	{r3, pc}
 239              	.L23:
 240 000a 00BF     		.align	2
 241              	.L22:
 242 000c 00000000 		.word	htim1
 243              		.cfi_endproc
 244              	.LFE149:
 246              		.section	.text.OTG_FS_IRQHandler,"ax",%progbits
 247              		.align	1
 248              		.global	OTG_FS_IRQHandler
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	OTG_FS_IRQHandler:
 254              	.LFB150:
 205:Src/stm32h7xx_it.c **** 
 206:Src/stm32h7xx_it.c **** /**
 207:Src/stm32h7xx_it.c ****   * @brief This function handles USB On The Go FS global interrupt.
 208:Src/stm32h7xx_it.c ****   */
 209:Src/stm32h7xx_it.c **** void OTG_FS_IRQHandler(void)
 210:Src/stm32h7xx_it.c **** {
 255              		.loc 1 210 1 is_stmt 1 view -0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259 0000 08B5     		push	{r3, lr}
 260              	.LCFI3:
ARM GAS  /tmp/ccteX1la.s 			page 9


 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 3, -8
 263              		.cfi_offset 14, -4
 211:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 0 */
 212:Src/stm32h7xx_it.c **** 
 213:Src/stm32h7xx_it.c ****   /* USER CODE END OTG_FS_IRQn 0 */
 214:Src/stm32h7xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 264              		.loc 1 214 3 view .LVU32
 265 0002 0248     		ldr	r0, .L26
 266 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 267              	.LVL3:
 215:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 1 */
 216:Src/stm32h7xx_it.c **** 
 217:Src/stm32h7xx_it.c ****   /* USER CODE END OTG_FS_IRQn 1 */
 218:Src/stm32h7xx_it.c **** }
 268              		.loc 1 218 1 is_stmt 0 view .LVU33
 269 0008 08BD     		pop	{r3, pc}
 270              	.L27:
 271 000a 00BF     		.align	2
 272              	.L26:
 273 000c 00000000 		.word	hpcd_USB_OTG_FS
 274              		.cfi_endproc
 275              	.LFE150:
 277              		.text
 278              	.Letext0:
 279              		.file 2 "/home/joseluiz/Programs/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux/arm-none-eabi/include
 280              		.file 3 "/home/joseluiz/Programs/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux/arm-none-eabi/include
 281              		.file 4 "../../Drivers/cmsis_device_h7/Include/stm32h743xx.h"
 282              		.file 5 "../../Drivers/cmsis_device_h7/Include/stm32h7xx.h"
 283              		.file 6 "../../Drivers/stm32h7xx_hal_driver/Inc/stm32h7xx_hal_def.h"
 284              		.file 7 "../../Drivers/stm32h7xx_hal_driver/Inc/stm32h7xx_hal_dma.h"
 285              		.file 8 "../../Drivers/stm32h7xx_hal_driver/Inc/stm32h7xx_hal_fdcan.h"
 286              		.file 9 "../../Drivers/stm32h7xx_hal_driver/Inc/stm32h7xx_hal_tim.h"
 287              		.file 10 "../../Drivers/stm32h7xx_hal_driver/Inc/stm32h7xx_ll_usb.h"
 288              		.file 11 "../../Drivers/stm32h7xx_hal_driver/Inc/stm32h7xx_hal_pcd.h"
ARM GAS  /tmp/ccteX1la.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_it.c
     /tmp/ccteX1la.s:19     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccteX1la.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccteX1la.s:43     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccteX1la.s:49     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccteX1la.s:66     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccteX1la.s:72     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccteX1la.s:89     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccteX1la.s:95     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccteX1la.s:112    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccteX1la.s:118    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccteX1la.s:135    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccteX1la.s:141    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccteX1la.s:154    .text.FDCAN1_IT0_IRQHandler:0000000000000000 $t
     /tmp/ccteX1la.s:160    .text.FDCAN1_IT0_IRQHandler:0000000000000000 FDCAN1_IT0_IRQHandler
     /tmp/ccteX1la.s:180    .text.FDCAN1_IT0_IRQHandler:000000000000000c $d
     /tmp/ccteX1la.s:185    .text.FDCAN1_IT1_IRQHandler:0000000000000000 $t
     /tmp/ccteX1la.s:191    .text.FDCAN1_IT1_IRQHandler:0000000000000000 FDCAN1_IT1_IRQHandler
     /tmp/ccteX1la.s:211    .text.FDCAN1_IT1_IRQHandler:000000000000000c $d
     /tmp/ccteX1la.s:216    .text.TIM1_UP_IRQHandler:0000000000000000 $t
     /tmp/ccteX1la.s:222    .text.TIM1_UP_IRQHandler:0000000000000000 TIM1_UP_IRQHandler
     /tmp/ccteX1la.s:242    .text.TIM1_UP_IRQHandler:000000000000000c $d
     /tmp/ccteX1la.s:247    .text.OTG_FS_IRQHandler:0000000000000000 $t
     /tmp/ccteX1la.s:253    .text.OTG_FS_IRQHandler:0000000000000000 OTG_FS_IRQHandler
     /tmp/ccteX1la.s:273    .text.OTG_FS_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_FDCAN_IRQHandler
hfdcan1
HAL_TIM_IRQHandler
htim1
HAL_PCD_IRQHandler
hpcd_USB_OTG_FS
