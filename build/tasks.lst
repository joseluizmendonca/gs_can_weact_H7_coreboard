ARM GAS  /tmp/ccjYyDGQ.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"tasks.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.prvIdleTask,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	prvIdleTask:
  25              	.LFB31:
  26              		.file 1 "../../Middlewares/Third_Party/FreeRTOS/tasks.c"
   1:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
   2:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * FreeRTOS Kernel V10.5.0
   3:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
   5:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * SPDX-License-Identifier: MIT
   6:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
   7:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * the Software without restriction, including without limitation the rights to
  10:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * subject to the following conditions:
  13:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
  14:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  15:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * copies or substantial portions of the Software.
  16:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
  17:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
  24:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * https://www.FreeRTOS.org
  25:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * https://github.com/FreeRTOS
  26:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
  27:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
  28:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
  29:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* Standard includes. */
  30:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #include <stdlib.h>
  31:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #include <string.h>
  32:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 2


  33:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  34:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  35:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * task.h is included from an application file. */
  36:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  37:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
  38:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* FreeRTOS includes. */
  39:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #include "FreeRTOS.h"
  40:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #include "task.h"
  41:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #include "timers.h"
  42:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #include "stack_macros.h"
  43:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
  44:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * for the header files above, but not in this file, in order to generate the
  47:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * correct privileged Vs unprivileged linkage and placement. */
  48:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
  50:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  51:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * functions but without including stdio.h here. */
  52:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  53:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
  54:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* At the bottom of this file are two optional functions that can be used
  55:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * to generate human readable text from the raw data generated by the
  56:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * uxTaskGetSystemState() function.  Note the formatting functions are provided
  57:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * for convenience only, and are NOT considered part of the kernel. */
  58:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #include <stdio.h>
  59:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  60:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
  61:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_PREEMPTION == 0 )
  62:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
  63:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* If the cooperative scheduler is being used then a yield should not be
  64:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * performed just because a higher priority task has been woken. */
  65:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define taskYIELD_IF_USING_PREEMPTION()
  66:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #else
  67:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define taskYIELD_IF_USING_PREEMPTION()    portYIELD_WITHIN_API()
  68:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
  69:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
  70:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  71:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define taskNOT_WAITING_NOTIFICATION              ( ( uint8_t ) 0 ) /* Must be zero as it is the in
  72:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define taskWAITING_NOTIFICATION                  ( ( uint8_t ) 1 )
  73:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define taskNOTIFICATION_RECEIVED                 ( ( uint8_t ) 2 )
  74:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
  75:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
  76:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  77:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * is used purely for checking the high water mark for tasks.
  78:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
  79:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define tskSTACK_FILL_BYTE                        ( 0xa5U )
  80:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
  81:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* Bits used to record how a task's stack and TCB were allocated. */
  82:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB    ( ( uint8_t ) 0 )
  83:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY        ( ( uint8_t ) 1 )
  84:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB     ( ( uint8_t ) 2 )
  85:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
  86:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  87:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * value so the high water mark can be determined.  If none of the following are
  88:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * set then don't fill the stack so there is no unnecessary dependency on memset. */
  89:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
ARM GAS  /tmp/ccjYyDGQ.s 			page 3


  90:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define tskSET_NEW_STACKS_TO_KNOWN_VALUE    1
  91:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #else
  92:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define tskSET_NEW_STACKS_TO_KNOWN_VALUE    0
  93:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
  94:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
  95:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
  96:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  97:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
  98:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define tskRUNNING_CHAR      ( 'X' )
  99:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define tskBLOCKED_CHAR      ( 'B' )
 100:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define tskREADY_CHAR        ( 'R' )
 101:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define tskDELETED_CHAR      ( 'D' )
 102:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define tskSUSPENDED_CHAR    ( 'S' )
 103:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 104:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 105:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to to
 106:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * be global, rather than file scope.
 107:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 108:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 109:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define static
 110:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
 111:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 112:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 113:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 114:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #ifndef configIDLE_TASK_NAME
 115:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define configIDLE_TASK_NAME    "IDLE"
 116:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
 117:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 118:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 119:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 120:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 121:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * performed in a generic way that is not optimised to any particular
 122:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * microcontroller architecture. */
 123:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 124:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* uxTopReadyPriority holds the priority of the highest priority ready
 125:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * state task. */
 126:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define taskRECORD_READY_PRIORITY( uxPriority ) \
 127:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {                                               \
 128:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( ( uxPriority ) > uxTopReadyPriority )   \
 129:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {                                           \
 130:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             uxTopReadyPriority = ( uxPriority );    \
 131:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }                                           \
 132:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     } /* taskRECORD_READY_PRIORITY */
 133:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 134:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 135:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 136:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define taskSELECT_HIGHEST_PRIORITY_TASK()                                \
 137:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {                                                                         \
 138:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxTopPriority = uxTopReadyPriority;                       \
 139:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                                                               \
 140:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Find the highest priority queue that contains ready tasks. */      \
 141:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) ) \
 142:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {                                                                     \
 143:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( uxTopPriority );                                    \
 144:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             --uxTopPriority;                                                  \
 145:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }                                                                     \
 146:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                                                               \
ARM GAS  /tmp/ccjYyDGQ.s 			page 4


 147:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of \
 148:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * the  same priority get an equal share of the processor time. */                    \
 149:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) ); \
 150:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uxTopReadyPriority = uxTopPriority;                                                   \
 151:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     } /* taskSELECT_HIGHEST_PRIORITY_TASK */
 152:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 153:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 154:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 155:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 156:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * they are only required when a port optimised method of task selection is
 157:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * being used. */
 158:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define taskRESET_READY_PRIORITY( uxPriority )
 159:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 160:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 161:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 162:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 163:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 164:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * performed in a way that is tailored to the particular microcontroller
 165:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * architecture being used. */
 166:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 167:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* A port optimised version is provided.  Call the port defined macros. */
 168:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define taskRECORD_READY_PRIORITY( uxPriority )    portRECORD_READY_PRIORITY( ( uxPriority ), u
 169:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 170:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 171:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 172:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define taskSELECT_HIGHEST_PRIORITY_TASK()                                                  \
 173:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {                                                                                           \
 174:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxTopPriority;                                                              \
 175:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                                                                                 \
 176:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Find the highest priority list that contains ready tasks. */                         \
 177:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );                          \
 178:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 ); \
 179:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );   \
 180:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     } /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 181:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 182:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 183:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 184:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* A port optimised version is provided, call it only if the TCB being reset
 185:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * is being referenced from a ready list.  If it is referenced from a delayed
 186:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * or suspended list then it won't be in a ready list. */
 187:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define taskRESET_READY_PRIORITY( uxPriority )                                                 
 188:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {                                                                                              
 189:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 
 190:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {                                                                                          
 191:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );                    
 192:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }                                                                                          
 193:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 194:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 195:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 196:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 197:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 198:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 199:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 200:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * count overflows. */
 201:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define taskSWITCH_DELAYED_LISTS()                                                \
 202:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {                                                                             \
 203:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         List_t * pxTemp;                                                          \
ARM GAS  /tmp/ccjYyDGQ.s 			page 5


 204:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                                                                   \
 205:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* The delayed tasks list should be empty when the lists are switched. */ \
 206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );               \
 207:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                                                                   \
 208:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTemp = pxDelayedTaskList;                                               \
 209:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxDelayedTaskList = pxOverflowDelayedTaskList;                            \
 210:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxOverflowDelayedTaskList = pxTemp;                                       \
 211:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xNumOfOverflows++;                                                        \
 212:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvResetNextTaskUnblockTime();                                            \
 213:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 214:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 215:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 216:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 217:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 218:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 219:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * the task.  It is inserted at the end of the list.
 220:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 221:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define prvAddTaskToReadyList( pxTCB )                                                             
 222:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     traceMOVED_TASK_TO_READY_STATE( pxTCB );                                                       
 223:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );                                            
 224:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listINSERT_END( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem )
 225:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 226:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 227:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 228:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 229:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Several functions take a TaskHandle_t parameter that can optionally be NULL,
 230:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 231:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 232:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 233:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 234:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #define prvGetTCBFromHandle( pxHandle )    ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle )
 235:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 236:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 237:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * of the task to which it belongs (coded to allow it to be held in reverse
 238:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * priority order).  However, it is occasionally borrowed for other purposes.  It
 239:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * is important its value is not updated due to a task priority change while it is
 240:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * being used for another purpose.  The following bit definition is used to inform
 241:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * the scheduler that the value should not be changed - in which case it is the
 242:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * responsibility of whichever module is using the value to ensure it gets set back
 243:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * to its original value when it is released. */
 244:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_16_BIT_TICKS == 1 )
 245:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define taskEVENT_LIST_ITEM_VALUE_IN_USE    0x8000U
 246:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #else
 247:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #define taskEVENT_LIST_ITEM_VALUE_IN_USE    0x80000000UL
 248:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
 249:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 250:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 251:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 252:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * and stores task state information, including a pointer to the task's context
 253:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * (the task's run time environment, including register values)
 254:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 255:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** typedef struct tskTaskControlBlock       /* The old naming convention is used to prevent breaking k
 256:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
 257:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     volatile StackType_t * pxTopOfStack; /*< Points to the location of the last item placed on the 
 258:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 259:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 260:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xMPU_SETTINGS xMPUSettings; /*< The MPU settings are defined as part of the port layer.  TH
ARM GAS  /tmp/ccjYyDGQ.s 			page 6


 261:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 262:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 263:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     ListItem_t xStateListItem;                  /*< The list that the state list item of a task is 
 264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     ListItem_t xEventListItem;                  /*< Used to reference a task from an event list. */
 265:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     UBaseType_t uxPriority;                     /*< The priority of the task.  0 is the lowest prio
 266:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     StackType_t * pxStack;                      /*< Points to the start of the stack. */
 267:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     char pcTaskName[ configMAX_TASK_NAME_LEN ]; /*< Descriptive name given to the task when created
 268:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 269:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 270:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         StackType_t * pxEndOfStack; /*< Points to the highest valid address for the stack. */
 271:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 272:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 273:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( portCRITICAL_NESTING_IN_TCB == 1 )
 274:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxCriticalNesting; /*< Holds the critical section nesting depth for ports that 
 275:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 276:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 277:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 278:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxTCBNumber;  /*< Stores a number that increments each time a TCB is created.  
 279:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxTaskNumber; /*< Stores a number specifically for use by third party trace cod
 280:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 281:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 282:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 283:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxBasePriority; /*< The priority last assigned to the task - used by the priori
 284:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxMutexesHeld;
 285:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 286:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 287:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 288:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TaskHookFunction_t pxTaskTag;
 289:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 290:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 291:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 292:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         void * pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 293:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 294:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 295:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( configGENERATE_RUN_TIME_STATS == 1 )
 296:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configRUN_TIME_COUNTER_TYPE ulRunTimeCounter; /*< Stores the amount of time the task has sp
 297:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 298:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 299:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
 300:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configTLS_BLOCK_TYPE xTLSBlock; /*< Memory block used as Thread Local Storage (TLS) Block f
 301:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 302:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 303:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 304:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         volatile uint32_t ulNotifiedValue[ configTASK_NOTIFICATION_ARRAY_ENTRIES ];
 305:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         volatile uint8_t ucNotifyState[ configTASK_NOTIFICATION_ARRAY_ENTRIES ];
 306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 307:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 308:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* See the comments in FreeRTOS.h with the definition of
 309:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 310:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been conso
 311:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucStaticallyAllocated;                     /*< Set to pdTRUE if the task is a stati
 312:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 313:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 314:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
 315:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucDelayAborted;
 316:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 317:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 7


 318:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( configUSE_POSIX_ERRNO == 1 )
 319:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         int iTaskErrno;
 320:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 321:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** } tskTCB;
 322:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 323:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 324:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * below to enable the use of older kernel aware debuggers. */
 325:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** typedef tskTCB TCB_t;
 326:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 327:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 328:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * which static variables must be declared volatile. */
 329:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** portDONT_DISCARD PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 330:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 331:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 332:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * xDelayedTaskList1 and xDelayedTaskList2 could be moved to function scope but
 333:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * doing so breaks some kernel aware debuggers and debuggers that rely on removing
 334:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * the static qualifier. */
 335:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ]; /*< Prioritised ready task
 336:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;                         /*< Delayed tasks. */
 337:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;                         /*< Delayed tasks (two lis
 338:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;              /*< Points to the delayed 
 339:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;      /*< Points to the delayed 
 340:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;                         /*< Tasks that have been r
 341:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 342:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 343:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 344:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static List_t xTasksWaitingTermination; /*< Tasks that have been deleted - but 
 345:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 346:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 347:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
 348:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 349:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 350:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 351:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static List_t xSuspendedTaskList; /*< Tasks that are currently suspended. */
 352:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 353:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
 354:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 355:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 356:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * the errno of the currently running task. */
 357:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 358:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     int FreeRTOS_errno = 0;
 359:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
 360:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 361:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* Other file private variables. --------------------------------*/
 362:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
 363:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 364:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority = tskIDLE_PRIORITY;
 365:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning = pdFALSE;
 366:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
 367:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending = pdFALSE;
 368:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
 369:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
 370:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised
 371:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle = NULL;                          /*< Holds the 
 372:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 373:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* Improve support for OpenOCD. The kernel tracks Ready tasks via priority lists.
 374:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * For tracking the state of remote threads, OpenOCD uses uxTopUsedPriority
ARM GAS  /tmp/ccjYyDGQ.s 			page 8


 375:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * to determine the number of priority lists to read back from the remote target. */
 376:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** const volatile UBaseType_t uxTopUsedPriority = configMAX_PRIORITIES - 1U;
 377:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 378:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 379:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * interrupts must not manipulate the xStateListItem of a TCB, or any of the
 380:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * lists the xStateListItem can be referenced from, if the scheduler is suspended.
 381:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * If an interrupt needs to unblock a task while the scheduler is suspended then it
 382:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * moves the task's event list item into the xPendingReadyList, ready for the
 383:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * kernel to move the task from the pending ready list into the real ready list
 384:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * when the scheduler is unsuspended.  The pending ready list itself can only be
 385:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * accessed from a critical section. */
 386:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) pdFALSE;
 387:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 388:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 389:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 390:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* Do not move these variables to function scope as doing so prevents the
 391:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * code working with debuggers that need to remove the static qualifier. */
 392:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static configRUN_TIME_COUNTER_TYPE ulTaskSwitchedInTime = 0UL;    /*< Holds the
 393:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static volatile configRUN_TIME_COUNTER_TYPE ulTotalRunTime = 0UL; /*< Holds the
 394:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 395:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
 396:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 397:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*lint -restore */
 398:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 399:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 400:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 401:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* File private functions. --------------------------------*/
 402:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 403:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /**
 404:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 405:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 406:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * is in any other state.
 407:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 408:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 409:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 410:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 411:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 412:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 413:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 414:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 415:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 416:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * automatically upon the creation of the first task.
 417:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 418:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 419:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 420:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 421:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 422:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 423:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * creation of the first user task.
 424:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
 425:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 426:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 427:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
 428:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * void prvIdleTask( void *pvParameters );
 429:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
 430:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 431:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters ) PRIVILEGED_FUNCTION;
ARM GAS  /tmp/ccjYyDGQ.s 			page 9


 432:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 433:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 434:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 435:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * including the stack pointed to by the TCB.
 436:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
 437:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 438:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 439:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 440:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 441:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 442:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static void prvDeleteTCB( TCB_t * pxTCB ) PRIVILEGED_FUNCTION;
 443:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 444:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
 445:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 446:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 447:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 448:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 449:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * and its TCB deleted.
 450:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 451:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 452:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 453:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 454:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 455:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * either the current or the overflow delayed task list.
 456:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 457:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
 458:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                             const BaseType_t xCanBlockIndefinitely ) PRIVILEGED_FUN
 459:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 460:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 461:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 462:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 463:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * a suspended list, etc.).
 464:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
 465:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 466:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * NORMAL APPLICATION CODE.
 467:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 468:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 469:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 470:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
 471:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                                      List_t * pxList,
 472:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                                      eTaskState eState ) PRIVILEGED_FUNCTION;
 473:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 474:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
 475:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 476:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 477:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 478:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 479:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 480:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 481:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 482:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static TCB_t * prvSearchForNameWithinSingleList( List_t * pxList,
 483:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                                      const char pcNameToQuery[] ) PRIVILEGED_FUNCTI
 484:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 485:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
 486:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 487:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 488:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
ARM GAS  /tmp/ccjYyDGQ.s 			page 10


 489:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 490:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * determining how much of the stack remains at the original preset value.
 491:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 492:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 493:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 494:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVIL
 495:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 496:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
 497:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 498:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 499:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 500:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * next move a task from the Blocked state to the Running state.
 501:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
 502:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 503:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 504:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 505:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * set to a value other than 1.
 506:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 507:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 508:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 509:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 510:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 511:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
 512:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 513:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 514:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 515:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * will exit the Blocked state.
 516:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 517:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** static void prvResetNextTaskUnblockTime( void ) PRIVILEGED_FUNCTION;
 518:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 519:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 )
 520:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 521:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 522:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Helper function used to pad task names with spaces when printing out
 523:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * human readable tables of task information.
 524:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 525:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static char * prvWriteNameToBuffer( char * pcBuffer,
 526:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                         const char * pcTaskName ) PRIVILEGED_FUNCTION;
 527:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 528:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
 529:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 530:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 531:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 532:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * dynamically to fill in the structure's members.
 533:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 534:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 535:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   const char * const pcName, /*lint !e971 Unqualified char types ar
 536:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   const uint32_t ulStackDepth,
 537:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   void * const pvParameters,
 538:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   UBaseType_t uxPriority,
 539:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   TaskHandle_t * const pxCreatedTask,
 540:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   TCB_t * pxNewTCB,
 541:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 542:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 543:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 544:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * Called after a new task has been created and initialised to place the task
 545:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * under the control of the scheduler.
ARM GAS  /tmp/ccjYyDGQ.s 			page 11


 546:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 547:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB ) PRIVILEGED_FUNCTION;
 548:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 549:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
 550:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 551:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 552:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * called by the function.
 553:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
 554:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 555:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 556:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 557:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 558:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
 559:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 560:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 561:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 562:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 563:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 564:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TaskHandle_t xTaskCreateStatic( TaskFunction_t pxTaskCode,
 565:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                     const char * const pcName, /*lint !e971 Unqualified char types 
 566:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                     const uint32_t ulStackDepth,
 567:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                     void * const pvParameters,
 568:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                     UBaseType_t uxPriority,
 569:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                     StackType_t * const puxStackBuffer,
 570:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                     StaticTask_t * const pxTaskBuffer )
 571:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 572:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 573:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TaskHandle_t xReturn;
 574:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 575:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( puxStackBuffer != NULL );
 576:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( pxTaskBuffer != NULL );
 577:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 578:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configASSERT_DEFINED == 1 )
 579:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 580:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Sanity check that the size of the structure used to declare a
 581:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * variable of type StaticTask_t equals the size of the real task
 582:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * structure. */
 583:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             volatile size_t xSize = sizeof( StaticTask_t );
 584:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( xSize == sizeof( TCB_t ) );
 585:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 586:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 587:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* configASSERT_DEFINED */
 588:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 589:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 590:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 591:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* The memory used for the task's TCB and stack are passed into this
 592:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * function - use them. */
 593:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the stru
 594:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 595:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 596:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 597:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has be
 598:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 599:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Tasks can be created statically or dynamically, so note this
 600:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * task was created statically in case the task is later deleted. */
 601:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 602:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
ARM GAS  /tmp/ccjYyDGQ.s 			page 12


 603:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 604:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 605:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xRet
 606:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 607:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 608:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
 609:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 610:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = NULL;
 611:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 612:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 613:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
 614:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 615:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 616:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 617:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 618:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 619:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 620:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 621:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition,
 622:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                             TaskHandle_t * pxCreatedTask )
 623:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 624:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 625:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 626:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 627:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 628:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 629:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 630:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NUL
 631:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 632:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends
 633:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * on the implementation of the port malloc function and whether or
 634:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * not static allocation is being used. */
 635:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 636:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 637:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 638:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Store the stack location in the TCB. */
 639:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 640:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 641:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 642:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 643:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Tasks can be created statically or dynamically, so note this
 644:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * task was created statically in case the task is later deleted. */
 645:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 646:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 647:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 648:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 649:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             prvInitialiseNewTask( pxTaskDefinition->pvTaskCode,
 650:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   pxTaskDefinition->pcName,
 651:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   ( uint32_t ) pxTaskDefinition->usStackDepth,
 652:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   pxTaskDefinition->pvParameters,
 653:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   pxTaskDefinition->uxPriority,
 654:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   pxCreatedTask, pxNewTCB,
 655:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   pxTaskDefinition->xRegions );
 656:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 657:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 658:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = pdPASS;
 659:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
ARM GAS  /tmp/ccjYyDGQ.s 			page 13


 660:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 661:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
 662:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 663:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 664:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 665:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 666:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 667:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 668:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 669:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition,
 670:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                       TaskHandle_t * pxCreatedTask )
 671:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 672:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 673:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 674:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 675:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( pxTaskDefinition->puxStackBuffer );
 676:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 677:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( pxTaskDefinition->puxStackBuffer != NULL )
 678:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 679:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends
 680:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * on the implementation of the port malloc function and whether or
 681:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * not static allocation is being used. */
 682:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 683:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 684:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxNewTCB != NULL )
 685:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 686:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 687:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 688:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Store the stack location in the TCB. */
 689:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 690:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 691:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 692:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 693:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Tasks can be created statically or dynamically, so note
 694:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * this task had a statically allocated stack in case it is
 695:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * later deleted.  The TCB was allocated dynamically. */
 696:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 697:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 698:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 699:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 700:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvInitialiseNewTask( pxTaskDefinition->pvTaskCode,
 701:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                       pxTaskDefinition->pcName,
 702:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                       ( uint32_t ) pxTaskDefinition->usStackDepth,
 703:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                       pxTaskDefinition->pvParameters,
 704:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                       pxTaskDefinition->uxPriority,
 705:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                       pxCreatedTask, pxNewTCB,
 706:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                       pxTaskDefinition->xRegions );
 707:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 708:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddNewTaskToReadyList( pxNewTCB );
 709:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 710:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 711:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 712:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 713:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
 714:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 715:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 716:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
ARM GAS  /tmp/ccjYyDGQ.s 			page 14


 717:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 718:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 719:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 720:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 721:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
 722:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             const char * const pcName, /*lint !e971 Unqualified char types are allo
 723:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             const configSTACK_DEPTH_TYPE usStackDepth,
 724:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             void * const pvParameters,
 725:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             UBaseType_t uxPriority,
 726:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             TaskHandle_t * const pxCreatedTask )
 727:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 728:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 729:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 730:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 731:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If the stack grows down then allocate the stack then the TCB so the stack
 732:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * does not grow into the TCB.  Likewise if the stack grows up then allocate
 733:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * the TCB then the stack. */
 734:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( portSTACK_GROWTH > 0 )
 735:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 736:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends on
 737:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * the implementation of the port malloc function and whether or not static
 738:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * allocation is being used. */
 739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 740:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 741:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxNewTCB != NULL )
 742:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 743:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 744:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 745:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Allocate space for the stack used by the task being created.
 746:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * The base of the stack memory stored in the TCB so the task can
 747:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * be deleted later if required. */
 748:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxNewTCB->pxStack = ( StackType_t * ) pvPortMallocStack( ( ( ( size_t ) usStackDept
 749:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 750:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxNewTCB->pxStack == NULL )
 751:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 752:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Could not allocate the stack.  Delete the allocated TCB. */
 753:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     vPortFree( pxNewTCB );
 754:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxNewTCB = NULL;
 755:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 756:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 757:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 758:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #else /* portSTACK_GROWTH */
 759:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 760:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             StackType_t * pxStack;
 761:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 762:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Allocate space for the stack used by the task being created. */
 763:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) );
 764:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 765:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxStack != NULL )
 766:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 767:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Allocate space for the TCB. */
 768:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All va
 769:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 770:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxNewTCB != NULL )
 771:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 772:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 773:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 15


 774:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Store the stack location in the TCB. */
 775:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxNewTCB->pxStack = pxStack;
 776:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 777:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
 778:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 779:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The stack cannot be used as the TCB was not created.  Free
 780:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * it again. */
 781:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     vPortFreeStack( pxStack );
 782:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 783:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 784:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
 785:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 786:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxNewTCB = NULL;
 787:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 788:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 789:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* portSTACK_GROWTH */
 790:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 791:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( pxNewTCB != NULL )
 792:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 793:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has be
 794:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Tasks can be created statically or dynamically, so note this
 796:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * task was created dynamically in case it is later deleted. */
 797:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 798:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 799:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 800:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 801:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPr
 802:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 803:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = pdPASS;
 804:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 805:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
 806:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 807:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 808:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 809:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 810:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
 811:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 812:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 813:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 814:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 815:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 816:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 817:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   const char * const pcName, /*lint !e971 Unqualified char types ar
 818:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   const uint32_t ulStackDepth,
 819:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   void * const pvParameters,
 820:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   UBaseType_t uxPriority,
 821:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   TaskHandle_t * const pxCreatedTask,
 822:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   TCB_t * pxNewTCB,
 823:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   const MemoryRegion_t * const xRegions )
 824:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
 825:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     StackType_t * pxTopOfStack;
 826:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     UBaseType_t x;
 827:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 828:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 829:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Should the task be created in privileged mode? */
 830:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xRunPrivileged;
ARM GAS  /tmp/ccjYyDGQ.s 			page 16


 831:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 832:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 833:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 834:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xRunPrivileged = pdTRUE;
 835:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 836:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
 837:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 838:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xRunPrivileged = pdFALSE;
 839:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 840:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uxPriority &= ~portPRIVILEGE_BIT;
 841:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif /* portUSING_MPU_WRAPPERS == 1 */
 842:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 843:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Avoid dependency on memset() if it is not required. */
 844:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 845:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 846:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Fill the stack with a known value to assist debugging. */
 847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * s
 848:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 849:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 850:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 851:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Calculate the top of stack address.  This depends on whether the stack
 852:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * grows from high memory to low (as per the 80x86) or vice versa.
 853:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * portSTACK_GROWTH is used to make the result positive or negative as required
 854:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * by the port. */
 855:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( portSTACK_GROWTH < 0 )
 856:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 857:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 858:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 859:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 860:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Check the alignment of the calculated top of stack is correct. */
 861:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBY
 862:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 863:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configRECORD_STACK_HIGH_ADDRESS == 1 )
 864:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 865:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Also record the stack's high address, which may assist
 866:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * debugging. */
 867:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxNewTCB->pxEndOfStack = pxTopOfStack;
 868:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 869:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* configRECORD_STACK_HIGH_ADDRESS */
 870:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 871:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #else /* portSTACK_GROWTH */
 872:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 873:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTopOfStack = pxNewTCB->pxStack;
 874:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 875:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Check the alignment of the stack buffer is correct. */
 876:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) p
 877:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 878:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* The other extreme of the stack space is required if stack checking is
 879:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * performed. */
 880:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 881:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 882:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif /* portSTACK_GROWTH */
 883:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 884:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Store the task name in the TCB. */
 885:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     if( pcName != NULL )
 886:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 887:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
ARM GAS  /tmp/ccjYyDGQ.s 			page 17


 888:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 889:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 890:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 891:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 892:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * configMAX_TASK_NAME_LEN characters just in case the memory after the
 893:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * string is not accessible (extremely unlikely). */
 894:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pcName[ x ] == ( char ) 0x00 )
 895:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 896:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 break;
 897:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 898:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
 899:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 900:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
 901:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 902:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 903:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 904:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Ensure the name string is terminated in the case that the string length
 905:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * was greater or equal to configMAX_TASK_NAME_LEN. */
 906:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 907:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 908:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     else
 909:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 910:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 911:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 912:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 913:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* This is used as an array index so must ensure it's not too large. */
 914:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( uxPriority < configMAX_PRIORITIES );
 915:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 916:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 917:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 918:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 919:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 920:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     else
 921:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 922:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 923:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 924:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 925:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     pxNewTCB->uxPriority = uxPriority;
 926:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 927:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 928:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxNewTCB->uxBasePriority = uxPriority;
 929:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 930:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif /* configUSE_MUTEXES */
 931:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 932:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 933:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 934:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 935:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 936:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * back to  the containing TCB from a generic item in a list. */
 937:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 938:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 939:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Event lists are always in priority order. */
 940:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - (
 941:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 942:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 943:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 944:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
ARM GAS  /tmp/ccjYyDGQ.s 			page 18


 945:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStac
 946:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 947:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #else
 948:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 949:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Avoid compiler warning about unreferenced parameter. */
 950:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         ( void ) xRegions;
 951:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 952:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 953:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 954:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
 955:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 956:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Allocate and initialize memory for the task's TLS Block. */
 957:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configINIT_TLS_BLOCK( pxNewTCB->xTLSBlock );
 958:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 959:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
 960:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 961:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Initialize the TCB stack to look as if the task was already running,
 962:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * but had been interrupted by the scheduler.  The return address is set
 963:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * to the start of the task function. Once the stack has been initialised
 964:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * the top of stack variable is updated. */
 965:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 966:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 967:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If the port has capability to detect stack overflow,
 968:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * pass the stack end address to the stack initialization
 969:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * function as well. */
 970:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( portHAS_STACK_OVERFLOW_CHECKING == 1 )
 971:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 972:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #if ( portSTACK_GROWTH < 0 )
 973:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 974:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, px
 975:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 976:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #else /* portSTACK_GROWTH */
 977:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 978:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStac
 979:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 980:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #endif /* portSTACK_GROWTH */
 981:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 982:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #else /* portHAS_STACK_OVERFLOW_CHECKING */
 983:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 984:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters,
 985:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 986:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* portHAS_STACK_OVERFLOW_CHECKING */
 987:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 988:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #else /* portUSING_MPU_WRAPPERS */
 989:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 990:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If the port has capability to detect stack overflow,
 991:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * pass the stack end address to the stack initialization
 992:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * function as well. */
 993:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( portHAS_STACK_OVERFLOW_CHECKING == 1 )
 994:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 995:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #if ( portSTACK_GROWTH < 0 )
 996:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 997:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, px
 998:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 999:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #else /* portSTACK_GROWTH */
1000:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1001:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStac
ARM GAS  /tmp/ccjYyDGQ.s 			page 19


1002:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1003:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #endif /* portSTACK_GROWTH */
1004:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1005:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #else /* portHAS_STACK_OVERFLOW_CHECKING */
1006:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1007:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters 
1008:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1009:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* portHAS_STACK_OVERFLOW_CHECKING */
1010:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1011:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif /* portUSING_MPU_WRAPPERS */
1012:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1013:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     if( pxCreatedTask != NULL )
1014:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1015:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Pass the handle out in an anonymous way.  The handle can be used to
1016:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * change the created task's priority, delete the created task, etc.*/
1017:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1018:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1019:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     else
1020:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1021:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
1022:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1023:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
1024:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1025:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1026:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
1027:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
1028:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
1029:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * updated. */
1030:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
1031:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1032:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uxCurrentNumberOfTasks++;
1033:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1034:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( pxCurrentTCB == NULL )
1035:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1036:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* There are no other tasks, or all the other tasks are in
1037:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * the suspended state - make this the current task. */
1038:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxCurrentTCB = pxNewTCB;
1039:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1040:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1041:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1042:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* This is the first task to be created so do the preliminary
1043:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * initialisation required.  We will not recover if this call
1044:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * fails, but we will report the failure. */
1045:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvInitialiseTaskLists();
1046:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1047:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
1048:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1049:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1050:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1051:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1052:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
1053:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If the scheduler is not already running, make this task the
1055:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * current task if it is the highest priority task to be created
1056:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * so far. */
1057:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( xSchedulerRunning == pdFALSE )
1058:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
ARM GAS  /tmp/ccjYyDGQ.s 			page 20


1059:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1060:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1061:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxCurrentTCB = pxNewTCB;
1062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
1064:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1065:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1066:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1067:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1068:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
1069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1070:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1071:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1072:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1073:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1074:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uxTaskNumber++;
1075:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1076:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configUSE_TRACE_FACILITY == 1 )
1077:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1078:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Add a counter into the TCB for tracing only. */
1079:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxNewTCB->uxTCBNumber = uxTaskNumber;
1080:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1081:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* configUSE_TRACE_FACILITY */
1082:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_CREATE( pxNewTCB );
1083:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxNewTCB );
1085:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1086:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portSETUP_TCB( pxNewTCB );
1087:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1088:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
1089:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1090:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     if( xSchedulerRunning != pdFALSE )
1091:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1092:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If the created task is of a higher priority than the current task
1093:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * then it should run now. */
1094:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1095:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1096:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             taskYIELD_IF_USING_PREEMPTION();
1097:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1098:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
1099:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1100:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1101:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1102:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     else
1104:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1105:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
1106:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1107:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
1108:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1109:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1110:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1111:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1112:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskDelete( TaskHandle_t xTaskToDelete )
1113:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1114:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
1115:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 21


1116:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1117:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1118:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the calling task that is
1119:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * being deleted. */
1120:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1121:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1122:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Remove task from the ready/delayed list. */
1123:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1124:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1125:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1126:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1127:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
1128:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1129:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1130:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1131:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1132:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Is the task waiting on an event also? */
1133:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1134:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1135:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1136:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1137:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
1138:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1139:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1140:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1141:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1142:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Increment the uxTaskNumber also so kernel aware debuggers can
1143:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * detect that the task lists need re-generating.  This is done before
1144:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1145:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * not return. */
1146:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             uxTaskNumber++;
1147:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1148:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxTCB == pxCurrentTCB )
1149:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1150:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* A task is deleting itself.  This cannot complete within the
1151:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * task itself, as a context switch to another task is required.
1152:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * Place the task in the termination list.  The idle task will
1153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * check the termination list and free up any memory allocated by
1154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * the scheduler for the TCB and stack of the deleted task. */
1155:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1156:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1157:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Increment the ucTasksDeleted variable so the idle task knows
1158:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * there is a task that has been deleted and that it should therefore
1159:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * check the xTasksWaitingTermination list. */
1160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 ++uxDeletedTasksWaitingCleanUp;
1161:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1162:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1163:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1164:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 traceTASK_DELETE( pxTCB );
1165:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1166:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* The pre-delete hook is primarily for the Windows simulator,
1167:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * in which Windows specific clean up operations are performed,
1168:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * after which it is not possible to yield away from this task -
1169:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * hence xYieldPending is used to latch that a context switch is
1170:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * required. */
1171:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1172:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
ARM GAS  /tmp/ccjYyDGQ.s 			page 22


1173:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
1174:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1175:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 --uxCurrentNumberOfTasks;
1176:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 traceTASK_DELETE( pxTCB );
1177:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1178:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Reset the next expected unblock time in case it referred to
1179:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * the task that has just been deleted. */
1180:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvResetNextTaskUnblockTime();
1181:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1182:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1183:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1184:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1185:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If the task is not deleting itself, call prvDeleteTCB from outside of
1186:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * critical section. If a task deletes itself, prvDeleteTCB is called
1187:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * from prvCheckTasksWaitingTermination which is called from Idle task. */
1188:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( pxTCB != pxCurrentTCB )
1189:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1190:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             prvDeleteTCB( pxTCB );
1191:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1192:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1193:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Force a reschedule if it is the currently running task that has just
1194:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * been deleted. */
1195:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
1196:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1197:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxTCB == pxCurrentTCB )
1198:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1199:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 configASSERT( uxSchedulerSuspended == 0 );
1200:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
1201:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1202:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
1203:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1204:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1205:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1207:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1208:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1209:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1210:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1211:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1212:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskDelayUntil == 1 )
1213:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1214:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xTaskDelayUntil( TickType_t * const pxPreviousWakeTime,
1215:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                 const TickType_t xTimeIncrement )
1216:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1217:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TickType_t xTimeToWake;
1218:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1219:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1220:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( pxPreviousWakeTime );
1221:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
1222:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
1223:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1224:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         vTaskSuspendAll();
1225:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1226:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Minor optimisation.  The tick count cannot change in this
1227:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * block. */
1228:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             const TickType_t xConstTickCount = xTickCount;
1229:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 23


1230:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Generate the tick time at which the task wants to wake. */
1231:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1232:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1233:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( xConstTickCount < *pxPreviousWakeTime )
1234:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1235:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* The tick count has overflowed since this function was
1236:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * lasted called.  In this case the only time we should ever
1237:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * actually delay is if the wake time has also  overflowed,
1238:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * and the wake time is greater than the tick time.  When this
1239:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * is the case it is as if neither time had overflowed. */
1240:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1241:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1242:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xShouldDelay = pdTRUE;
1243:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1244:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
1245:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1246:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1247:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1248:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1249:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
1250:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1251:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* The tick time has not overflowed.  In this case we will
1252:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * delay if either the wake time has overflowed, and/or the
1253:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * tick time is less than the wake time. */
1254:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1255:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1256:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xShouldDelay = pdTRUE;
1257:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1258:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
1259:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1260:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1261:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1262:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1263:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Update the wake time ready for the next call. */
1265:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             *pxPreviousWakeTime = xTimeToWake;
1266:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1267:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( xShouldDelay != pdFALSE )
1268:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1269:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 traceTASK_DELAY_UNTIL( xTimeToWake );
1270:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1271:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* prvAddCurrentTaskToDelayedList() needs the block time, not
1272:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * the time to wake, so subtract the current tick count. */
1273:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1274:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1275:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
1276:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1277:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1278:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1279:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1280:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xAlreadyYielded = xTaskResumeAll();
1281:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1282:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Force a reschedule if xTaskResumeAll has not already done so, we may
1283:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * have put ourselves to sleep. */
1284:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xAlreadyYielded == pdFALSE )
1285:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1286:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             portYIELD_WITHIN_API();
ARM GAS  /tmp/ccjYyDGQ.s 			page 24


1287:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1288:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
1289:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1290:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1291:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1292:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1293:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xShouldDelay;
1294:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1295:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1296:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskDelayUntil */
1297:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1298:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1299:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1300:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1301:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskDelay( const TickType_t xTicksToDelay )
1302:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1303:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
1304:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1305:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* A delay time of zero just forces a reschedule. */
1306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xTicksToDelay > ( TickType_t ) 0U )
1307:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1308:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( uxSchedulerSuspended == 0 );
1309:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vTaskSuspendAll();
1310:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1311:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 traceTASK_DELAY();
1312:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1313:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* A task that is removed from the event list while the
1314:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * scheduler is suspended will not get placed in the ready
1315:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * list or removed from the blocked list until the scheduler
1316:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * is resumed.
1317:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  *
1318:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * This task cannot be in an event list as it is the currently
1319:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * executing task. */
1320:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1321:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1322:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xAlreadyYielded = xTaskResumeAll();
1323:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1324:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
1325:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1326:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1327:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1328:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1329:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Force a reschedule if xTaskResumeAll has not already done so, we may
1330:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * have put ourselves to sleep. */
1331:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xAlreadyYielded == pdFALSE )
1332:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1333:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             portYIELD_WITHIN_API();
1334:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1335:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
1336:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1337:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1338:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1339:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1340:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1341:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1342:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1343:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 25


1344:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDe
1345:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1346:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     eTaskState eTaskGetState( TaskHandle_t xTask )
1347:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1348:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         eTaskState eReturn;
1349:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         List_t const * pxStateList, * pxDelayedList, * pxOverflowedDelayedList;
1350:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
1351:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1352:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( pxTCB );
1353:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1354:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( pxTCB == pxCurrentTCB )
1355:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1356:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* The task calling this function is querying its own state. */
1357:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             eReturn = eRunning;
1358:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1359:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
1360:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1361:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
1362:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1363:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1364:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxDelayedList = pxDelayedTaskList;
1365:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1366:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1367:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
1368:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1369:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1370:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1371:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* The task being queried is referenced from one of the Blocked
1372:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * lists. */
1373:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 eReturn = eBlocked;
1374:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1375:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1376:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskSuspend == 1 )
1377:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else if( pxStateList == &xSuspendedTaskList )
1378:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1379:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The task being queried is referenced from the suspended
1380:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * list.  Is it genuinely suspended or is it blocked
1381:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * indefinitely? */
1382:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1383:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
1384:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         #if ( configUSE_TASK_NOTIFICATIONS == 1 )
1385:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
1386:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             BaseType_t x;
1387:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1388:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             /* The task does not appear on the event list item of
1389:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                              * and of the RTOS objects, but could still be in the
1390:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                              * blocked state if it is waiting on its notification
1391:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                              * rather than waiting on an object.  If not, is
1392:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                              * suspended. */
1393:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             eReturn = eSuspended;
1394:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1395:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             for( x = 0; x < configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
1396:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             {
1397:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                 if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
1398:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                 {
1399:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                     eReturn = eBlocked;
1400:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                     break;
ARM GAS  /tmp/ccjYyDGQ.s 			page 26


1401:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                 }
1402:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             }
1403:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
1404:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         #else /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1405:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
1406:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             eReturn = eSuspended;
1407:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
1408:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1409:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
1410:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
1411:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
1412:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         eReturn = eBlocked;
1413:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
1414:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1415:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #endif /* if ( INCLUDE_vTaskSuspend == 1 ) */
1416:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1417:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskDelete == 1 )
1418:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1419:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1420:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The task being queried is referenced from the deleted
1421:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * tasks list, or it is not referenced from any lists at
1422:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * all. */
1423:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     eReturn = eDeleted;
1424:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1425:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #endif
1426:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1427:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer
1428:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1429:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* If the task is not in any other state, it must be in the
1430:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * Ready (including pending ready) state. */
1431:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 eReturn = eReady;
1432:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1433:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1434:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1435:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return eReturn;
1436:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1437:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1438:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1439:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1440:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1441:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1442:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1443:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1444:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1445:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
1446:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
1447:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1448:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1449:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1450:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the priority of the task
1451:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * that called uxTaskPriorityGet() that is being queried. */
1452:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1453:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
1454:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1455:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1456:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1457:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return uxReturn;
ARM GAS  /tmp/ccjYyDGQ.s 			page 27


1458:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1459:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1460:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1461:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1462:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1463:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1464:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1465:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1466:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1467:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
1468:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxReturn, uxSavedInterruptState;
1469:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1470:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
1471:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
1472:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
1473:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
1474:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1475:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
1476:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1477:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
1478:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
1479:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
1480:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
1481:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
1482:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
1483:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
1484:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * provided on the following link:
1485:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1486:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1487:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1488:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1489:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1490:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the priority of the calling
1491:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * task that is being queried. */
1492:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1493:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
1494:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1495:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1496:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1497:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return uxReturn;
1498:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1499:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1500:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1501:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1502:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1503:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1504:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1505:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskPrioritySet( TaskHandle_t xTask,
1506:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                            UBaseType_t uxNewPriority )
1507:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1508:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
1509:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1510:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
1511:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1512:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxNewPriority < configMAX_PRIORITIES );
1513:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1514:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Ensure the new priority is valid. */
ARM GAS  /tmp/ccjYyDGQ.s 			page 28


1515:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1516:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1517:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1518:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1519:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
1520:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1521:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1522:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1523:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1524:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1525:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1526:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the priority of the calling
1527:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * task that is being changed. */
1528:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1529:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1530:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1531:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1532:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #if ( configUSE_MUTEXES == 1 )
1533:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1534:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxCurrentBasePriority = pxTCB->uxBasePriority;
1535:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1536:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #else
1537:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1538:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxCurrentBasePriority = pxTCB->uxPriority;
1539:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1540:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #endif
1541:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1542:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( uxCurrentBasePriority != uxNewPriority )
1543:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1544:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* The priority change may have readied a task of higher
1545:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * priority than the calling task. */
1546:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( uxNewPriority > uxCurrentBasePriority )
1547:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1548:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( pxTCB != pxCurrentTCB )
1549:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
1550:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* The priority of a task other than the currently
1551:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * running task is being raised.  Is the priority being
1552:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * raised above that of the running task? */
1553:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         if( uxNewPriority >= pxCurrentTCB->uxPriority )
1554:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
1555:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             xYieldRequired = pdTRUE;
1556:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
1557:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         else
1558:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
1559:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
1560:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
1561:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
1562:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
1563:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
1564:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* The priority of the running task is being raised,
1565:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * but the running task must already be the highest
1566:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * priority task able to run so no yield is required. */
1567:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
1568:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1569:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else if( pxTCB == pxCurrentTCB )
1570:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1571:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Setting the priority of the running task down means
ARM GAS  /tmp/ccjYyDGQ.s 			page 29


1572:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * there may now be another task of higher priority that
1573:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * is ready to execute. */
1574:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xYieldRequired = pdTRUE;
1575:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1576:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
1577:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1578:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Setting the priority of any other task down does not
1579:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * require a yield as the running task must be above the
1580:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * new priority of the task being modified. */
1581:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1582:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1583:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Remember the ready list the task might be referenced from
1584:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * before its uxPriority member is changed so the
1585:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * taskRESET_READY_PRIORITY() macro can function correctly. */
1586:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxPriorityUsedOnEntry = pxTCB->uxPriority;
1587:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1588:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #if ( configUSE_MUTEXES == 1 )
1589:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1590:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Only change the priority being used if the task is not
1591:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * currently using an inherited priority. */
1592:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1593:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
1594:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         pxTCB->uxPriority = uxNewPriority;
1595:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
1596:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
1597:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
1598:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1599:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
1600:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1601:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The base priority gets set whatever. */
1602:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxTCB->uxBasePriority = uxNewPriority;
1603:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1604:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #else /* if ( configUSE_MUTEXES == 1 ) */
1605:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1606:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = uxNewPriority;
1607:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1608:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #endif /* if ( configUSE_MUTEXES == 1 ) */
1609:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1610:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Only reset the event list item value if the value is not
1611:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * being used for anything else. */
1612:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_V
1613:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1614:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX
1615:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1616:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
1617:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1618:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1619:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1620:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1621:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* If the task is in the blocked or suspended list we need do
1622:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * nothing more than change its priority variable. However, if
1623:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * the task is in a ready list it needs to be removed and placed
1624:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * in the list appropriate to its new priority. */
1625:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( px
1626:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1627:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The task is currently in its ready list - remove before
1628:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * adding it to its new ready list.  As we are in a critical
ARM GAS  /tmp/ccjYyDGQ.s 			page 30


1629:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * section we can do this even if the scheduler is suspended. */
1630:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1631:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
1632:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* It is known that the task is in its ready list so
1633:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * there is no need to check again and the port level
1634:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * reset macro can be called directly. */
1635:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1636:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
1637:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
1638:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
1639:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1640:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
1641:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1642:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1643:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1644:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
1645:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1646:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1647:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1648:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1649:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( xYieldRequired != pdFALSE )
1650:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1651:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
1652:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1653:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
1654:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1655:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1656:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1657:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1658:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Remove compiler warning about unused variables when the port
1659:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * optimised task selection is not being used. */
1660:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 ( void ) uxPriorityUsedOnEntry;
1661:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1662:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1663:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1664:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1665:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1666:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1667:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1668:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1669:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1670:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1671:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1672:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1673:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
1674:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1675:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1676:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1677:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the running task that is
1678:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * being suspended. */
1679:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1680:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1681:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             traceTASK_SUSPEND( pxTCB );
1682:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1683:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Remove task from the ready/delayed list and place in the
1684:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * suspended list. */
1685:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
ARM GAS  /tmp/ccjYyDGQ.s 			page 31


1686:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1687:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1688:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1689:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
1690:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1691:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1692:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1693:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1694:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Is the task waiting on an event also? */
1695:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1696:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1697:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1698:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1699:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
1700:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1701:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1702:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1703:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1704:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1705:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1706:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #if ( configUSE_TASK_NOTIFICATIONS == 1 )
1707:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1708:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 BaseType_t x;
1709:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1710:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 for( x = 0; x < configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
1711:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1712:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
1713:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
1714:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* The task was blocked to wait for a notification, but is
1715:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * now suspended, so no notification was received. */
1716:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         pxTCB->ucNotifyState[ x ] = taskNOT_WAITING_NOTIFICATION;
1717:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
1718:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1719:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1720:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1721:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1722:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1723:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1724:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
1725:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1726:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Reset the next expected unblock time in case it referred to the
1727:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * task that is now in the Suspended state. */
1728:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
1729:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1730:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvResetNextTaskUnblockTime();
1731:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1732:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
1733:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1734:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
1735:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1736:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1737:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1738:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( pxTCB == pxCurrentTCB )
1740:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1741:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( xSchedulerRunning != pdFALSE )
1742:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
ARM GAS  /tmp/ccjYyDGQ.s 			page 32


1743:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* The current task has just been suspended. */
1744:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 configASSERT( uxSchedulerSuspended == 0 );
1745:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
1746:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1747:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
1748:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1749:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* The scheduler is not running, but the task that was pointed
1750:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * to by pxCurrentTCB has just been suspended and pxCurrentTCB
1751:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * must be adjusted to point to a different task. */
1752:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*li
1753:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1754:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* No other tasks are ready, so set pxCurrentTCB back to
1755:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * NULL so when the next task is created pxCurrentTCB will
1756:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * be set to point to it no matter what its relative priority
1757:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * is. */
1758:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxCurrentTCB = NULL;
1759:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1760:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
1761:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1762:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     vTaskSwitchContext();
1763:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1764:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1765:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1766:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
1767:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1768:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1769:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1770:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1771:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1772:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1773:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1774:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1775:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1776:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1777:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1778:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1779:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
1780:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
1781:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1782:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Accesses xPendingReadyList so must be called from a critical
1783:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * section. */
1784:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1785:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* It does not make sense to check if the calling task is suspended. */
1786:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( xTask );
1787:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1788:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Is the task being resumed actually in the suspended list? */
1789:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
1790:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1791:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Has the task already been resumed from within an ISR? */
1792:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALS
1793:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1794:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Is it in the suspended list because it is in the Suspended
1795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * state, or because is is blocked with no timeout? */
1796:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint
1797:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1798:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xReturn = pdTRUE;
1799:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
ARM GAS  /tmp/ccjYyDGQ.s 			page 33


1800:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
1801:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1802:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1803:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1804:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1805:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
1806:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1807:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1808:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1809:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1810:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
1811:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1812:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1813:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1814:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1815:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
1816:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1817:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1818:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1819:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1820:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1821:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1822:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1823:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskResume( TaskHandle_t xTaskToResume )
1824:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1825:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
1826:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1827:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* It does not make sense to resume the calling task. */
1828:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( xTaskToResume );
1829:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1830:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* The parameter cannot be NULL as it is impossible to resume the
1831:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * currently executing task. */
1832:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1833:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1834:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
1835:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1836:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1837:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1838:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     traceTASK_RESUME( pxTCB );
1839:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1840:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The ready list can be accessed even if the scheduler is
1841:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * suspended because this is inside a critical section. */
1842:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1843:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1844:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1845:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* A higher priority task may have just been resumed. */
1846:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
1848:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* This yield may not cause the task just resumed to run,
1849:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * but will leave the lists in the correct state for the
1850:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * next yield. */
1851:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         taskYIELD_IF_USING_PREEMPTION();
1852:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
1853:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
1854:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
1855:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1856:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
ARM GAS  /tmp/ccjYyDGQ.s 			page 34


1857:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1858:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
1859:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1860:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1861:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1862:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1863:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
1864:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1865:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
1866:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1867:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1868:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1869:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1870:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1871:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1872:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1873:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1874:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1875:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1876:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1877:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1878:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1879:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
1880:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
1881:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
1882:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1883:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( xTaskToResume );
1884:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1885:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
1886:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
1887:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
1888:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
1889:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1890:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
1891:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1892:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
1893:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
1894:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
1895:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
1896:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
1897:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
1898:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
1899:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * provided on the following link:
1900:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1901:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1902:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1903:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1904:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1905:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1906:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1907:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 traceTASK_RESUME_FROM_ISR( pxTCB );
1908:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1909:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Check the ready lists can be accessed. */
1910:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1911:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1912:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Ready lists can be accessed so move the task from the
1913:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * suspended list to the ready list directly. */
ARM GAS  /tmp/ccjYyDGQ.s 			page 35


1914:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1915:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
1916:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         xYieldRequired = pdTRUE;
1917:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1918:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* Mark that a yield is pending in case the user is not
1919:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * using the return value to initiate a context switch
1920:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * from the ISR using portYIELD_FROM_ISR. */
1921:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         xYieldPending = pdTRUE;
1922:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
1923:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
1924:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
1925:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1926:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
1927:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1928:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1929:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1930:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1931:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
1932:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
1933:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The delayed or ready lists cannot be accessed so the task
1934:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * is held in the pending ready list until the scheduler is
1935:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * unsuspended. */
1936:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1937:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
1938:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1939:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
1940:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
1941:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1942:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
1943:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1944:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1945:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1946:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xYieldRequired;
1947:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1948:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1949:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1950:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1951:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1952:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** void vTaskStartScheduler( void )
1953:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
1954:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xReturn;
1955:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1956:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Add the idle task at the lowest priority. */
1957:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
1958:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1959:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         StaticTask_t * pxIdleTaskTCBBuffer = NULL;
1960:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         StackType_t * pxIdleTaskStackBuffer = NULL;
1961:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint32_t ulIdleTaskStackSize;
1962:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1963:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* The Idle task is created using user provided RAM - obtain the
1964:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * address of the RAM then create the idle task. */
1965:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskSta
1966:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xIdleTaskHandle = xTaskCreateStatic( prvIdleTask,
1967:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                              configIDLE_TASK_NAME,
1968:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                              ulIdleTaskStackSize,
1969:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                              ( void * ) NULL,       /*lint !e961.  The cast is not 
1970:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                              portPRIVILEGE_BIT,     /* In effect ( tskIDLE_PRIORITY
ARM GAS  /tmp/ccjYyDGQ.s 			page 36


1971:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                              pxIdleTaskStackBuffer,
1972:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                              pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, j
1973:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1974:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xIdleTaskHandle != NULL )
1975:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1976:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = pdPASS;
1977:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1978:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
1979:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1980:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = pdFAIL;
1981:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
1982:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1983:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
1984:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1985:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* The Idle task is being created using dynamically allocated RAM. */
1986:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xReturn = xTaskCreate( prvIdleTask,
1987:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                configIDLE_TASK_NAME,
1988:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                configMINIMAL_STACK_SIZE,
1989:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                ( void * ) NULL,
1990:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                portPRIVILEGE_BIT,  /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_
1991:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                &xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is
1992:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
1993:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
1994:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
1995:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( configUSE_TIMERS == 1 )
1996:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
1997:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xReturn == pdPASS )
1998:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
1999:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = xTimerCreateTimerTask();
2000:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2001:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
2002:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2003:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2004:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2005:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2006:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif /* configUSE_TIMERS */
2007:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2008:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     if( xReturn == pdPASS )
2009:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2010:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* freertos_tasks_c_additions_init() should only be called if the user
2011:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2012:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * the only macro called by the function. */
2013:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2014:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2015:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             freertos_tasks_c_additions_init();
2016:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2017:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
2018:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2019:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Interrupts are turned off here, to ensure a tick does not occur
2020:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * before or during the call to xPortStartScheduler().  The stacks of
2021:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * the created tasks contain a status word with interrupts switched on
2022:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * so interrupts will automatically get re-enabled when the first task
2023:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * starts to run. */
2024:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portDISABLE_INTERRUPTS();
2025:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2026:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
2027:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
ARM GAS  /tmp/ccjYyDGQ.s 			page 37


2028:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Switch C-Runtime's TLS Block to point to the TLS
2029:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * block specific to the task that will run first. */
2030:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configSET_TLS_BLOCK( pxCurrentTCB->xTLSBlock );
2031:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2032:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
2033:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2034:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xNextTaskUnblockTime = portMAX_DELAY;
2035:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xSchedulerRunning = pdTRUE;
2036:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2037:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2038:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If configGENERATE_RUN_TIME_STATS is defined then the following
2039:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * macro must be defined to configure the timer/counter used to generate
2040:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2041:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * is set to 0 and the following line fails to build then ensure you do not
2042:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2043:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * FreeRTOSConfig.h file. */
2044:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2045:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2046:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
2047:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2048:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Setting up the timer tick is hardware specific and thus in the
2049:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * portable interface. */
2050:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xPortStartScheduler();
2051:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2052:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* In most cases, xPortStartScheduler() will not return. If it
2053:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * returns pdTRUE then there was not enough heap memory available
2054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * to create either the Idle or the Timer task. If it returned
2055:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * pdFALSE, then the application called xTaskEndScheduler().
2056:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * Most ports don't implement xTaskEndScheduler() as there is
2057:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * nothing to return to. */
2058:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2059:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     else
2060:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2061:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* This line will only be reached if the kernel could not be started,
2062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * because there was not enough FreeRTOS heap to create the idle task
2063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * or the timer task. */
2064:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2065:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2066:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2067:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2068:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * meaning xIdleTaskHandle is not used anywhere else. */
2069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     ( void ) xIdleTaskHandle;
2070:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2071:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* OpenOCD makes use of uxTopUsedPriority for thread debugging. Prevent uxTopUsedPriority
2072:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * from getting optimized out as it is no longer used by the kernel. */
2073:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     ( void ) uxTopUsedPriority;
2074:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
2075:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2076:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2077:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** void vTaskEndScheduler( void )
2078:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
2079:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Stop the scheduler interrupts and call the portable scheduler end
2080:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * routine so the original ISRs can be restored if necessary.  The port
2081:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * layer must ensure interrupts enable  bit is left in the correct state. */
2082:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     portDISABLE_INTERRUPTS();
2083:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     xSchedulerRunning = pdFALSE;
2084:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     vPortEndScheduler();
ARM GAS  /tmp/ccjYyDGQ.s 			page 38


2085:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
2086:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2087:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2088:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** void vTaskSuspendAll( void )
2089:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
2090:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* A critical section is not required as the variable is of type
2091:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * BaseType_t.  Please read Richard Barry's reply in the following link to a
2092:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * post in the FreeRTOS support forum before reporting this as a bug! -
2093:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * https://goo.gl/wu4acr */
2094:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2095:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* portSOFTWARE_BARRIER() is only implemented for emulated/simulated ports that
2096:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * do not otherwise exhibit real time behaviour. */
2097:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     portSOFTWARE_BARRIER();
2098:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2099:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
2100:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * is used to allow calls to vTaskSuspendAll() to nest. */
2101:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     ++uxSchedulerSuspended;
2102:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Enforces ordering for ports and optimised compilers that may otherwise place
2104:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * the above increment elsewhere. */
2105:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     portMEMORY_BARRIER();
2106:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
2107:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2108:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2109:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2110:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2111:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static TickType_t prvGetExpectedIdleTime( void )
2112:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2113:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TickType_t xReturn;
2114:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2115:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2116:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* uxHigherPriorityReadyTasks takes care of the case where
2117:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2118:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * task that are in the Ready state, even though the idle task is
2119:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * running. */
2120:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2121:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2122:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( uxTopReadyPriority > tskIDLE_PRIORITY )
2123:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2124:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxHigherPriorityReadyTasks = pdTRUE;
2125:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2126:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2127:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #else
2128:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2129:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2130:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2131:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* When port optimised task selection is used the uxTopReadyPriority
2132:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * variable is used as a bit map.  If bits other than the least
2133:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * significant bit are set then there are tasks that have a priority
2134:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * above the idle priority that are in the Ready state.  This takes
2135:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * care of the case where the co-operative scheduler is in use. */
2136:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( uxTopReadyPriority > uxLeastSignificantBit )
2137:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2138:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxHigherPriorityReadyTasks = pdTRUE;
2139:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2140:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2141:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 ) */
ARM GAS  /tmp/ccjYyDGQ.s 			page 39


2142:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2143:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2144:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2145:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = 0;
2146:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2147:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2148:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2149:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* There are other idle priority tasks in the ready state.  If
2150:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * time slicing is used then the very next tick interrupt must be
2151:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * processed. */
2152:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = 0;
2153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else if( uxHigherPriorityReadyTasks != pdFALSE )
2155:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2156:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* There are tasks in the Ready state that have a priority above the
2157:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * idle priority.  This path can only be reached if
2158:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * configUSE_PREEMPTION is 0. */
2159:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = 0;
2160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2161:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
2162:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2163:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = xNextTaskUnblockTime - xTickCount;
2164:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2165:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2166:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
2167:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2168:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2169:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2170:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2171:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2172:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** BaseType_t xTaskResumeAll( void )
2173:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
2174:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TCB_t * pxTCB = NULL;
2175:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
2176:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2177:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* If uxSchedulerSuspended is zero then this function does not match a
2178:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * previous call to vTaskSuspendAll(). */
2179:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended );
2180:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2181:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* It is possible that an ISR caused a task to be removed from an event
2182:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * list while the scheduler was suspended.  If this was the case then the
2183:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * removed task will have been added to the xPendingReadyList.  Once the
2184:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * scheduler has been resumed it is safe to move all the pending ready
2185:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * tasks from this list into their appropriate ready list. */
2186:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
2187:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2188:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         --uxSchedulerSuspended;
2189:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2190:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2191:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2192:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2193:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2194:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Move any readied tasks from the pending list into the
2195:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * appropriate ready list. */
2196:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2197:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2198:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 vo
ARM GAS  /tmp/ccjYyDGQ.s 			page 40


2199:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
2200:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
2201:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
2203:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2204:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* If the moved task has a priority higher than or equal to
2205:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * the current task then a yield must be performed. */
2206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2207:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2208:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         xYieldPending = pdTRUE;
2209:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2210:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
2211:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2212:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2213:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2214:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2215:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2216:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxTCB != NULL )
2217:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2218:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* A task was unblocked while the scheduler was suspended,
2219:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * which may have prevented the next unblock time from being
2220:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * re-calculated, in which case re-calculate it now.  Mainly
2221:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * important for low power tickless implementations, where
2222:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * this can prevent an unnecessary exit from low power
2223:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * state. */
2224:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvResetNextTaskUnblockTime();
2225:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2226:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2227:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* If any ticks occurred while the scheduler was suspended then
2228:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * they should be processed now.  This ensures the tick count does
2229:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * not  slip, and that any delayed tasks are resumed at the correct
2230:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * time. */
2231:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2232:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
2233:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2234:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( xPendedCounts > ( TickType_t ) 0U )
2235:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2236:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         do
2237:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
2238:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             if( xTaskIncrementTick() != pdFALSE )
2239:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             {
2240:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                 xYieldPending = pdTRUE;
2241:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             }
2242:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             else
2243:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             {
2244:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                 mtCOVERAGE_TEST_MARKER();
2245:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             }
2246:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2247:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             --xPendedCounts;
2248:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         } while( xPendedCounts > ( TickType_t ) 0U );
2249:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2250:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         xPendedTicks = 0;
2251:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2252:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
2253:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2254:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2255:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
ARM GAS  /tmp/ccjYyDGQ.s 			page 41


2256:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2257:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2258:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( xYieldPending != pdFALSE )
2259:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2260:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     #if ( configUSE_PREEMPTION != 0 )
2261:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2262:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         xAlreadyYielded = pdTRUE;
2263:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     #endif
2265:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
2266:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2267:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
2268:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2269:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2270:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2271:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2272:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2273:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
2274:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2275:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2276:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2277:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2278:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
2279:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2280:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return xAlreadyYielded;
2281:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
2282:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2283:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2284:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** TickType_t xTaskGetTickCount( void )
2285:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
2286:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TickType_t xTicks;
2287:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2288:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Critical section required if running on a 16 bit processor. */
2289:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     portTICK_TYPE_ENTER_CRITICAL();
2290:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2291:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xTicks = xTickCount;
2292:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2293:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     portTICK_TYPE_EXIT_CRITICAL();
2294:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2295:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return xTicks;
2296:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
2297:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2298:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2299:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2300:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
2301:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TickType_t xReturn;
2302:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     UBaseType_t uxSavedInterruptStatus;
2303:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2304:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
2305:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
2306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * above the maximum system call priority are kept permanently enabled, even
2307:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
2308:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2309:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2310:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
2311:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * assigned a priority above the configured maximum system call priority.
2312:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
ARM GAS  /tmp/ccjYyDGQ.s 			page 42


2313:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * that have been assigned a priority at or (logically) below the maximum
2314:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * system call  interrupt priority.  FreeRTOS maintains a separate interrupt
2315:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
2316:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * More information (albeit Cortex-M specific) is provided on the following
2317:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
2318:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2319:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2320:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2321:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2322:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xReturn = xTickCount;
2323:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2324:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2325:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2326:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return xReturn;
2327:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
2328:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2329:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2330:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2331:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
2332:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* A critical section is not required because the variables are of type
2333:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * BaseType_t. */
2334:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return uxCurrentNumberOfTasks;
2335:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
2336:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2337:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2338:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** char * pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed f
2339:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
2340:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
2341:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2342:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* If null is passed in here then the name of the calling task is being
2343:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * queried. */
2344:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2345:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
2346:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
2347:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
2348:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2349:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2350:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2351:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2352:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static TCB_t * prvSearchForNameWithinSingleList( List_t * pxList,
2353:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                                      const char pcNameToQuery[] )
2354:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2355:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxNextTCB, * pxFirstTCB, * pxReturn = NULL;
2356:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t x;
2357:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         char cNextChar;
2358:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xBreakLoop;
2359:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2360:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* This function is called with the scheduler suspended. */
2361:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2362:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2363:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2364:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this
2365:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2366:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             do
2367:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2368:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as t
2369:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 43


2370:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Check each character in the name looking for a match or
2371:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * mismatch. */
2372:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xBreakLoop = pdFALSE;
2373:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2374:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2375:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2376:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     cNextChar = pxNextTCB->pcTaskName[ x ];
2377:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2378:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( cNextChar != pcNameToQuery[ x ] )
2379:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2380:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* Characters didn't match. */
2381:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         xBreakLoop = pdTRUE;
2382:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2383:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else if( cNextChar == ( char ) 0x00 )
2384:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2385:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* Both strings terminated, a match must have been
2386:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * found. */
2387:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         pxReturn = pxNextTCB;
2388:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         xBreakLoop = pdTRUE;
2389:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2390:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
2391:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2392:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2393:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2394:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2395:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( xBreakLoop != pdFALSE )
2396:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2397:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         break;
2398:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2399:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2400:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2401:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxReturn != NULL )
2402:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2403:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The handle has been found. */
2404:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
2405:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2406:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
2407:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2408:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
2409:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2410:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2411:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2412:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2413:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return pxReturn;
2414:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2415:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2416:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2417:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2418:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2419:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2420:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2421:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TaskHandle_t xTaskGetHandle( const char * pcNameToQuery ) /*lint !e971 Unqualified char types a
2422:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2423:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxQueue = configMAX_PRIORITIES;
2424:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
2425:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2426:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
ARM GAS  /tmp/ccjYyDGQ.s 			page 44


2427:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2428:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2429:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         vTaskSuspendAll();
2430:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2431:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Search the ready lists. */
2432:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             do
2433:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2434:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxQueue--;
2435:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueu
2436:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2437:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxTCB != NULL )
2438:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2439:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Found the handle. */
2440:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
2441:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2442:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as 
2443:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2444:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Search the delayed lists. */
2445:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxTCB == NULL )
2446:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2447:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQ
2448:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2449:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2450:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxTCB == NULL )
2451:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2452:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, p
2453:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2454:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2455:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskSuspend == 1 )
2456:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2457:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxTCB == NULL )
2458:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2459:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Search the suspended list. */
2460:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2461:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2462:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2463:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #endif
2464:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2465:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskDelete == 1 )
2466:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2467:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxTCB == NULL )
2468:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2469:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Search the deleted list. */
2470:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQu
2471:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2472:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2473:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #endif
2474:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2475:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         ( void ) xTaskResumeAll();
2476:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2477:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return pxTCB;
2478:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2479:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2480:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2481:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2482:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2483:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  /tmp/ccjYyDGQ.s 			page 45


2484:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2485:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray,
2486:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                       const UBaseType_t uxArraySize,
2487:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                       configRUN_TIME_COUNTER_TYPE * const pulTotalRunTime )
2488:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2489:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2490:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2491:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         vTaskSuspendAll();
2492:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2493:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Is there a space in the array for each task in the system? */
2494:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( uxArraySize >= uxCurrentNumberOfTasks )
2495:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2496:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Fill in an TaskStatus_t structure with information on each
2497:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * task in the Ready state. */
2498:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 do
2499:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2500:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     uxQueue--;
2501:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( px
2502:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
2503:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2504:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Fill in an TaskStatus_t structure with information on each
2505:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * task in the Blocked state. */
2506:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
2507:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
2508:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2509:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #if ( INCLUDE_vTaskDelete == 1 )
2510:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2511:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Fill in an TaskStatus_t structure with information on
2512:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * each task that has been deleted but not yet cleaned up. */
2513:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTas
2514:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2515:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #endif
2516:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2517:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #if ( INCLUDE_vTaskSuspend == 1 )
2518:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2519:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Fill in an TaskStatus_t structure with information on
2520:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * each task in the Suspended state. */
2521:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSus
2522:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2523:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #endif
2524:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2525:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #if ( configGENERATE_RUN_TIME_STATS == 1 )
2526:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2527:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( pulTotalRunTime != NULL )
2528:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2529:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         #ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2530:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2531:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         #else
2532:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             *pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2533:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         #endif
2534:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2535:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2536:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #else /* if ( configGENERATE_RUN_TIME_STATS == 1 ) */
2537:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2538:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( pulTotalRunTime != NULL )
2539:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2540:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         *pulTotalRunTime = 0;
ARM GAS  /tmp/ccjYyDGQ.s 			page 46


2541:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2542:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2543:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #endif /* if ( configGENERATE_RUN_TIME_STATS == 1 ) */
2544:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2545:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
2546:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2547:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2548:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2549:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2550:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         ( void ) xTaskResumeAll();
2551:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2552:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return uxTask;
2553:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2554:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2555:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2556:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2557:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2558:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2559:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2560:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TaskHandle_t xTaskGetIdleTaskHandle( void )
2561:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2562:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2563:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * started, then xIdleTaskHandle will be NULL. */
2564:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( ( xIdleTaskHandle != NULL ) );
2565:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xIdleTaskHandle;
2566:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2567:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2568:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2569:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2570:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2571:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2572:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * This is to ensure vTaskStepTick() is available when user defined low power mode
2573:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2574:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * 1. */
2575:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2576:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2577:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskStepTick( TickType_t xTicksToJump )
2578:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2579:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Correct the tick count value after a period during which the tick
2580:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * was suppressed.  Note this does *not* call the tick hook function for
2581:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * each stepped tick. */
2582:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2583:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2584:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( ( xTickCount + xTicksToJump ) == xNextTaskUnblockTime )
2585:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2586:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Arrange for xTickCount to reach xNextTaskUnblockTime in
2587:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * xTaskIncrementTick() when the scheduler resumes.  This ensures
2588:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * that any delayed tasks are resumed at the correct time. */
2589:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( uxSchedulerSuspended );
2590:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( xTicksToJump != ( TickType_t ) 0 );
2591:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2592:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Prevent the tick interrupt modifying xPendedTicks simultaneously. */
2593:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
2594:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2595:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xPendedTicks++;
2596:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2597:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
ARM GAS  /tmp/ccjYyDGQ.s 			page 47


2598:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xTicksToJump--;
2599:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2600:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
2601:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2602:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2603:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2604:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2605:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xTickCount += xTicksToJump;
2606:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceINCREASE_TICK_COUNT( xTicksToJump );
2607:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2608:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2609:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2610:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2611:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2612:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2613:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
2614:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xYieldOccurred;
2615:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2616:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Must not be called with the scheduler suspended as the implementation
2617:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2618:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended == 0 );
2619:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2620:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2621:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2622:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     vTaskSuspendAll();
2623:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2624:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Prevent the tick interrupt modifying xPendedTicks simultaneously. */
2625:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
2626:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2627:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xPendedTicks += xTicksToCatchUp;
2628:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2629:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
2630:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     xYieldOccurred = xTaskResumeAll();
2631:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2632:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return xYieldOccurred;
2633:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
2634:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2635:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2636:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2637:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2638:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2639:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2640:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB = xTask;
2641:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn;
2642:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2643:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( pxTCB );
2644:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2645:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         vTaskSuspendAll();
2646:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2647:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* A task can only be prematurely removed from the Blocked state if
2648:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * it is actually in the Blocked state. */
2649:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( eTaskGetState( xTask ) == eBlocked )
2650:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2651:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
2652:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2653:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Remove the reference to the task from the blocked list.  An
2654:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * interrupt won't touch the xStateListItem because the
ARM GAS  /tmp/ccjYyDGQ.s 			page 48


2655:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * scheduler is suspended. */
2656:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2657:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2658:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Is the task waiting on an event also?  If so remove it from
2659:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * the event list too.  Interrupts can touch the event list item,
2660:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * even though the scheduler is suspended, so a critical section
2661:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * is used. */
2662:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 taskENTER_CRITICAL();
2663:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2664:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2665:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2666:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2667:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2668:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* This lets the task know it was forcibly removed from the
2669:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * blocked state so it should not re-evaluate its block time and
2670:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * then block again. */
2671:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         pxTCB->ucDelayAborted = pdTRUE;
2672:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2673:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
2674:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2675:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2676:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2677:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2678:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 taskEXIT_CRITICAL();
2679:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2680:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Place the unblocked task into the appropriate ready list. */
2681:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
2682:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2683:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* A task being unblocked cannot cause an immediate context
2684:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * switch if preemption is turned off. */
2685:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #if ( configUSE_PREEMPTION == 1 )
2686:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2687:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Preemption is on, but a context switch should only be
2688:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * performed if the unblocked task has a priority that is
2689:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * higher than the currently executing task. */
2690:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2691:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2692:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* Pend the yield to be performed when the scheduler
2693:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * is unsuspended. */
2694:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         xYieldPending = pdTRUE;
2695:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2696:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
2697:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2698:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2699:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2700:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2701:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #endif /* configUSE_PREEMPTION */
2702:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2703:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
2704:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2705:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdFAIL;
2706:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2707:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2708:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         ( void ) xTaskResumeAll();
2709:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2710:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
2711:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
ARM GAS  /tmp/ccjYyDGQ.s 			page 49


2712:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2713:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2714:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2715:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2716:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** BaseType_t xTaskIncrementTick( void )
2717:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
2718:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
2719:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TickType_t xItemValue;
2720:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xSwitchRequired = pdFALSE;
2721:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2722:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Called by the portable layer each time a tick interrupt occurs.
2723:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * Increments the tick then checks to see if the new tick value will cause any
2724:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * tasks to be unblocked. */
2725:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     traceTASK_INCREMENT_TICK( xTickCount );
2726:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2727:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2728:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2729:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Minor optimisation.  The tick count cannot change in this
2730:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * block. */
2731:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2732:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2733:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Increment the RTOS tick, switching the delayed and overflowed
2734:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * delayed lists if it wraps to 0. */
2735:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xTickCount = xConstTickCount;
2736:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2737:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to fa
2738:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             taskSWITCH_DELAYED_LISTS();
2740:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2741:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
2742:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2743:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2744:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2745:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2746:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* See if this tick has made a timeout expire.  Tasks are stored in
2747:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * the  queue in the order of their wake time - meaning once one task
2748:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * has been found whose block time has not expired there is no need to
2749:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * look any further down the list. */
2750:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xConstTickCount >= xNextTaskUnblockTime )
2751:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2752:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             for( ; ; )
2753:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2754:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2755:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2756:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The delayed list is empty.  Set xNextTaskUnblockTime
2757:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * to the maximum possible value so it is extremely
2758:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * unlikely that the
2759:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * if( xTickCount >= xNextTaskUnblockTime ) test will pass
2760:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * next time through. */
2761:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts
2762:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
2763:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2764:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
2765:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
2766:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The delayed list is not empty, get the value of the
2767:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * item at the head of the delayed list.  This is the time
2768:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * at which the task at the head of the delayed list must
ARM GAS  /tmp/ccjYyDGQ.s 			page 50


2769:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * be removed from the Blocked state. */
2770:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * 
2771:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2772:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2773:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( xConstTickCount < xItemValue )
2774:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2775:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* It is not time to unblock this item yet, but the
2776:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * item value is the time at which the task at the head
2777:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * of the blocked list must be removed from the Blocked
2778:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * state -  so record the item value in
2779:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * xNextTaskUnblockTime. */
2780:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         xNextTaskUnblockTime = xItemValue;
2781:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
2782:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2783:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
2784:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2785:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2786:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2787:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2788:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* It is time to remove the item from the Blocked state. */
2789:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
2790:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2791:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Is the task waiting on an event also?  If so remove
2792:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * it from the event list. */
2793:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2794:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
2796:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2797:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
2798:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2799:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2800:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2801:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2802:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Place the unblocked task into the appropriate ready
2803:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * list. */
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
2805:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2806:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* A task being unblocked cannot cause an immediate
2807:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * context switch if preemption is turned off. */
2808:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     #if ( configUSE_PREEMPTION == 1 )
2809:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
2810:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* Preemption is on, but a context switch should
2811:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * only be performed if the unblocked task has a
2812:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * priority that is equal to or higher than the
2813:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * currently executing task. */
2814:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2815:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
2816:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             xSwitchRequired = pdTRUE;
2817:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
2818:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         else
2819:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
2820:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
2821:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
2822:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
2823:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     #endif /* configUSE_PREEMPTION */
2824:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
2825:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
ARM GAS  /tmp/ccjYyDGQ.s 			page 51


2826:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2827:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2828:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Tasks of equal priority to the currently running task will share
2829:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * processing time (time slice) if preemption is on, and the application
2830:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * writer has not explicitly turned time slicing off. */
2831:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2832:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2833:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( U
2834:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2835:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xSwitchRequired = pdTRUE;
2836:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2837:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
2838:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2839:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2840:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2841:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2842:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2843:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2844:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configUSE_TICK_HOOK == 1 )
2845:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2846:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Guard against the tick hook being called when the pended tick
2847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * count is being unwound (when the scheduler is being unlocked). */
2848:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( xPendedTicks == ( TickType_t ) 0 )
2849:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2850:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vApplicationTickHook();
2851:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2852:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
2853:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2854:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2855:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2856:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2857:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* configUSE_TICK_HOOK */
2858:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2859:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configUSE_PREEMPTION == 1 )
2860:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2861:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( xYieldPending != pdFALSE )
2862:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2863:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xSwitchRequired = pdTRUE;
2864:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2865:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
2866:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
2867:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2868:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
2869:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2870:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* configUSE_PREEMPTION */
2871:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2872:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     else
2873:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2874:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         ++xPendedTicks;
2875:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2876:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* The tick hook gets called at regular intervals, even if the
2877:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * scheduler is locked. */
2878:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configUSE_TICK_HOOK == 1 )
2879:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2880:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vApplicationTickHook();
2881:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2882:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
ARM GAS  /tmp/ccjYyDGQ.s 			page 52


2883:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2884:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2885:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return xSwitchRequired;
2886:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
2887:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2888:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2889:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2890:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2891:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskSetApplicationTaskTag( TaskHandle_t xTask,
2892:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                      TaskHookFunction_t pxHookFunction )
2893:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2894:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * xTCB;
2895:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2896:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If xTask is NULL then it is the task hook of the calling task that is
2897:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * getting set. */
2898:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xTask == NULL )
2899:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2900:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xTCB = ( TCB_t * ) pxCurrentTCB;
2901:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2902:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
2903:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2904:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xTCB = xTask;
2905:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2906:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2907:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2908:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * the value can be accessed from an interrupt. */
2909:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
2910:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2911:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xTCB->pxTaskTag = pxHookFunction;
2912:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2913:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
2914:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2915:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2917:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2918:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2919:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2920:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2921:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2922:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2923:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
2924:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TaskHookFunction_t xReturn;
2925:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2926:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If xTask is NULL then set the calling task's hook. */
2927:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
2928:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2929:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2930:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * the value can be accessed from an interrupt. */
2931:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
2932:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2933:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = pxTCB->pxTaskTag;
2934:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2935:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
2936:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2937:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
2938:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2939:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 53


2940:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2941:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2942:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2943:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2944:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2945:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2946:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2947:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
2948:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TaskHookFunction_t xReturn;
2949:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
2950:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2951:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If xTask is NULL then set the calling task's hook. */
2952:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
2953:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2954:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2955:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * the value can be accessed from an interrupt. */
2956:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2957:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2958:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = pxTCB->pxTaskTag;
2959:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2960:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2961:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2962:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
2963:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
2964:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2965:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2966:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2967:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2968:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2969:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2970:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask,
2971:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                              void * pvParameter )
2972:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
2973:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * xTCB;
2974:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn;
2975:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2976:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If xTask is NULL then we are calling our own task hook. */
2977:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xTask == NULL )
2978:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2979:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xTCB = pxCurrentTCB;
2980:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2981:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
2982:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2983:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xTCB = xTask;
2984:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2985:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2986:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xTCB->pxTaskTag != NULL )
2987:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2988:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = xTCB->pxTaskTag( pvParameter );
2989:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2990:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
2991:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
2992:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = pdFAIL;
2993:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
2994:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2995:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
2996:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
ARM GAS  /tmp/ccjYyDGQ.s 			page 54


2997:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
2998:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2999:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3000:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3001:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** void vTaskSwitchContext( void )
3002:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
3003:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
3004:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3005:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* The scheduler is currently suspended - do not allow a context
3006:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * switch. */
3007:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xYieldPending = pdTRUE;
3008:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3009:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     else
3010:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3011:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xYieldPending = pdFALSE;
3012:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_OUT();
3013:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3014:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configGENERATE_RUN_TIME_STATS == 1 )
3015:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3016:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3017:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3018:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #else
3019:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3020:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #endif
3021:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3022:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Add the amount of time the task has been running to the
3023:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * accumulated time so far.  The time the task started running was
3024:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * stored in ulTaskSwitchedInTime.  Note that there is no overflow
3025:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * protection here so count values are only valid until the timer
3026:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * overflows.  The guard against negative values is to protect
3027:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * against suspect run time stat counter implementations - which
3028:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * are provided by the application, not the kernel. */
3029:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( ulTotalRunTime > ulTaskSwitchedInTime )
3030:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3031:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3032:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3033:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
3034:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3035:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3036:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3037:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3038:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ulTaskSwitchedInTime = ulTotalRunTime;
3039:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3040:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* configGENERATE_RUN_TIME_STATS */
3041:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3042:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Check for stack overflow, if configured. */
3043:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskCHECK_FOR_STACK_OVERFLOW();
3044:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3045:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Before the currently running task is switched out, save its errno. */
3046:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configUSE_POSIX_ERRNO == 1 )
3047:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3048:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3049:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3050:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
3051:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3052:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Select a new task to run using either the generic C or port
3053:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * optimised asm code. */
ARM GAS  /tmp/ccjYyDGQ.s 			page 55


3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with
3055:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
3056:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3057:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* After the new task is switched in, update the global errno. */
3058:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configUSE_POSIX_ERRNO == 1 )
3059:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3060:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3061:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
3063:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3064:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
3065:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3066:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Switch C-Runtime's TLS Block to point to the TLS
3067:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * Block specific to this task. */
3068:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configSET_TLS_BLOCK( pxCurrentTCB->xTLSBlock );
3069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3070:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
3071:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3072:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
3073:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3074:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3075:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList,
3076:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             const TickType_t xTicksToWait )
3077:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
3078:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
3079:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3080:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3081:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3082:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3083:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Place the event list item of the TCB in the appropriate event list.
3084:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * This is placed in the list in priority order so the highest priority task
3085:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * is the first to be woken by the event.
3086:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      *
3087:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * Note: Lists are sorted in ascending order by ListItem_t.xItemValue.
3088:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * Normally, the xItemValue of a TCB's ListItem_t members is:
3089:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      *      xItemValue = ( configMAX_PRIORITIES - uxPriority )
3090:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * Therefore, the event list is sorted in descending priority order.
3091:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      *
3092:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * The queue that contains the event list is locked, preventing
3093:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * simultaneous access from interrupts. */
3094:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3095:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3096:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3097:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
3098:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3099:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3100:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList,
3101:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                      const TickType_t xItemValue,
3102:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                      const TickType_t xTicksToWait )
3103:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
3104:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
3105:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3106:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3107:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * the event groups implementation. */
3108:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended != 0 );
3109:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3110:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Store the item value in the event list item.  It is safe to access the
ARM GAS  /tmp/ccjYyDGQ.s 			page 56


3111:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * event list item here as interrupts won't access the event list item of a
3112:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * task that is not in the Blocked state. */
3113:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VA
3114:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3115:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Place the event list item of the TCB at the end of the appropriate event
3116:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * list.  It is safe to access the event list here because it is part of an
3117:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * event group implementation - and interrupts don't access event groups
3118:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * directly (instead they access them indirectly by pending function calls to
3119:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * the task level). */
3120:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3121:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3122:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3123:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
3124:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3125:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3126:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TIMERS == 1 )
3127:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3128:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskPlaceOnEventListRestricted( List_t * const pxEventList,
3129:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                           TickType_t xTicksToWait,
3130:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                           const BaseType_t xWaitIndefinitely )
3131:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3132:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( pxEventList );
3133:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3134:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* This function should not be called by application code hence the
3135:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * 'Restricted' in its name.  It is not part of the public API.  It is
3136:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * designed for use by kernel code, and has special calling requirements -
3137:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * it should be called with the scheduler suspended. */
3138:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3139:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3140:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Place the event list item of the TCB in the appropriate event list.
3141:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * In this case it is assume that this is the only task that is going to
3142:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * be waiting on this event list, so the faster vListInsertEnd() function
3143:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * can be used in place of vListInsert. */
3144:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3145:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3146:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If the task should block indefinitely then set the block time to a
3147:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * value that will be recognised as an indefinite delay inside the
3148:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * prvAddCurrentTaskToDelayedList() function. */
3149:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xWaitIndefinitely != pdFALSE )
3150:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3151:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xTicksToWait = portMAX_DELAY;
3152:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3153:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3155:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3156:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3157:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3158:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TIMERS */
3159:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3160:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3161:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3162:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
3163:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
3164:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xReturn;
3165:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3166:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3167:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * called from a critical section within an ISR. */
ARM GAS  /tmp/ccjYyDGQ.s 			page 57


3168:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3169:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* The event list is sorted in priority order, so the first in the list can
3170:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * be removed as it is known to be the highest priority.  Remove the TCB from
3171:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * the delayed list, and add it to the ready list.
3172:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      *
3173:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * If an event is for a queue that is locked then this function will never
3174:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * get called - the lock count on the queue will get modified instead.  This
3175:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * means exclusive access to the event list is guaranteed here.
3176:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      *
3177:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * This function assumes that a check has already been made to ensure that
3178:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * pxEventList is not empty. */
3179:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as th
3180:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
3181:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
3182:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3183:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3184:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3185:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
3187:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3188:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configUSE_TICKLESS_IDLE != 0 )
3189:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3190:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If a task is blocked on a kernel object then xNextTaskUnblockTime
3191:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * might be set to the blocked task's time out time.  If the task is
3192:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * unblocked for a reason other than a timeout xNextTaskUnblockTime is
3193:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * normally left unchanged, because it is automatically reset to a new
3194:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * value when the tick count equals xNextTaskUnblockTime.  However if
3195:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * tickless idling is used it might be more important to enter sleep mode
3196:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * at the earliest possible time - so reset xNextTaskUnblockTime here to
3197:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * ensure it is updated at the earliest possible time. */
3198:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             prvResetNextTaskUnblockTime();
3199:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3200:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
3201:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3202:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     else
3203:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3204:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* The delayed and ready lists cannot be accessed, so hold this task
3205:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * pending until the scheduler is resumed. */
3206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3207:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3208:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3209:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3210:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3211:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Return true if the task removed from the event list has a higher
3212:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * priority than the calling task.  This allows the calling task to know if
3213:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * it should force a context switch now. */
3214:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xReturn = pdTRUE;
3215:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3216:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Mark that a yield is pending in case the user is not using the
3217:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * "xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3218:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xYieldPending = pdTRUE;
3219:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3220:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     else
3221:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3222:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xReturn = pdFALSE;
3223:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3224:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 58


3225:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return xReturn;
3226:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
3227:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3228:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3229:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem,
3230:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                         const TickType_t xItemValue )
3231:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
3232:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
3233:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3234:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3235:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * the event flags implementation. */
3236:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended != pdFALSE );
3237:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3238:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Store the new item value in the event list. */
3239:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3240:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3241:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Remove the event list form the event flag.  Interrupts do not access
3242:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * event flags. */
3243:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as th
3244:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
3245:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
3246:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3247:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( configUSE_TICKLESS_IDLE != 0 )
3248:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3249:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If a task is blocked on a kernel object then xNextTaskUnblockTime
3250:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * might be set to the blocked task's time out time.  If the task is
3251:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * unblocked for a reason other than a timeout xNextTaskUnblockTime is
3252:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * normally left unchanged, because it is automatically reset to a new
3253:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * value when the tick count equals xNextTaskUnblockTime.  However if
3254:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * tickless idling is used it might be more important to enter sleep mode
3255:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * at the earliest possible time - so reset xNextTaskUnblockTime here to
3256:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * ensure it is updated at the earliest possible time. */
3257:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvResetNextTaskUnblockTime();
3258:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3259:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
3260:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3261:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Remove the task from the delayed list and add it to the ready list.  The
3262:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * scheduler is suspended so interrupts will not be accessing the ready
3263:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * lists. */
3264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
3266:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3267:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3268:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3269:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* The unblocked task has a priority above that of the calling task, so
3270:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * a context switch is required.  This function is called with the
3271:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * scheduler suspended so xYieldPending is set so the context switch
3272:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * occurs immediately that the scheduler is resumed (unsuspended). */
3273:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xYieldPending = pdTRUE;
3274:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3275:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
3276:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3277:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3278:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3279:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
3280:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
3281:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
ARM GAS  /tmp/ccjYyDGQ.s 			page 59


3282:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3283:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTimeOut->xOverflowCount = xNumOfOverflows;
3284:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
3285:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3286:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
3287:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
3288:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3289:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3290:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3291:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
3292:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* For internal use only as it does not use a critical section. */
3293:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     pxTimeOut->xOverflowCount = xNumOfOverflows;
3294:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
3295:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
3296:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3297:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3298:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut,
3299:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                  TickType_t * const pxTicksToWait )
3300:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
3301:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xReturn;
3302:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3303:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
3304:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
3305:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
3307:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3308:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Minor optimisation.  The tick count cannot change in this block. */
3309:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         const TickType_t xConstTickCount = xTickCount;
3310:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3311:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3312:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( INCLUDE_xTaskAbortDelay == 1 )
3313:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3314:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3315:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* The delay was aborted, which is not the same as a time out,
3316:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * but has the same result. */
3317:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxCurrentTCB->ucDelayAborted = pdFALSE;
3318:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
3319:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3320:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
3321:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
3322:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3323:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3324:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( *pxTicksToWait == portMAX_DELAY )
3325:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3326:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* If INCLUDE_vTaskSuspend is set to 1 and the block time
3327:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * specified is the maximum block time then the task should block
3328:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * indefinitely, and therefore never time out. */
3329:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdFALSE;
3330:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3331:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
3332:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
3333:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3334:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTi
3335:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3336:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* The tick count is greater than the time at which
3337:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * vTaskSetTimeout() was called, but has also overflowed since
3338:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * vTaskSetTimeOut() was called.  It must have wrapped all the way
ARM GAS  /tmp/ccjYyDGQ.s 			page 60


3339:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * around and gone past again. This passed since vTaskSetTimeout()
3340:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * was called. */
3341:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
3342:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
3343:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3344:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant wi
3345:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3346:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Not a genuine timeout. Adjust parameters for time remaining. */
3347:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             *pxTicksToWait -= xElapsedTime;
3348:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
3349:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = pdFALSE;
3350:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3351:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
3352:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3353:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
3354:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
3355:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3356:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3357:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
3358:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3359:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return xReturn;
3360:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
3361:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3362:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3363:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** void vTaskMissedYield( void )
3364:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
3365:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     xYieldPending = pdTRUE;
3366:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
3367:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3368:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3369:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3370:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3371:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3372:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3373:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
3374:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
3375:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3376:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xTask != NULL )
3377:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3378:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB = xTask;
3379:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxTaskNumber;
3380:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3381:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
3382:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3383:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             uxReturn = 0U;
3384:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3385:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3386:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return uxReturn;
3387:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3388:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3389:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3390:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3391:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3392:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3393:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3394:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskSetTaskNumber( TaskHandle_t xTask,
3395:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                              const UBaseType_t uxHandle )
ARM GAS  /tmp/ccjYyDGQ.s 			page 61


3396:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3397:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3398:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3399:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xTask != NULL )
3400:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3401:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB = xTask;
3402:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB->uxTaskNumber = uxHandle;
3403:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3404:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3405:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3406:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3407:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3408:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*
3409:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * -----------------------------------------------------------
3410:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * The Idle task.
3411:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * ----------------------------------------------------------
3412:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
3413:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3414:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3415:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
3416:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * void prvIdleTask( void *pvParameters );
3417:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  *
3418:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  */
3419:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3420:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
  27              		.loc 1 3420 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
3421:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Stop warnings. */
3422:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     ( void ) pvParameters;
  35              		.loc 1 3422 5 view .LVU1
3423:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3424:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3425:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * SCHEDULER IS STARTED. **/
3426:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3427:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* In case a task that has a secure context deletes itself, in which case
3428:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * the idle task is responsible for deleting the task's secure context, if
3429:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * any. */
3430:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
  36              		.loc 1 3430 67 view .LVU2
3431:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3432:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     for( ; ; )
  37              		.loc 1 3432 5 view .LVU3
3433:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3434:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* See if any tasks have deleted themselves - if so then the idle task
3435:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * is responsible for freeing the deleted task's TCB and stack. */
3436:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvCheckTasksWaitingTermination();
  38              		.loc 1 3436 9 view .LVU4
3437:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3438:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configUSE_PREEMPTION == 0 )
3439:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3440:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If we are not using preemption we keep forcing a task switch to
ARM GAS  /tmp/ccjYyDGQ.s 			page 62


3441:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * see if any other task has become available.  If we are using
3442:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * preemption we don't need to do this as any task becoming available
3443:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * will automatically get the processor anyway. */
3444:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             taskYIELD();
3445:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3446:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* configUSE_PREEMPTION */
3447:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3448:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3449:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3450:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* When using preemption tasks of equal priority will be
3451:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * timesliced.  If a task that is sharing the idle priority is ready
3452:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * to run then the idle task should yield before the end of the
3453:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * timeslice.
3454:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              *
3455:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * A critical region is not required here as we are just reading from
3456:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * the list, and an occasional incorrect value will not matter.  If
3457:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * the ready list at the idle priority contains more than one task
3458:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * then a task other than the idle task is ready to execute. */
3459:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType
  39              		.loc 1 3459 13 view .LVU5
  40              		.loc 1 3459 17 is_stmt 0 view .LVU6
  41 0000 074B     		ldr	r3, .L4
  42 0002 1B68     		ldr	r3, [r3]
  43              		.loc 1 3459 15 view .LVU7
  44 0004 012B     		cmp	r3, #1
  45 0006 FBD9     		bls	.L2
3460:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3461:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 taskYIELD();
  46              		.loc 1 3461 17 is_stmt 1 view .LVU8
  47 0008 4FF0E023 		mov	r3, #-536813568
  48 000c 4FF08052 		mov	r2, #268435456
  49 0010 C3F8042D 		str	r2, [r3, #3332]
  50              		.loc 1 3461 17 view .LVU9
  51              		.syntax unified
  52              	@ 3461 "../../Middlewares/Third_Party/FreeRTOS/tasks.c" 1
  53 0014 BFF34F8F 		dsb
  54              	@ 0 "" 2
  55              		.loc 1 3461 17 view .LVU10
  56              	@ 3461 "../../Middlewares/Third_Party/FreeRTOS/tasks.c" 1
  57 0018 BFF36F8F 		isb
  58              	@ 0 "" 2
  59              		.loc 1 3461 28 view .LVU11
  60              		.thumb
  61              		.syntax unified
  62 001c F0E7     		b	.L2
  63              	.L5:
  64 001e 00BF     		.align	2
  65              	.L4:
  66 0020 00000000 		.word	.LANCHOR0
  67              		.cfi_endproc
  68              	.LFE31:
  70              		.section	.text.prvTaskCheckFreeStackSpace,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	prvTaskCheckFreeStackSpace:
ARM GAS  /tmp/ccjYyDGQ.s 			page 63


  77              	.LVL1:
  78              	.LFB36:
3462:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3463:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
3464:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3465:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3466:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3467:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3468:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3469:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3470:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configUSE_IDLE_HOOK == 1 )
3471:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3472:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             extern void vApplicationIdleHook( void );
3473:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3474:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Call the user defined function from within the idle task.  This
3475:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * allows the application designer to add background functionality
3476:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * without the overhead of a separate task.
3477:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3478:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * CALL A FUNCTION THAT MIGHT BLOCK. */
3479:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vApplicationIdleHook();
3480:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3481:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* configUSE_IDLE_HOOK */
3482:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3483:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* This conditional compilation should use inequality to 0, not equality
3484:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3485:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * user defined low power mode  implementations require
3486:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3487:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configUSE_TICKLESS_IDLE != 0 )
3488:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3489:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             TickType_t xExpectedIdleTime;
3490:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3491:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* It is not desirable to suspend then resume the scheduler on
3492:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * each iteration of the idle task.  Therefore, a preliminary
3493:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * test of the expected idle time is performed without the
3494:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * scheduler suspended.  The result here is not necessarily
3495:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * valid. */
3496:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xExpectedIdleTime = prvGetExpectedIdleTime();
3497:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3498:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3499:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3500:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vTaskSuspendAll();
3501:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
3502:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Now the scheduler is suspended, the expected idle
3503:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * time can be sampled again, and this time its value can
3504:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * be used. */
3505:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     configASSERT( xNextTaskUnblockTime >= xTickCount );
3506:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xExpectedIdleTime = prvGetExpectedIdleTime();
3507:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3508:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Define the following macro to set xExpectedIdleTime to 0
3509:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * if the application does not want
3510:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3511:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3512:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3513:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3514:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
3515:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         traceLOW_POWER_IDLE_BEGIN();
3516:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
ARM GAS  /tmp/ccjYyDGQ.s 			page 64


3517:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         traceLOW_POWER_IDLE_END();
3518:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
3519:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
3520:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
3521:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
3522:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
3523:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
3524:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 ( void ) xTaskResumeAll();
3525:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3526:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
3527:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3528:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3529:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3530:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3531:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* configUSE_TICKLESS_IDLE */
3532:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3533:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
3534:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3535:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3536:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
3537:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3538:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3539:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3540:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3541:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* The idle task exists in addition to the application tasks. */
3542:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             const UBaseType_t uxNonApplicationTasks = 1;
3543:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* INCLUDE_vTaskSuspend */
3544:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3545:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         eSleepModeStatus eReturn = eStandardSleep;
3546:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3547:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* This function must be called from a critical section. */
3548:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3549:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3550:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3551:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* A task was made ready while the scheduler was suspended. */
3552:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             eReturn = eAbortSleep;
3553:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3554:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else if( xYieldPending != pdFALSE )
3555:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3556:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* A yield was pended while the scheduler was suspended. */
3557:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             eReturn = eAbortSleep;
3558:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3559:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else if( xPendedTicks != 0 )
3560:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3561:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* A tick interrupt has already occurred but was held pending
3562:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * because the scheduler is suspended. */
3563:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             eReturn = eAbortSleep;
3564:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3565:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3566:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3567:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - u
3568:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3569:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* If all the tasks are in the suspended list (which might mean they
3570:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * have an infinite block time rather than actually being suspended)
3571:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * then it is safe to turn all clocks off and just wait for external
3572:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * interrupts. */
3573:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 eReturn = eNoTasksWaitingTimeout;
ARM GAS  /tmp/ccjYyDGQ.s 			page 65


3574:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3575:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* INCLUDE_vTaskSuspend */
3576:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
3577:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3578:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
3579:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3580:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3581:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return eReturn;
3582:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3583:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3584:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3585:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3586:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3587:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3588:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3589:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet,
3590:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                             BaseType_t xIndex,
3591:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                             void * pvValue )
3592:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3593:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3594:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3595:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( ( xIndex >= 0 ) &&
3596:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS ) )
3597:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3598:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToSet );
3599:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( pxTCB != NULL );
3600:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3601:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3602:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3603:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3604:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3605:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3606:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3607:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3608:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3609:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void * pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery,
3610:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                                BaseType_t xIndex )
3611:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3612:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         void * pvReturn = NULL;
3613:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3614:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3615:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( ( xIndex >= 0 ) &&
3616:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS ) )
3617:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3618:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3619:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3620:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3621:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
3622:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3623:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pvReturn = NULL;
3624:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3625:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3626:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return pvReturn;
3627:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3628:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3629:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3630:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccjYyDGQ.s 			page 66


3631:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3632:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3633:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3634:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify,
3635:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                   const MemoryRegion_t * const xRegions )
3636:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3637:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3638:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3639:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If null is passed in here then we are modifying the MPU settings of
3640:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * the calling task. */
3641:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTaskToModify );
3642:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3643:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3644:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3645:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3646:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3647:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3648:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3649:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** static void prvInitialiseTaskLists( void )
3650:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
3651:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     UBaseType_t uxPriority;
3652:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3653:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPrio
3654:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3655:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3656:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3657:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3658:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     vListInitialise( &xDelayedTaskList1 );
3659:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     vListInitialise( &xDelayedTaskList2 );
3660:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     vListInitialise( &xPendingReadyList );
3661:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3662:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskDelete == 1 )
3663:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3664:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         vListInitialise( &xTasksWaitingTermination );
3665:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3666:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskDelete */
3667:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3668:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskSuspend == 1 )
3669:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3670:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         vListInitialise( &xSuspendedTaskList );
3671:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3672:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskSuspend */
3673:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3674:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3675:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * using list2. */
3676:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     pxDelayedTaskList = &xDelayedTaskList1;
3677:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
3678:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
3679:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3680:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3681:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3682:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
3683:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3684:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3685:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskDelete == 1 )
3686:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3687:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
ARM GAS  /tmp/ccjYyDGQ.s 			page 67


3688:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3689:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3690:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * being called too often in the idle task. */
3691:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3692:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3693:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
3694:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3695:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079
3696:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3697:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 --uxCurrentNumberOfTasks;
3698:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 --uxDeletedTasksWaitingCleanUp;
3699:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3700:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
3701:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3702:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             prvDeleteTCB( pxTCB );
3703:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3704:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3705:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskDelete */
3706:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
3707:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3708:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3709:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3710:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3711:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskGetInfo( TaskHandle_t xTask,
3712:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                        TaskStatus_t * pxTaskStatus,
3713:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                        BaseType_t xGetFreeStackSpace,
3714:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                        eTaskState eState )
3715:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3716:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3717:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3718:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* xTask is NULL then get the state of the calling task. */
3719:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3720:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3721:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3722:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
3723:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3724:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
3725:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( ( portSTACK_GROWTH > 0 ) && ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
3726:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTaskStatus->pxTopOfStack = pxTCB->pxTopOfStack;
3727:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTaskStatus->pxEndOfStack = pxTCB->pxEndOfStack;
3728:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
3729:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3730:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3731:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configUSE_MUTEXES == 1 )
3732:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3733:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3734:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3735:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #else
3736:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3737:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTaskStatus->uxBasePriority = 0;
3738:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
3740:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3741:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( configGENERATE_RUN_TIME_STATS == 1 )
3742:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3743:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3744:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
ARM GAS  /tmp/ccjYyDGQ.s 			page 68


3745:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #else
3746:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3747:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTaskStatus->ulRunTimeCounter = ( configRUN_TIME_COUNTER_TYPE ) 0;
3748:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3749:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
3750:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3751:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Obtaining the task state is a little fiddly, so is only done if the
3752:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * value of eState passed into this function is eInvalid - otherwise the
3753:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * state is just set to whatever is passed in. */
3754:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( eState != eInvalid )
3755:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3756:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxTCB == pxCurrentTCB )
3757:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3758:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxTaskStatus->eCurrentState = eRunning;
3759:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3760:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
3761:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3762:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxTaskStatus->eCurrentState = eState;
3763:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3764:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #if ( INCLUDE_vTaskSuspend == 1 )
3765:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
3766:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* If the task is in the suspended list then there is a
3767:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      *  chance it is actually just blocked indefinitely - so really
3768:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      *  it should be reported as being in the Blocked state. */
3769:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( eState == eSuspended )
3770:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
3771:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         vTaskSuspendAll();
3772:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
3773:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3774:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             {
3775:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                 pxTaskStatus->eCurrentState = eBlocked;
3776:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             }
3777:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
3778:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         ( void ) xTaskResumeAll();
3779:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
3780:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
3781:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #endif /* INCLUDE_vTaskSuspend */
3782:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3783:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3784:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
3785:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3786:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3787:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3788:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3789:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3790:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * parameter is provided to allow it to be skipped. */
3791:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xGetFreeStackSpace != pdFALSE )
3792:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3793:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #if ( portSTACK_GROWTH > 0 )
3794:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTC
3796:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3797:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #else
3798:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3799:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTC
3800:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3801:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             #endif
ARM GAS  /tmp/ccjYyDGQ.s 			page 69


3802:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3803:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
3804:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3805:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTaskStatus->usStackHighWaterMark = 0;
3806:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3807:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3808:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3809:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3810:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3811:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3812:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3813:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3814:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
3815:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                                      List_t * pxList,
3816:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                                      eTaskState eState )
3817:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3818:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxNextTCB, * pxFirstTCB;
3819:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0;
3820:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3821:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3822:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3823:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this
3824:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3825:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Populate an TaskStatus_t structure within the
3826:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * pxTaskStatusArray array for each task that is referenced from
3827:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * pxList.  See the definition of TaskStatus_t in task.h for the
3828:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * meaning of each TaskStatus_t structure member. */
3829:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             do
3830:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3831:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as t
3832:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
3833:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxTask++;
3834:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
3835:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3836:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
3837:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3838:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
3839:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3840:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3841:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return uxTask;
3842:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3843:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3844:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3845:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3846:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3847:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3848:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3849:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3850:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
  79              		.loc 1 3850 5 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
3851:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint32_t ulCount = 0U;
  84              		.loc 1 3851 9 view .LVU13
3852:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 70


3853:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
  85              		.loc 1 3853 9 view .LVU14
3851:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint32_t ulCount = 0U;
  86              		.loc 1 3851 18 is_stmt 0 view .LVU15
  87 0000 0023     		movs	r3, #0
  88              		.loc 1 3853 14 view .LVU16
  89 0002 01E0     		b	.L7
  90              	.LVL2:
  91              	.L8:
3854:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3855:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pucStackByte -= portSTACK_GROWTH;
  92              		.loc 1 3855 13 is_stmt 1 view .LVU17
  93              		.loc 1 3855 26 is_stmt 0 view .LVU18
  94 0004 0130     		adds	r0, r0, #1
  95              	.LVL3:
3856:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ulCount++;
  96              		.loc 1 3856 13 is_stmt 1 view .LVU19
  97              		.loc 1 3856 20 is_stmt 0 view .LVU20
  98 0006 0133     		adds	r3, r3, #1
  99              	.LVL4:
 100              	.L7:
3853:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 101              		.loc 1 3853 14 is_stmt 1 view .LVU21
3853:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 102              		.loc 1 3853 16 is_stmt 0 view .LVU22
 103 0008 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
3853:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 104              		.loc 1 3853 14 view .LVU23
 105 000a A52A     		cmp	r2, #165
 106 000c FAD0     		beq	.L8
3857:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3858:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3859:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on sma
 107              		.loc 1 3859 9 is_stmt 1 view .LVU24
 108              	.LVL5:
3860:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3861:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return ( configSTACK_DEPTH_TYPE ) ulCount;
 109              		.loc 1 3861 9 view .LVU25
3862:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 110              		.loc 1 3862 5 is_stmt 0 view .LVU26
 111 000e C3F38F00 		ubfx	r0, r3, #2, #16
 112              	.LVL6:
 113              		.loc 1 3862 5 view .LVU27
 114 0012 7047     		bx	lr
 115              		.cfi_endproc
 116              	.LFE36:
 118              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 119              		.align	1
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 124              	prvResetNextTaskUnblockTime:
 125              	.LFB37:
3863:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3864:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3865:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3866:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 71


3867:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3868:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3869:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3870:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3871:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * user to determine the return type.  It gets around the problem of the value
3872:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * overflowing on 8-bit types without breaking backward compatibility for
3873:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****  * applications that expect an 8-bit return type. */
3874:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3875:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3876:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3877:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t * pucEndOfStack;
3878:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configSTACK_DEPTH_TYPE uxReturn;
3879:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3880:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3881:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * the same except for their return type.  Using configSTACK_DEPTH_TYPE
3882:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * allows the user to determine the return type.  It gets around the
3883:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * problem of the value overflowing on 8-bit types without breaking
3884:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * backward compatibility for applications that expect an 8-bit return
3885:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * type. */
3886:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3887:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3888:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3889:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if portSTACK_GROWTH < 0
3890:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3891:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3892:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3893:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #else
3894:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3895:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3896:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3897:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
3898:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3899:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3900:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3901:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return uxReturn;
3902:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3903:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3904:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3905:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3906:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3907:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3908:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3909:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3910:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3911:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3912:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t * pucEndOfStack;
3913:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
3914:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3915:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3917:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if portSTACK_GROWTH < 0
3918:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3919:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3920:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3921:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #else
3922:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3923:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
ARM GAS  /tmp/ccjYyDGQ.s 			page 72


3924:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3925:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
3926:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3927:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3928:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3929:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return uxReturn;
3930:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3931:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3932:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3933:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3934:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3935:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3936:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3937:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static void prvDeleteTCB( TCB_t * pxTCB )
3938:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3939:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
3940:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * above the vPortFree() calls.  The call is also used by ports/demos that
3941:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * want to allocate and clean RAM statically. */
3942:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portCLEAN_UP_TCB( pxTCB );
3943:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3944:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
3945:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3946:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Free up the memory allocated for the task's TLS Block. */
3947:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configDEINIT_TLS_BLOCK( pxCurrentTCB->xTLSBlock );
3948:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3949:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif
3950:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3951:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 )
3952:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3953:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* The task can only have been allocated dynamically - free both
3954:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * the stack and TCB. */
3955:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vPortFreeStack( pxTCB->pxStack );
3956:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vPortFree( pxTCB );
3957:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3958:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #elif ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been
3959:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
3960:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* The task could have been allocated statically or dynamically, so
3961:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * check what was statically allocated before trying to free the
3962:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * memory. */
3963:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3964:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3965:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Both the stack and TCB were allocated dynamically, so both
3966:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * must be freed. */
3967:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vPortFreeStack( pxTCB->pxStack );
3968:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vPortFree( pxTCB );
3969:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3970:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3971:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3972:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Only the stack was statically allocated, so the TCB is the
3973:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * only memory that must be freed. */
3974:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vPortFree( pxTCB );
3975:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3976:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
3977:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
3978:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Neither the stack nor the TCB were allocated dynamically, so
3979:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * nothing needs to be freed. */
3980:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB
ARM GAS  /tmp/ccjYyDGQ.s 			page 73


3981:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3982:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
3983:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
3984:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3985:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
3986:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3987:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3988:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3989:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
3990:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3991:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
 126              		.loc 1 3991 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
3992:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 131              		.loc 1 3992 5 view .LVU29
 132              		.loc 1 3992 9 is_stmt 0 view .LVU30
 133 0000 074B     		ldr	r3, .L12
 134 0002 1B68     		ldr	r3, [r3]
 135 0004 1B68     		ldr	r3, [r3]
 136              		.loc 1 3992 7 view .LVU31
 137 0006 23B9     		cbnz	r3, .L10
3993:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
3994:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3995:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * the maximum possible value so it is  extremely unlikely that the
3996:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3997:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * there is an item in the delayed list. */
3998:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xNextTaskUnblockTime = portMAX_DELAY;
 138              		.loc 1 3998 9 is_stmt 1 view .LVU32
 139              		.loc 1 3998 30 is_stmt 0 view .LVU33
 140 0008 064B     		ldr	r3, .L12+4
 141 000a 4FF0FF32 		mov	r2, #-1
 142 000e 1A60     		str	r2, [r3]
 143 0010 7047     		bx	lr
 144              	.L10:
3999:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4000:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     else
4001:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4002:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* The new current delayed list is not empty, get the value of
4003:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * the item at the head of the delayed list.  This is the time at
4004:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * which the task at the head of the delayed list should be removed
4005:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * from the Blocked state. */
4006:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 145              		.loc 1 4006 9 is_stmt 1 view .LVU34
 146              		.loc 1 4006 32 is_stmt 0 view .LVU35
 147 0012 034B     		ldr	r3, .L12
 148 0014 1B68     		ldr	r3, [r3]
 149 0016 DB68     		ldr	r3, [r3, #12]
 150 0018 1A68     		ldr	r2, [r3]
 151              		.loc 1 4006 30 view .LVU36
 152 001a 024B     		ldr	r3, .L12+4
 153 001c 1A60     		str	r2, [r3]
4007:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4008:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 154              		.loc 1 4008 1 view .LVU37
ARM GAS  /tmp/ccjYyDGQ.s 			page 74


 155 001e 7047     		bx	lr
 156              	.L13:
 157              		.align	2
 158              	.L12:
 159 0020 00000000 		.word	.LANCHOR1
 160 0024 00000000 		.word	.LANCHOR2
 161              		.cfi_endproc
 162              	.LFE37:
 164              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 165              		.align	1
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 170              	prvInitialiseNewTask:
 171              	.LVL7:
 172              	.LFB5:
 824:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     StackType_t * pxTopOfStack;
 173              		.loc 1 824 1 is_stmt 1 view -0
 174              		.cfi_startproc
 175              		@ args = 16, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 824:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     StackType_t * pxTopOfStack;
 177              		.loc 1 824 1 is_stmt 0 view .LVU39
 178 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 179              	.LCFI0:
 180              		.cfi_def_cfa_offset 32
 181              		.cfi_offset 3, -32
 182              		.cfi_offset 4, -28
 183              		.cfi_offset 5, -24
 184              		.cfi_offset 6, -20
 185              		.cfi_offset 7, -16
 186              		.cfi_offset 8, -12
 187              		.cfi_offset 9, -8
 188              		.cfi_offset 14, -4
 189 0004 8046     		mov	r8, r0
 190 0006 0C46     		mov	r4, r1
 191 0008 1646     		mov	r6, r2
 192 000a 9946     		mov	r9, r3
 193 000c 089F     		ldr	r7, [sp, #32]
 194 000e 0A9D     		ldr	r5, [sp, #40]
 825:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     UBaseType_t x;
 195              		.loc 1 825 5 is_stmt 1 view .LVU40
 826:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 196              		.loc 1 826 5 view .LVU41
 847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 197              		.loc 1 847 9 view .LVU42
 847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 198              		.loc 1 847 18 is_stmt 0 view .LVU43
 199 0010 9200     		lsls	r2, r2, #2
 200              	.LVL8:
 847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 201              		.loc 1 847 18 view .LVU44
 202 0012 A521     		movs	r1, #165
 203              	.LVL9:
 847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 204              		.loc 1 847 18 view .LVU45
 205 0014 286B     		ldr	r0, [r5, #48]
ARM GAS  /tmp/ccjYyDGQ.s 			page 75


 206              	.LVL10:
 847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 207              		.loc 1 847 18 view .LVU46
 208 0016 FFF7FEFF 		bl	memset
 209              	.LVL11:
 857:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 210              		.loc 1 857 9 is_stmt 1 view .LVU47
 857:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 211              		.loc 1 857 35 is_stmt 0 view .LVU48
 212 001a 2B6B     		ldr	r3, [r5, #48]
 857:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 213              		.loc 1 857 44 view .LVU49
 214 001c 6FF04042 		mvn	r2, #-1073741824
 215 0020 3244     		add	r2, r2, r6
 857:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 216              		.loc 1 857 22 view .LVU50
 217 0022 03EB8203 		add	r3, r3, r2, lsl #2
 218              	.LVL12:
 858:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 219              		.loc 1 858 9 is_stmt 1 view .LVU51
 858:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 220              		.loc 1 858 87 is_stmt 0 view .LVU52
 221 0026 23F00706 		bic	r6, r3, #7
 222              	.LVL13:
 861:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 223              		.loc 1 861 9 is_stmt 1 view .LVU53
 861:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 224              		.loc 1 861 130 view .LVU54
 885:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 225              		.loc 1 885 5 view .LVU55
 885:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 226              		.loc 1 885 7 is_stmt 0 view .LVU56
 227 002a 6CB1     		cbz	r4, .L16
 887:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 228              		.loc 1 887 16 view .LVU57
 229 002c 0022     		movs	r2, #0
 230              	.L15:
 231              	.LVL14:
 887:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 232              		.loc 1 887 37 is_stmt 1 discriminator 1 view .LVU58
 887:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 233              		.loc 1 887 9 is_stmt 0 discriminator 1 view .LVU59
 234 002e 042A     		cmp	r2, #4
 235 0030 07D8     		bhi	.L17
 889:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 236              		.loc 1 889 13 is_stmt 1 view .LVU60
 889:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 237              		.loc 1 889 47 is_stmt 0 view .LVU61
 238 0032 A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 889:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 239              		.loc 1 889 39 view .LVU62
 240 0034 AB18     		adds	r3, r5, r2
 241 0036 83F83410 		strb	r1, [r3, #52]
 894:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 242              		.loc 1 894 13 is_stmt 1 view .LVU63
 894:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 243              		.loc 1 894 23 is_stmt 0 view .LVU64
ARM GAS  /tmp/ccjYyDGQ.s 			page 76


 244 003a A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 894:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 245              		.loc 1 894 15 view .LVU65
 246 003c 09B1     		cbz	r1, .L17
 900:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 247              		.loc 1 900 41 is_stmt 1 discriminator 2 view .LVU66
 887:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 248              		.loc 1 887 82 discriminator 2 view .LVU67
 887:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 249              		.loc 1 887 83 is_stmt 0 discriminator 2 view .LVU68
 250 003e 0132     		adds	r2, r2, #1
 251              	.LVL15:
 887:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 252              		.loc 1 887 83 discriminator 2 view .LVU69
 253 0040 F5E7     		b	.L15
 254              	.L17:
 906:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 255              		.loc 1 906 9 is_stmt 1 view .LVU70
 906:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 256              		.loc 1 906 61 is_stmt 0 view .LVU71
 257 0042 0023     		movs	r3, #0
 258 0044 85F83830 		strb	r3, [r5, #56]
 259              	.LVL16:
 260              	.L16:
 910:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 261              		.loc 1 910 33 is_stmt 1 view .LVU72
 914:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 262              		.loc 1 914 5 view .LVU73
 263 0048 042F     		cmp	r7, #4
 264 004a 08D9     		bls	.L19
 914:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 265              		.loc 1 914 5 view .LVU74
 266              	.LBB118:
 267              	.LBI118:
 268              		.file 2 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
   1:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.5.0
   3:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * SPDX-License-Identifier: MIT
   6:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   7:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   9:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
  10:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  13:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  14:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  15:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  16:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  17:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
ARM GAS  /tmp/ccjYyDGQ.s 			page 77


  23:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  24:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://www.FreeRTOS.org
  25:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://github.com/FreeRTOS
  26:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  27:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  28:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  30:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  31:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define PORTMACRO_H
  32:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  33:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef __cplusplus
  34:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern "C" {
  35:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  36:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  37:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  38:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  39:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  40:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  41:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  42:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  43:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  44:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  45:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  46:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  47:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  48:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCHAR          char
  49:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portFLOAT         float
  50:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDOUBLE        double
  51:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portLONG          long
  52:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSHORT         short
  53:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  54:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBASE_TYPE     long
  55:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  56:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  57:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef long             BaseType_t;
  58:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef unsigned long    UBaseType_t;
  59:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  60:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  61:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint16_t     TickType_t;
  62:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  63:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #else
  64:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint32_t     TickType_t;
  65:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  66:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  67:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  68:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not need to be guarded with a critical section. */
  69:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  70:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  71:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  72:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  73:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  74:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  75:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  76:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  77:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  78:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  79:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 78


  80:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  81:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD()                                 \
  82:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {                                                   \
  83:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  84:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  85:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****                                                         \
  86:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  87:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  88:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  89:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "isb" );                                  \
  90:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
  91:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  92:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  93:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  94:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    do { if( xSwitchRequired != pdFALSE ) portY
  95:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  96:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  97:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  98:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  99:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortEnterCritical( void );
 100:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortExitCritical( void );
 101:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 102:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 103:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 104:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 105:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 106:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 107:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 109:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 110:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 111:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 112:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * (which build with all the ports) will build. */
 113:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 114:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 115:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 116:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 117:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 118:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 119:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 120:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 121:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 122:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 123:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 124:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 125:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 126:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 127:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 128:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 130:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 131:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Generic helper function. */
 132:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 133:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 134:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             uint8_t ucReturn;
 135:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 136:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
ARM GAS  /tmp/ccjYyDGQ.s 			page 79


 137:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             return ucReturn;
 139:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 140:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 141:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Check the configuration. */
 142:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 143:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 144:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #endif
 145:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 146:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 147:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 148:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 149:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 150:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 152:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 153:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 154:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 155:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 156:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 157:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 158:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef configASSERT
 159:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         void vPortValidateInterruptPriority( void );
 160:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 161:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 162:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 164:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNOP()
 165:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 166:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portINLINE              __inline
 167:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 168:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portFORCE_INLINE
 169:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 170:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 171:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 172:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 173:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 174:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulCurrentInterrupt;
 175:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         BaseType_t xReturn;
 176:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 178:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 179:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 180:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 181:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 182:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdFALSE;
 183:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 184:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         else
 185:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 186:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdTRUE;
 187:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 188:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return xReturn;
 190:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 191:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 192:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 193:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 80


 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 269              		.loc 2 194 34 view .LVU75
 270              	.LBB119:
 195:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulNewBASEPRI;
 271              		.loc 2 196 9 view .LVU76
 197:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 198:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 272              		.loc 2 198 9 view .LVU77
 273              		.syntax unified
 274              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 275 004c 4FF05003 			mov r3, #80												
 276 0050 83F31188 		msr basepri, r3											
 277 0054 BFF36F8F 		isb														
 278 0058 BFF34F8F 		dsb														
 279              	
 280              	@ 0 "" 2
 281              	.LVL17:
 282              		.thumb
 283              		.syntax unified
 284              	.L20:
 285              		.loc 2 198 9 is_stmt 0 view .LVU78
 286              	.LBE119:
 287              	.LBE118:
 914:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 288              		.loc 1 914 5 is_stmt 1 discriminator 2 view .LVU79
 914:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 289              		.loc 1 914 5 discriminator 2 view .LVU80
 914:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 290              		.loc 1 914 5 discriminator 2 view .LVU81
 291 005c FEE7     		b	.L20
 292              	.L19:
 914:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 293              		.loc 1 914 54 view .LVU82
 916:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 294              		.loc 1 916 5 view .LVU83
 295              	.LVL18:
 922:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 296              		.loc 1 922 33 view .LVU84
 925:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 297              		.loc 1 925 5 view .LVU85
 925:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 298              		.loc 1 925 26 is_stmt 0 view .LVU86
 299 005e EF62     		str	r7, [r5, #44]
 928:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 300              		.loc 1 928 9 is_stmt 1 view .LVU87
 928:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 301              		.loc 1 928 34 is_stmt 0 view .LVU88
 302 0060 6F64     		str	r7, [r5, #68]
 932:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 303              		.loc 1 932 5 is_stmt 1 view .LVU89
 304 0062 281D     		adds	r0, r5, #4
 305 0064 FFF7FEFF 		bl	vListInitialiseItem
 306              	.LVL19:
 933:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 307              		.loc 1 933 5 view .LVU90
 308 0068 05F11800 		add	r0, r5, #24
ARM GAS  /tmp/ccjYyDGQ.s 			page 81


 309 006c FFF7FEFF 		bl	vListInitialiseItem
 310              	.LVL20:
 937:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 311              		.loc 1 937 5 view .LVU91
 312 0070 2D61     		str	r5, [r5, #16]
 940:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 313              		.loc 1 940 5 view .LVU92
 314 0072 C7F10507 		rsb	r7, r7, #5
 315              	.LVL21:
 940:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 316              		.loc 1 940 5 is_stmt 0 view .LVU93
 317 0076 AF61     		str	r7, [r5, #24]
 941:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 318              		.loc 1 941 5 is_stmt 1 view .LVU94
 319 0078 6D62     		str	r5, [r5, #36]
 950:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 320              		.loc 1 950 9 view .LVU95
1007:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 321              		.loc 1 1007 13 view .LVU96
1007:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 322              		.loc 1 1007 38 is_stmt 0 view .LVU97
 323 007a 4A46     		mov	r2, r9
 324 007c 4146     		mov	r1, r8
 325 007e 3046     		mov	r0, r6
 326 0080 FFF7FEFF 		bl	pxPortInitialiseStack
 327              	.LVL22:
1007:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 328              		.loc 1 1007 36 view .LVU98
 329 0084 2860     		str	r0, [r5]
1013:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 330              		.loc 1 1013 5 is_stmt 1 view .LVU99
1013:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 331              		.loc 1 1013 7 is_stmt 0 view .LVU100
 332 0086 099B     		ldr	r3, [sp, #36]
 333 0088 03B1     		cbz	r3, .L14
1017:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 334              		.loc 1 1017 9 is_stmt 1 view .LVU101
1017:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 335              		.loc 1 1017 24 is_stmt 0 view .LVU102
 336 008a 1D60     		str	r5, [r3]
1021:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 337              		.loc 1 1021 33 is_stmt 1 view .LVU103
 338              	.L14:
1023:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 339              		.loc 1 1023 1 is_stmt 0 view .LVU104
 340 008c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
1023:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 341              		.loc 1 1023 1 view .LVU105
 342              		.cfi_endproc
 343              	.LFE5:
 345              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 346              		.align	1
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 351              	prvInitialiseTaskLists:
 352              	.LFB32:
ARM GAS  /tmp/ccjYyDGQ.s 			page 82


3650:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     UBaseType_t uxPriority;
 353              		.loc 1 3650 1 is_stmt 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357 0000 38B5     		push	{r3, r4, r5, lr}
 358              	.LCFI1:
 359              		.cfi_def_cfa_offset 16
 360              		.cfi_offset 3, -16
 361              		.cfi_offset 4, -12
 362              		.cfi_offset 5, -8
 363              		.cfi_offset 14, -4
3651:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 364              		.loc 1 3651 5 view .LVU107
3653:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 365              		.loc 1 3653 5 view .LVU108
 366              	.LVL23:
3653:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 367              		.loc 1 3653 21 is_stmt 0 view .LVU109
 368 0002 0024     		movs	r4, #0
3653:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 369              		.loc 1 3653 5 view .LVU110
 370 0004 07E0     		b	.L25
 371              	.LVL24:
 372              	.L26:
3655:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 373              		.loc 1 3655 9 is_stmt 1 discriminator 3 view .LVU111
 374 0006 04EB8402 		add	r2, r4, r4, lsl #2
 375 000a 9300     		lsls	r3, r2, #2
 376 000c 0B48     		ldr	r0, .L28
 377 000e 1844     		add	r0, r0, r3
 378 0010 FFF7FEFF 		bl	vListInitialise
 379              	.LVL25:
3653:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 380              		.loc 1 3653 94 discriminator 3 view .LVU112
3653:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 381              		.loc 1 3653 104 is_stmt 0 discriminator 3 view .LVU113
 382 0014 0134     		adds	r4, r4, #1
 383              	.LVL26:
 384              	.L25:
3653:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 385              		.loc 1 3653 43 is_stmt 1 discriminator 1 view .LVU114
3653:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 386              		.loc 1 3653 5 is_stmt 0 discriminator 1 view .LVU115
 387 0016 042C     		cmp	r4, #4
 388 0018 F5D9     		bls	.L26
3658:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     vListInitialise( &xDelayedTaskList2 );
 389              		.loc 1 3658 5 is_stmt 1 view .LVU116
 390 001a 094D     		ldr	r5, .L28+4
 391 001c 2846     		mov	r0, r5
 392 001e FFF7FEFF 		bl	vListInitialise
 393              	.LVL27:
3659:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     vListInitialise( &xPendingReadyList );
 394              		.loc 1 3659 5 view .LVU117
 395 0022 084C     		ldr	r4, .L28+8
 396              	.LVL28:
3659:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     vListInitialise( &xPendingReadyList );
ARM GAS  /tmp/ccjYyDGQ.s 			page 83


 397              		.loc 1 3659 5 is_stmt 0 view .LVU118
 398 0024 2046     		mov	r0, r4
 399 0026 FFF7FEFF 		bl	vListInitialise
 400              	.LVL29:
3660:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 401              		.loc 1 3660 5 is_stmt 1 view .LVU119
 402 002a 0748     		ldr	r0, .L28+12
 403 002c FFF7FEFF 		bl	vListInitialise
 404              	.LVL30:
3676:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
 405              		.loc 1 3676 5 view .LVU120
3676:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
 406              		.loc 1 3676 23 is_stmt 0 view .LVU121
 407 0030 064B     		ldr	r3, .L28+16
 408 0032 1D60     		str	r5, [r3]
3677:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 409              		.loc 1 3677 5 is_stmt 1 view .LVU122
3677:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 410              		.loc 1 3677 31 is_stmt 0 view .LVU123
 411 0034 064B     		ldr	r3, .L28+20
 412 0036 1C60     		str	r4, [r3]
3678:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 413              		.loc 1 3678 1 view .LVU124
 414 0038 38BD     		pop	{r3, r4, r5, pc}
 415              	.L29:
 416 003a 00BF     		.align	2
 417              	.L28:
 418 003c 00000000 		.word	.LANCHOR0
 419 0040 00000000 		.word	.LANCHOR3
 420 0044 00000000 		.word	.LANCHOR4
 421 0048 00000000 		.word	.LANCHOR5
 422 004c 00000000 		.word	.LANCHOR1
 423 0050 00000000 		.word	.LANCHOR6
 424              		.cfi_endproc
 425              	.LFE32:
 427              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 428              		.align	1
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 433              	prvAddNewTaskToReadyList:
 434              	.LVL31:
 435              	.LFB6:
1027:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
 436              		.loc 1 1027 1 is_stmt 1 view -0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
1027:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
 440              		.loc 1 1027 1 is_stmt 0 view .LVU126
 441 0000 10B5     		push	{r4, lr}
 442              	.LCFI2:
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 4, -8
 445              		.cfi_offset 14, -4
 446 0002 0446     		mov	r4, r0
1030:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
ARM GAS  /tmp/ccjYyDGQ.s 			page 84


 447              		.loc 1 1030 5 is_stmt 1 view .LVU127
 448 0004 FFF7FEFF 		bl	vPortEnterCritical
 449              	.LVL32:
1032:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 450              		.loc 1 1032 9 view .LVU128
1032:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 451              		.loc 1 1032 31 is_stmt 0 view .LVU129
 452 0008 294A     		ldr	r2, .L38
 453 000a 1368     		ldr	r3, [r2]
 454 000c 0133     		adds	r3, r3, #1
 455 000e 1360     		str	r3, [r2]
1034:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 456              		.loc 1 1034 9 is_stmt 1 view .LVU130
1034:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 457              		.loc 1 1034 26 is_stmt 0 view .LVU131
 458 0010 284B     		ldr	r3, .L38+4
 459 0012 1B68     		ldr	r3, [r3]
1034:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 460              		.loc 1 1034 11 view .LVU132
 461 0014 5BB1     		cbz	r3, .L36
1057:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 462              		.loc 1 1057 13 is_stmt 1 view .LVU133
1057:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 463              		.loc 1 1057 35 is_stmt 0 view .LVU134
 464 0016 284B     		ldr	r3, .L38+8
 465 0018 1B68     		ldr	r3, [r3]
1057:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 466              		.loc 1 1057 15 view .LVU135
 467 001a 6BB9     		cbnz	r3, .L32
1059:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 468              		.loc 1 1059 17 is_stmt 1 view .LVU136
1059:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 469              		.loc 1 1059 33 is_stmt 0 view .LVU137
 470 001c 254B     		ldr	r3, .L38+4
 471 001e 1B68     		ldr	r3, [r3]
 472 0020 DA6A     		ldr	r2, [r3, #44]
1059:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 473              		.loc 1 1059 57 view .LVU138
 474 0022 E36A     		ldr	r3, [r4, #44]
1059:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 475              		.loc 1 1059 19 view .LVU139
 476 0024 9A42     		cmp	r2, r3
 477 0026 07D8     		bhi	.L32
1061:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 478              		.loc 1 1061 21 is_stmt 1 view .LVU140
1061:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 479              		.loc 1 1061 34 is_stmt 0 view .LVU141
 480 0028 224B     		ldr	r3, .L38+4
 481 002a 1C60     		str	r4, [r3]
 482 002c 04E0     		b	.L32
 483              	.L36:
1038:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 484              		.loc 1 1038 13 is_stmt 1 view .LVU142
1038:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 485              		.loc 1 1038 26 is_stmt 0 view .LVU143
 486 002e 214B     		ldr	r3, .L38+4
 487 0030 1C60     		str	r4, [r3]
ARM GAS  /tmp/ccjYyDGQ.s 			page 85


1040:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 488              		.loc 1 1040 13 is_stmt 1 view .LVU144
1040:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 489              		.loc 1 1040 40 is_stmt 0 view .LVU145
 490 0032 1368     		ldr	r3, [r2]
1040:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 491              		.loc 1 1040 15 view .LVU146
 492 0034 012B     		cmp	r3, #1
 493 0036 37D0     		beq	.L37
 494              	.L32:
1070:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 495              		.loc 1 1070 41 is_stmt 1 view .LVU147
1074:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 496              		.loc 1 1074 9 view .LVU148
1074:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 497              		.loc 1 1074 21 is_stmt 0 view .LVU149
 498 0038 204A     		ldr	r2, .L38+12
 499 003a 1368     		ldr	r3, [r2]
 500 003c 0133     		adds	r3, r3, #1
 501 003e 1360     		str	r3, [r2]
1079:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 502              		.loc 1 1079 13 is_stmt 1 view .LVU150
1079:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 503              		.loc 1 1079 35 is_stmt 0 view .LVU151
 504 0040 E363     		str	r3, [r4, #60]
1082:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 505              		.loc 1 1082 37 is_stmt 1 view .LVU152
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 506              		.loc 1 1084 9 view .LVU153
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 507              		.loc 1 1084 9 view .LVU154
 508 0042 E36A     		ldr	r3, [r4, #44]
 509 0044 1E4A     		ldr	r2, .L38+16
 510 0046 1268     		ldr	r2, [r2]
 511 0048 9342     		cmp	r3, r2
 512 004a 01D9     		bls	.L33
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 513              		.loc 1 1084 9 discriminator 1 view .LVU155
 514 004c 1C4A     		ldr	r2, .L38+16
 515 004e 1360     		str	r3, [r2]
 516              	.L33:
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 517              		.loc 1 1084 9 discriminator 3 view .LVU156
 518              	.LBB120:
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 519              		.loc 1 1084 9 discriminator 3 view .LVU157
 520 0050 1C4A     		ldr	r2, .L38+20
 521 0052 03EB8303 		add	r3, r3, r3, lsl #2
 522 0056 02EB8303 		add	r3, r2, r3, lsl #2
 523 005a 5B68     		ldr	r3, [r3, #4]
 524              	.LVL33:
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 525              		.loc 1 1084 9 discriminator 3 view .LVU158
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 526              		.loc 1 1084 9 discriminator 3 view .LVU159
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 527              		.loc 1 1084 9 discriminator 3 view .LVU160
ARM GAS  /tmp/ccjYyDGQ.s 			page 86


 528 005c A360     		str	r3, [r4, #8]
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 529              		.loc 1 1084 9 discriminator 3 view .LVU161
 530 005e 9868     		ldr	r0, [r3, #8]
 531 0060 E060     		str	r0, [r4, #12]
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 532              		.loc 1 1084 9 discriminator 3 view .LVU162
 533 0062 211D     		adds	r1, r4, #4
 534 0064 4160     		str	r1, [r0, #4]
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 535              		.loc 1 1084 9 discriminator 3 view .LVU163
 536 0066 9960     		str	r1, [r3, #8]
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 537              		.loc 1 1084 9 discriminator 3 view .LVU164
 538 0068 E36A     		ldr	r3, [r4, #44]
 539              	.LVL34:
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 540              		.loc 1 1084 9 is_stmt 0 discriminator 3 view .LVU165
 541 006a 03EB8301 		add	r1, r3, r3, lsl #2
 542 006e 8800     		lsls	r0, r1, #2
 543 0070 02EB8101 		add	r1, r2, r1, lsl #2
 544 0074 6161     		str	r1, [r4, #20]
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 545              		.loc 1 1084 9 is_stmt 1 discriminator 3 view .LVU166
 546 0076 1158     		ldr	r1, [r2, r0]
 547 0078 0131     		adds	r1, r1, #1
 548 007a 1150     		str	r1, [r2, r0]
 549              	.LBE120:
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 550              		.loc 1 1084 9 discriminator 3 view .LVU167
1084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 551              		.loc 1 1084 42 discriminator 3 view .LVU168
1086:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 552              		.loc 1 1086 9 discriminator 3 view .LVU169
1088:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 553              		.loc 1 1088 5 discriminator 3 view .LVU170
 554 007c FFF7FEFF 		bl	vPortExitCritical
 555              	.LVL35:
1090:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 556              		.loc 1 1090 5 discriminator 3 view .LVU171
1090:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 557              		.loc 1 1090 27 is_stmt 0 discriminator 3 view .LVU172
 558 0080 0D4B     		ldr	r3, .L38+8
 559 0082 1B68     		ldr	r3, [r3]
1090:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 560              		.loc 1 1090 7 discriminator 3 view .LVU173
 561 0084 7BB1     		cbz	r3, .L30
1094:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 562              		.loc 1 1094 9 is_stmt 1 view .LVU174
1094:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 563              		.loc 1 1094 25 is_stmt 0 view .LVU175
 564 0086 0B4B     		ldr	r3, .L38+4
 565 0088 1B68     		ldr	r3, [r3]
 566 008a DA6A     		ldr	r2, [r3, #44]
1094:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 567              		.loc 1 1094 48 view .LVU176
 568 008c E36A     		ldr	r3, [r4, #44]
ARM GAS  /tmp/ccjYyDGQ.s 			page 87


1094:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 569              		.loc 1 1094 11 view .LVU177
 570 008e 9A42     		cmp	r2, r3
 571 0090 09D2     		bcs	.L30
1096:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 572              		.loc 1 1096 13 is_stmt 1 view .LVU178
 573 0092 4FF0E023 		mov	r3, #-536813568
 574 0096 4FF08052 		mov	r2, #268435456
 575 009a C3F8042D 		str	r2, [r3, #3332]
1096:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 576              		.loc 1 1096 13 view .LVU179
 577              		.syntax unified
 578              	@ 1096 "../../Middlewares/Third_Party/FreeRTOS/tasks.c" 1
 579 009e BFF34F8F 		dsb
 580              	@ 0 "" 2
1096:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 581              		.loc 1 1096 13 view .LVU180
 582              	@ 1096 "../../Middlewares/Third_Party/FreeRTOS/tasks.c" 1
 583 00a2 BFF36F8F 		isb
 584              	@ 0 "" 2
1096:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 585              		.loc 1 1096 44 view .LVU181
1105:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 586              		.loc 1 1105 33 view .LVU182
 587              		.thumb
 588              		.syntax unified
 589              	.L30:
1107:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 590              		.loc 1 1107 1 is_stmt 0 view .LVU183
 591 00a6 10BD     		pop	{r4, pc}
 592              	.LVL36:
 593              	.L37:
1045:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 594              		.loc 1 1045 17 is_stmt 1 view .LVU184
 595 00a8 FFF7FEFF 		bl	prvInitialiseTaskLists
 596              	.LVL37:
 597 00ac C4E7     		b	.L32
 598              	.L39:
 599 00ae 00BF     		.align	2
 600              	.L38:
 601 00b0 00000000 		.word	.LANCHOR7
 602 00b4 00000000 		.word	.LANCHOR8
 603 00b8 00000000 		.word	.LANCHOR9
 604 00bc 00000000 		.word	.LANCHOR10
 605 00c0 00000000 		.word	.LANCHOR11
 606 00c4 00000000 		.word	.LANCHOR0
 607              		.cfi_endproc
 608              	.LFE6:
 610              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 611              		.align	1
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 616              	prvAddCurrentTaskToDelayedList:
 617              	.LVL38:
 618              	.LFB51:
4009:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccjYyDGQ.s 			page 88


4010:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4011:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
4012:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4013:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TaskHandle_t xTaskGetCurrentTaskHandle( void )
4014:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4015:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TaskHandle_t xReturn;
4016:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4017:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* A critical section is not required as this is not called from
4018:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * an interrupt and the current TCB will always be the same for any
4019:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * individual execution thread. */
4020:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xReturn = pxCurrentTCB;
4021:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4022:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
4023:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4024:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4025:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
4026:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4027:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4028:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
4029:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4030:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xTaskGetSchedulerState( void )
4031:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4032:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn;
4033:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4034:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xSchedulerRunning == pdFALSE )
4035:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4036:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = taskSCHEDULER_NOT_STARTED;
4037:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4038:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
4039:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4040:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4041:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4042:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = taskSCHEDULER_RUNNING;
4043:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4044:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
4045:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4046:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = taskSCHEDULER_SUSPENDED;
4047:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4048:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4049:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4050:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
4051:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4052:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4053:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4054:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4055:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4056:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4057:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4058:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4059:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4060:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
4061:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
4062:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If the mutex was given back by an interrupt while the queue was
4064:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * locked then the mutex holder might now be NULL.  _RB_ Is this still
4065:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * needed as interrupts can no longer use mutexes? */
4066:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( pxMutexHolder != NULL )
ARM GAS  /tmp/ccjYyDGQ.s 			page 89


4067:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4068:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If the holder of the mutex has a priority below the priority of
4069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * the task attempting to obtain the mutex then it will temporarily
4070:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * inherit the priority of the task attempting to obtain the mutex. */
4071:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
4072:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4073:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Adjust the mutex holder state to account for its new
4074:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * priority.  Only reset the event list item value if the value is
4075:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * not being used for anything else. */
4076:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_
4077:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4078:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) 
4079:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4080:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
4081:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4082:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4083:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4085:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* If the task being modified is in the ready state it will need
4086:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * to be moved into a new list. */
4087:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] )
4088:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4089:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 
4090:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
4091:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* It is known that the task is in its ready list so
4092:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * there is no need to check again and the port level
4093:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * reset macro can be called directly. */
4094:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority 
4095:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
4096:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
4097:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
4098:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4099:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
4100:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4101:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Inherit the priority before being moved into the new list. */
4102:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
4104:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4105:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
4106:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4107:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Just inherit the priority. */
4108:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4109:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4110:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4111:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4112:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4113:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Inheritance occurred. */
4114:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
4115:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4116:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
4117:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4118:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4119:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4120:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The base priority of the mutex holder is lower than the
4121:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * priority of the task attempting to take the mutex, but the
4122:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * current priority of the mutex holder is not lower than the
4123:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * priority of the task attempting to take the mutex.
ARM GAS  /tmp/ccjYyDGQ.s 			page 90


4124:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * Therefore the mutex holder must have already inherited a
4125:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * priority, but inheritance would have occurred if that had
4126:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * not been the case. */
4127:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xReturn = pdTRUE;
4128:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4129:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
4130:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4131:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4132:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4133:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4134:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4135:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
4136:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4137:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4138:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4139:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4140:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
4141:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4142:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4143:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4144:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4145:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4146:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4147:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4148:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4149:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4150:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
4151:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
4152:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( pxMutexHolder != NULL )
4154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4155:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* A task can only have an inherited priority if it holds the mutex.
4156:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * If the mutex is held by a task then it cannot be given from an
4157:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * interrupt, and if a mutex is given by the holding task then it must
4158:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * be the running state task. */
4159:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( pxTCB == pxCurrentTCB );
4160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
4161:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
4162:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4163:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Has the holder of the mutex inherited the priority of another
4164:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * task? */
4165:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4166:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4167:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Only disinherit if no other mutexes are held. */
4168:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4169:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4170:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* A task can only have an inherited priority if it holds
4171:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * the mutex.  If the mutex is held by a task then it cannot be
4172:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * given from an interrupt, and if a mutex is given by the
4173:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * holding task then it must be the running state task.  Remove
4174:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * the holding task from the ready list. */
4175:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4176:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
4177:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4178:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
4179:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
4180:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
ARM GAS  /tmp/ccjYyDGQ.s 			page 91


4181:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4182:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
4183:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4184:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Disinherit the priority before adding the task into the
4185:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * new  ready list. */
4186:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4187:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = pxTCB->uxBasePriority;
4188:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4189:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Reset the event list item value.  It cannot be in use for
4190:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * any other purpose if this task is running, and it must be
4191:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * running to give back the mutex. */
4192:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_P
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
4194:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4195:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Return true to indicate that a context switch is required.
4196:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * This is only actually required in the corner case whereby
4197:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * multiple mutexes were held and the mutexes were given back
4198:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * in an order different to that in which they were taken.
4199:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * If a context switch did not occur when the first mutex was
4200:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * returned, even if a task was waiting on it, then a context
4201:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * switch should occur when the last mutex is returned whether
4202:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * a task is waiting on it or not. */
4203:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xReturn = pdTRUE;
4204:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4205:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
4206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4207:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4208:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4209:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4210:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
4211:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4212:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4213:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4214:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4215:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
4216:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4217:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4218:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4219:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4220:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
4221:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4222:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4223:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4224:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4225:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4226:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4227:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4228:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder,
4229:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                               UBaseType_t uxHighestPriorityWaitingTask )
4230:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4231:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
4232:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4233:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4234:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4235:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( pxMutexHolder != NULL )
4236:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4237:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If pxMutexHolder is not NULL then the holder must hold at least
ARM GAS  /tmp/ccjYyDGQ.s 			page 92


4238:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * one mutex. */
4239:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
4240:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4241:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Determine the priority to which the priority of the task that
4242:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * holds the mutex should be set.  This will be the greater of the
4243:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * holding task's base priority and the priority of the highest
4244:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * priority task that is waiting to obtain the mutex. */
4245:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4246:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4247:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxPriorityToUse = uxHighestPriorityWaitingTask;
4248:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4249:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
4250:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4251:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxPriorityToUse = pxTCB->uxBasePriority;
4252:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4253:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4254:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Does the priority need to change? */
4255:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxTCB->uxPriority != uxPriorityToUse )
4256:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4257:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Only disinherit if no other mutexes are held.  This is a
4258:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * simplification in the priority inheritance implementation.  If
4259:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * the task that holds the mutex is also holding other mutexes then
4260:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * the other mutexes may have caused the priority inheritance. */
4261:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4262:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4263:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* If a task has timed out because it already holds the
4264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * mutex it was trying to obtain then it cannot of inherited
4265:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * its own priority. */
4266:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     configASSERT( pxTCB != pxCurrentTCB );
4267:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4268:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Disinherit the priority, remembering the previous
4269:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * priority to facilitate determining the subject task's
4270:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * state. */
4271:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     traceTASK_PRIORITY_DISINHERIT( pxTCB, uxPriorityToUse );
4272:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     uxPriorityUsedOnEntry = pxTCB->uxPriority;
4273:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = uxPriorityToUse;
4274:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4275:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Only reset the event list item value if the value is not
4276:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * being used for anything else. */
4277:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_IT
4278:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
4279:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configM
4280:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
4281:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
4282:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
4283:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4284:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
4285:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4286:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* If the running task is not the task that holds the mutex
4287:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * then the task that holds the mutex could be in either the
4288:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * Ready, Blocked or Suspended states.  Only remove the task
4289:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * from its current state list if it is in the Ready state as
4290:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * the task's priority is going to change and there is one
4291:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * Ready list per priority. */
4292:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &
4293:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
4294:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
ARM GAS  /tmp/ccjYyDGQ.s 			page 93


4295:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
4296:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             /* It is known that the task is in its ready list so
4297:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                              * there is no need to check again and the port level
4298:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                              * reset macro can be called directly. */
4299:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4300:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
4301:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         else
4302:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
4303:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
4304:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
4305:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         prvAddTaskToReadyList( pxTCB );
4307:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
4308:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
4309:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
4310:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4311:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
4312:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4313:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
4314:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4315:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4316:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4317:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4318:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
4319:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4320:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4321:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4322:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4323:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
4324:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4325:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4326:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4327:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4328:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4329:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4330:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4331:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4332:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4333:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4334:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskEnterCritical( void )
4335:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4336:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portDISABLE_INTERRUPTS();
4337:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4338:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
4339:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4340:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ( pxCurrentTCB->uxCriticalNesting )++;
4341:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4342:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* This is not the interrupt safe version of the enter critical
4343:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * function so  assert() if it is being called from an interrupt
4344:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * context.  Only API functions that end in "FromISR" can be used in an
4345:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * interrupt.  Only assert if the critical nesting count is 1 to
4346:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * protect against recursive calls if the assert function also uses a
4347:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * critical section. */
4348:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxCurrentTCB->uxCriticalNesting == 1 )
4349:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4350:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 portASSERT_IF_IN_ISR();
4351:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
ARM GAS  /tmp/ccjYyDGQ.s 			page 94


4352:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4353:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
4354:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4355:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4356:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4357:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4358:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4359:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4360:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4361:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4362:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4363:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4364:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskExitCritical( void )
4365:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4366:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
4367:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4368:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxCurrentTCB->uxCriticalNesting > 0U )
4369:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4370:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 ( pxCurrentTCB->uxCriticalNesting )--;
4371:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4372:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxCurrentTCB->uxCriticalNesting == 0U )
4373:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4374:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     portENABLE_INTERRUPTS();
4375:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4376:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
4377:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4378:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4379:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4380:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4381:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
4382:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4383:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4384:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4385:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4386:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
4387:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4388:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4389:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4390:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4391:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4392:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4393:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4394:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4395:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 )
4396:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4397:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     static char * prvWriteNameToBuffer( char * pcBuffer,
4398:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                         const char * pcTaskName )
4399:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4400:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         size_t x;
4401:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4402:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Start by copying the entire string. */
4403:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         strcpy( pcBuffer, pcTaskName );
4404:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4405:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Pad the end of the string with spaces to ensure columns line up when
4406:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * printed out. */
4407:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4408:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
ARM GAS  /tmp/ccjYyDGQ.s 			page 95


4409:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pcBuffer[ x ] = ' ';
4410:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4411:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4412:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Terminate. */
4413:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pcBuffer[ x ] = ( char ) 0x00;
4414:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4415:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Return the new end of string. */
4416:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return &( pcBuffer[ x ] );
4417:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4418:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4419:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4420:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4421:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4422:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4423:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4424:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskList( char * pcWriteBuffer )
4425:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4426:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TaskStatus_t * pxTaskStatusArray;
4427:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxArraySize, x;
4428:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         char cStatus;
4429:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4430:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /*
4431:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * PLEASE NOTE:
4432:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          *
4433:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * This function is provided for convenience only, and is used by many
4434:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * of the demo applications.  Do not consider it to be part of the
4435:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * scheduler.
4436:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          *
4437:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4438:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * uxTaskGetSystemState() output into a human readable table that
4439:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * displays task: names, states, priority, stack usage and task number.
4440:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * Stack usage specified as the number of unused StackType_t words stack can hold
4441:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * on top of stack - not the number of bytes.
4442:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          *
4443:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * vTaskList() has a dependency on the sprintf() C library function that
4444:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * might bloat the code size, use a lot of stack, and provide different
4445:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * results on different platforms.  An alternative, tiny, third party,
4446:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * and limited functionality implementation of sprintf() is provided in
4447:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * many of the FreeRTOS/Demo sub-directories in a file called
4448:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * printf-stdarg.c (note printf-stdarg.c does not provide a full
4449:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * snprintf() implementation!).
4450:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          *
4451:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * It is recommended that production systems call uxTaskGetSystemState()
4452:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * directly to get access to raw stats data, rather than indirectly
4453:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * through a call to vTaskList().
4454:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          */
4455:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4456:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4457:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Make sure the write buffer does not contain a string. */
4458:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         *pcWriteBuffer = ( char ) 0x00;
4459:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4460:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Take a snapshot of the number of tasks in case it changes while this
4461:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * function is executing. */
4462:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uxArraySize = uxCurrentNumberOfTasks;
4463:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4464:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Allocate an array index for each task.  NOTE!  if
4465:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
ARM GAS  /tmp/ccjYyDGQ.s 			page 96


4466:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * equate to NULL. */
4467:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint
4468:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4469:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( pxTaskStatusArray != NULL )
4470:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4471:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Generate the (binary) data. */
4472:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4473:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4474:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Create a human readable table from the binary data. */
4475:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             for( x = 0; x < uxArraySize; x++ )
4476:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4477:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 switch( pxTaskStatusArray[ x ].eCurrentState )
4478:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4479:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     case eRunning:
4480:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         cStatus = tskRUNNING_CHAR;
4481:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         break;
4482:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4483:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     case eReady:
4484:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         cStatus = tskREADY_CHAR;
4485:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         break;
4486:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4487:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     case eBlocked:
4488:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         cStatus = tskBLOCKED_CHAR;
4489:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         break;
4490:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4491:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     case eSuspended:
4492:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         cStatus = tskSUSPENDED_CHAR;
4493:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         break;
4494:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4495:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     case eDeleted:
4496:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         cStatus = tskDELETED_CHAR;
4497:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         break;
4498:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4499:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     case eInvalid: /* Fall through. */
4500:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     default:       /* Should not get here, but it is included
4501:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                     * to prevent static checking errors. */
4502:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         cStatus = ( char ) 0x00;
4503:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         break;
4504:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4505:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4506:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Write the task name to the string, padding with spaces so it
4507:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * can be printed in tabular form more easily. */
4508:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskN
4509:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4510:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Write the rest of the string. */
4511:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskSta
4512:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pcWriteBuffer += strlen( pcWriteBuffer );                                          
4513:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4514:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4515:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4516:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * is 0 then vPortFree() will be #defined to nothing. */
4517:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vPortFree( pxTaskStatusArray );
4518:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4519:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
4520:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4521:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4522:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
ARM GAS  /tmp/ccjYyDGQ.s 			page 97


4523:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4524:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4525:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) ) */
4526:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
4527:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4528:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4529:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4530:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskGetRunTimeStats( char * pcWriteBuffer )
4531:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4532:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TaskStatus_t * pxTaskStatusArray;
4533:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxArraySize, x;
4534:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configRUN_TIME_COUNTER_TYPE ulTotalTime, ulStatsAsPercentage;
4535:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4536:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /*
4537:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * PLEASE NOTE:
4538:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          *
4539:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * This function is provided for convenience only, and is used by many
4540:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * of the demo applications.  Do not consider it to be part of the
4541:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * scheduler.
4542:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          *
4543:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4544:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * of the uxTaskGetSystemState() output into a human readable table that
4545:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * displays the amount of time each task has spent in the Running state
4546:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * in both absolute and percentage terms.
4547:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          *
4548:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4549:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * function that might bloat the code size, use a lot of stack, and
4550:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * provide different results on different platforms.  An alternative,
4551:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * tiny, third party, and limited functionality implementation of
4552:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4553:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4554:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * a full snprintf() implementation!).
4555:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          *
4556:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * It is recommended that production systems call uxTaskGetSystemState()
4557:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * directly to get access to raw stats data, rather than indirectly
4558:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * through a call to vTaskGetRunTimeStats().
4559:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          */
4560:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4561:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Make sure the write buffer does not contain a string. */
4562:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         *pcWriteBuffer = ( char ) 0x00;
4563:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4564:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Take a snapshot of the number of tasks in case it changes while this
4565:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * function is executing. */
4566:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uxArraySize = uxCurrentNumberOfTasks;
4567:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4568:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Allocate an array index for each task.  NOTE!  If
4569:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4570:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * equate to NULL. */
4571:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint
4572:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4573:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( pxTaskStatusArray != NULL )
4574:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4575:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Generate the (binary) data. */
4576:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4577:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4578:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* For percentage calculations. */
4579:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ulTotalTime /= 100UL;
ARM GAS  /tmp/ccjYyDGQ.s 			page 98


4580:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4581:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Avoid divide by zero errors. */
4582:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( ulTotalTime > 0UL )
4583:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4584:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Create a human readable table from the binary data. */
4585:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 for( x = 0; x < uxArraySize; x++ )
4586:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4587:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* What percentage of the total run time has the task used?
4588:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * This will always be rounded down to the nearest integer.
4589:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * ulTotalRunTime has already been divided by 100. */
4590:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4591:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4592:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Write the task name to the string, padding with
4593:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * spaces so it can be printed in tabular form more
4594:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * easily. */
4595:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcT
4596:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4597:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( ulStatsAsPercentage > 0UL )
4598:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
4599:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         #ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4600:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
4601:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ul
4602:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
4603:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         #else
4604:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
4605:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             /* sizeof( int ) == sizeof( long ) so a smaller
4606:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                              * printf() library can be used. */
4607:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStat
4608:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
4609:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         #endif
4610:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
4611:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
4612:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
4613:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* If the percentage is zero here then the task has
4614:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                          * consumed less than 1% of the total run time. */
4615:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         #ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4616:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
4617:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulR
4618:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
4619:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         #else
4620:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
4621:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             /* sizeof( int ) == sizeof( long ) so a smaller
4622:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                              * printf() library can be used. */
4623:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStat
4624:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
4625:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         #endif
4626:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
4627:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4628:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok o
4629:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4630:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4631:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
4632:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4633:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4634:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4635:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4636:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
ARM GAS  /tmp/ccjYyDGQ.s 			page 99


4637:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * is 0 then vPortFree() will be #defined to nothing. */
4638:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vPortFree( pxTaskStatusArray );
4639:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4640:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
4641:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4642:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4643:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4644:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4645:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4646:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4647:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4648:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4649:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4650:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
4651:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TickType_t uxReturn;
4652:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4653:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4654:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4655:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Reset the event list item to its normal value - so it can be used with
4656:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * queues and semaphores. */
4657:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITI
4658:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4659:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return uxReturn;
4660:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
4661:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4662:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4663:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4664:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4665:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4666:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4667:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If xSemaphoreCreateMutex() is called before any tasks have been created
4668:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * then pxCurrentTCB will be NULL. */
4669:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( pxCurrentTCB != NULL )
4670:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4671:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ( pxCurrentTCB->uxMutexesHeld )++;
4672:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4673:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4674:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return pxCurrentTCB;
4675:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4676:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4677:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4678:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4679:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4680:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4681:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4682:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     uint32_t ulTaskGenericNotifyTake( UBaseType_t uxIndexToWait,
4683:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                       BaseType_t xClearCountOnExit,
4684:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                       TickType_t xTicksToWait )
4685:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4686:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint32_t ulReturn;
4687:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4688:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToWait < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4689:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4690:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4691:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4692:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Only block if the notification count is not already non-zero. */
4693:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] == 0UL )
ARM GAS  /tmp/ccjYyDGQ.s 			page 100


4694:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4695:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Mark this task as waiting for a notification. */
4696:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
4697:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4698:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
4699:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4700:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4701:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_TAKE_BLOCK( uxIndexToWait );
4702:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4703:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* All ports are written to allow a yield in a critical
4704:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * section (some will yield immediately, others wait until the
4705:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * critical section exits) - but it is not something that
4706:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * application code should ever do. */
4707:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     portYIELD_WITHIN_API();
4708:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4709:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
4710:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4711:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4712:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4713:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4714:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
4715:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4716:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4717:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4718:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4719:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4720:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4721:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4722:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4723:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_TAKE( uxIndexToWait );
4724:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
4725:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4726:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( ulReturn != 0UL )
4727:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4728:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( xClearCountOnExit != pdFALSE )
4729:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4730:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = 0UL;
4731:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4732:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
4733:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4734:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = ulReturn - ( uint32_t ) 1;
4735:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4736:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4737:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
4738:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4740:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4741:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4742:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
4743:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4744:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4745:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4746:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return ulReturn;
4747:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4748:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4749:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4750:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccjYyDGQ.s 			page 101


4751:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4752:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4753:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4754:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotifyWait( UBaseType_t uxIndexToWait,
4755:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                        uint32_t ulBitsToClearOnEntry,
4756:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                        uint32_t ulBitsToClearOnExit,
4757:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                        uint32_t * pulNotificationValue,
4758:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                        TickType_t xTicksToWait )
4759:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4760:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn;
4761:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4762:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToWait < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4763:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4764:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4765:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4766:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Only block if a notification is not already pending. */
4767:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
4768:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4769:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Clear bits in the task's notification value as bits may get
4770:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * set  by the notifying task or interrupt.  This can be used to
4771:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * clear the value to zero. */
4772:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnEntry;
4773:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4774:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Mark this task as waiting for a notification. */
4775:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
4776:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4777:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
4778:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4779:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4780:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_WAIT_BLOCK( uxIndexToWait );
4781:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4782:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* All ports are written to allow a yield in a critical
4783:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * section (some will yield immediately, others wait until the
4784:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * critical section exits) - but it is not something that
4785:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * application code should ever do. */
4786:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     portYIELD_WITHIN_API();
4787:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4788:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
4789:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4790:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4791:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4792:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4793:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
4794:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4796:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4797:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4798:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4799:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4800:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4801:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4802:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_WAIT( uxIndexToWait );
4803:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4804:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pulNotificationValue != NULL )
4805:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4806:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Output the current notification value, which may or may not
4807:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * have changed. */
ARM GAS  /tmp/ccjYyDGQ.s 			page 102


4808:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 *pulNotificationValue = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
4809:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4810:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4811:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If ucNotifyValue is set then either the task never entered the
4812:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * blocked state (because a notification was already pending) or the
4813:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * task unblocked because of a notification.  Otherwise the task
4814:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * unblocked because of a timeout. */
4815:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
4816:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4817:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* A notification was not received. */
4818:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdFALSE;
4819:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4820:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
4821:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4822:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* A notification was already pending or a notification was
4823:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * received while the task was waiting. */
4824:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnExit;
4825:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
4826:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4827:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4828:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
4829:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4830:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4831:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4832:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
4833:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4834:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4835:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4836:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4837:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4838:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4839:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4840:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify,
4841:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                    UBaseType_t uxIndexToNotify,
4842:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                    uint32_t ulValue,
4843:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                    eNotifyAction eAction,
4844:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                    uint32_t * pulPreviousNotificationValue )
4845:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4846:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
4847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
4848:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
4849:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4850:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4851:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
4852:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
4853:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4854:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4855:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
4856:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pulPreviousNotificationValue != NULL )
4857:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4858:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
4859:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4860:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4861:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
4862:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4863:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
4864:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 103


4865:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             switch( eAction )
4866:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4867:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 case eSetBits:
4868:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
4869:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
4870:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4871:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 case eIncrement:
4872:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
4873:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
4874:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4875:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 case eSetValueWithOverwrite:
4876:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
4877:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
4878:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4879:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 case eSetValueWithoutOverwrite:
4880:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4881:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4882:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
4883:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
4884:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
4885:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
4886:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
4887:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* The value could not be written to the task. */
4888:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         xReturn = pdFAIL;
4889:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
4890:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4891:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
4892:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4893:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 case eNoAction:
4894:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4895:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The task is being notified without its notify value being
4896:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * updated. */
4897:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
4898:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4899:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 default:
4900:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4901:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Should not get here if all enums are handled.
4902:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * Artificially force an assert by testing a value the
4903:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * compiler can't assume is const. */
4904:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     configASSERT( xTickCount == ( TickType_t ) 0 );
4905:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4906:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
4907:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4908:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4909:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             traceTASK_NOTIFY( uxIndexToNotify );
4910:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4911:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
4912:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * notification then unblock it now. */
4913:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4914:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4915:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
4917:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4918:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* The task should not have been on an event list. */
4919:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4920:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4921:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #if ( configUSE_TICKLESS_IDLE != 0 )
ARM GAS  /tmp/ccjYyDGQ.s 			page 104


4922:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4923:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* If a task is blocked waiting for a notification then
4924:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * xNextTaskUnblockTime might be set to the blocked task's time
4925:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * out time.  If the task is unblocked for a reason other than
4926:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * a timeout xNextTaskUnblockTime is normally left unchanged,
4927:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * because it will automatically get reset to a new value when
4928:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * the tick count equals xNextTaskUnblockTime.  However if
4929:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * tickless idling is used it might be more important to enter
4930:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * sleep mode at the earliest possible time - so reset
4931:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * xNextTaskUnblockTime here to ensure it is updated at the
4932:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * earliest possible time. */
4933:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvResetNextTaskUnblockTime();
4934:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4935:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 #endif
4936:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4937:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4938:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4939:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The notified task has a priority above the currently
4940:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * executing task so a yield is required. */
4941:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
4942:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4943:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
4944:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
4945:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4946:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
4947:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4948:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
4949:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
4950:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4951:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
4952:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
4953:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4954:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4955:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
4956:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
4957:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4958:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4959:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4960:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4961:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4962:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4963:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify,
4964:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                           UBaseType_t uxIndexToNotify,
4965:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                           uint32_t ulValue,
4966:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                           eNotifyAction eAction,
4967:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                           uint32_t * pulPreviousNotificationValue,
4968:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                           BaseType_t * pxHigherPriorityTaskWoken )
4969:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
4970:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
4971:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
4972:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
4973:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
4974:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4975:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
4976:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4977:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4978:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
ARM GAS  /tmp/ccjYyDGQ.s 			page 105


4979:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
4980:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
4981:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
4982:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4983:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
4984:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4985:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
4986:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
4987:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
4988:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
4989:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
4990:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
4991:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
4992:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * provided on the following link:
4993:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
4994:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4995:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4996:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
4997:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
4998:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4999:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
5000:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pulPreviousNotificationValue != NULL )
5001:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
5002:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
5003:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
5004:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5005:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
5006:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
5007:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5008:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             switch( eAction )
5009:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
5010:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 case eSetBits:
5011:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
5012:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
5013:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5014:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 case eIncrement:
5015:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
5016:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
5017:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5018:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 case eSetValueWithOverwrite:
5019:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
5020:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
5021:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5022:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 case eSetValueWithoutOverwrite:
5023:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5024:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
5025:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
5026:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
5027:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
5028:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     else
5029:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
5030:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         /* The value could not be written to the task. */
5031:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         xReturn = pdFAIL;
5032:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
5033:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5034:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
5035:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 106


5036:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 case eNoAction:
5037:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5038:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The task is being notified without its notify value being
5039:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * updated. */
5040:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
5041:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5042:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 default:
5043:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5044:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Should not get here if all enums are handled.
5045:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * Artificially force an assert by testing a value the
5046:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * compiler can't assume is const. */
5047:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     configASSERT( xTickCount == ( TickType_t ) 0 );
5048:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
5049:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
5050:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5051:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_FROM_ISR( uxIndexToNotify );
5052:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5053:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
5054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * notification then unblock it now. */
5055:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5056:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
5057:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* The task should not have been on an event list. */
5058:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5059:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5060:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5061:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
5062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
5064:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
5065:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
5066:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
5067:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The delayed and ready lists cannot be accessed, so hold
5068:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * this task pending until the scheduler is resumed. */
5069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5070:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
5071:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5072:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5073:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
5074:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The notified task has a priority above the currently
5075:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * executing task so a yield is required. */
5076:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( pxHigherPriorityTaskWoken != NULL )
5077:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
5078:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         *pxHigherPriorityTaskWoken = pdTRUE;
5079:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
5080:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5081:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Mark that a yield is pending in case the user is not
5082:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * using the "xHigherPriorityTaskWoken" parameter to an ISR
5083:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * safe FreeRTOS function. */
5084:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xYieldPending = pdTRUE;
5085:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
5086:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
5087:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
5088:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5089:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
5090:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
5091:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
5092:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
ARM GAS  /tmp/ccjYyDGQ.s 			page 107


5093:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5094:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
5095:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
5096:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5097:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5098:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5099:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5100:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5101:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5102:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     void vTaskGenericNotifyGiveFromISR( TaskHandle_t xTaskToNotify,
5103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                         UBaseType_t uxIndexToNotify,
5104:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                         BaseType_t * pxHigherPriorityTaskWoken )
5105:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
5106:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
5107:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
5108:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
5109:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5110:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
5111:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
5112:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5113:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
5114:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
5115:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
5116:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
5117:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5118:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
5119:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5120:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
5121:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
5122:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
5123:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
5124:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
5125:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
5126:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
5127:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * provided on the following link:
5128:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
5129:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5130:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5131:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
5132:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5133:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5134:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
5135:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
5136:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
5137:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5138:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* 'Giving' is equivalent to incrementing a count in a counting
5139:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * semaphore. */
5140:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
5141:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5142:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_GIVE_FROM_ISR( uxIndexToNotify );
5143:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5144:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
5145:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * notification then unblock it now. */
5146:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5147:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
5148:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* The task should not have been on an event list. */
5149:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
ARM GAS  /tmp/ccjYyDGQ.s 			page 108


5150:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5151:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5152:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
5153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
5155:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
5156:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
5157:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
5158:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The delayed and ready lists cannot be accessed, so hold
5159:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * this task pending until the scheduler is resumed. */
5160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5161:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
5162:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5163:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5164:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
5165:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* The notified task has a priority above the currently
5166:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * executing task so a yield is required. */
5167:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     if( pxHigherPriorityTaskWoken != NULL )
5168:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
5169:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         *pxHigherPriorityTaskWoken = pdTRUE;
5170:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
5171:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5172:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     /* Mark that a yield is pending in case the user is not
5173:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * using the "xHigherPriorityTaskWoken" parameter in an ISR
5174:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                      * safe FreeRTOS function. */
5175:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xYieldPending = pdTRUE;
5176:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
5177:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
5178:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
5179:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5180:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
5181:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
5182:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
5183:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5184:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
5185:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5187:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5188:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5189:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5190:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5191:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotifyStateClear( TaskHandle_t xTask,
5192:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                              UBaseType_t uxIndexToClear )
5193:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
5194:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
5195:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn;
5196:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5197:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToClear < configTASK_NOTIFICATION_ARRAY_ENTRIES );
5198:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5199:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If null is passed in here then it is the calling task that is having
5200:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * its notification state cleared. */
5201:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
5202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5203:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
5204:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
5205:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( pxTCB->ucNotifyState[ uxIndexToClear ] == taskNOTIFICATION_RECEIVED )
5206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
ARM GAS  /tmp/ccjYyDGQ.s 			page 109


5207:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxTCB->ucNotifyState[ uxIndexToClear ] = taskNOT_WAITING_NOTIFICATION;
5208:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
5209:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
5210:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
5211:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
5212:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdFAIL;
5213:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
5214:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
5215:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
5216:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5217:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xReturn;
5218:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
5219:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5220:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5221:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5222:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5223:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5224:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5225:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     uint32_t ulTaskGenericNotifyValueClear( TaskHandle_t xTask,
5226:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                             UBaseType_t uxIndexToClear,
5227:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                             uint32_t ulBitsToClear )
5228:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
5229:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
5230:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint32_t ulReturn;
5231:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5232:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If null is passed in here then it is the calling task that is having
5233:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * its notification state cleared. */
5234:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
5235:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5236:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
5237:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
5238:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Return the notification as it was before the bits were cleared,
5239:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * then clear the bit mask. */
5240:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ulReturn = pxTCB->ulNotifiedValue[ uxIndexToClear ];
5241:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
5242:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
5243:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
5244:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5245:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return ulReturn;
5246:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
5247:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5248:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5249:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5250:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5251:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5252:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5253:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configRUN_TIME_COUNTER_TYPE ulTaskGetIdleRunTimeCounter( void )
5254:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
5255:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return xIdleTaskHandle->ulRunTimeCounter;
5256:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
5257:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5258:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif
5259:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5260:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5261:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5262:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5263:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configRUN_TIME_COUNTER_TYPE ulTaskGetIdleRunTimePercent( void )
ARM GAS  /tmp/ccjYyDGQ.s 			page 110


5264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
5265:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configRUN_TIME_COUNTER_TYPE ulTotalTime, ulReturn;
5266:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5267:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         ulTotalTime = portGET_RUN_TIME_COUNTER_VALUE();
5268:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5269:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* For percentage calculations. */
5270:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         ulTotalTime /= ( configRUN_TIME_COUNTER_TYPE ) 100;
5271:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5272:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Avoid divide by zero errors. */
5273:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( ulTotalTime > ( configRUN_TIME_COUNTER_TYPE ) 0 )
5274:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
5275:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ulReturn = xIdleTaskHandle->ulRunTimeCounter / ulTotalTime;
5276:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
5277:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
5278:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
5279:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ulReturn = 0;
5280:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
5281:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5282:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         return ulReturn;
5283:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
5284:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5285:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** #endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) 
5286:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5287:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5288:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
5289:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                             const BaseType_t xCanBlockIndefinitely )
5290:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** {
 619              		.loc 1 5290 1 view -0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              		.loc 1 5290 1 is_stmt 0 view .LVU186
 624 0000 70B5     		push	{r4, r5, r6, lr}
 625              	.LCFI3:
 626              		.cfi_def_cfa_offset 16
 627              		.cfi_offset 4, -16
 628              		.cfi_offset 5, -12
 629              		.cfi_offset 6, -8
 630              		.cfi_offset 14, -4
 631 0002 0446     		mov	r4, r0
5291:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TickType_t xTimeToWake;
 632              		.loc 1 5291 5 is_stmt 1 view .LVU187
5292:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     const TickType_t xConstTickCount = xTickCount;
 633              		.loc 1 5292 5 view .LVU188
 634              		.loc 1 5292 22 is_stmt 0 view .LVU189
 635 0004 104B     		ldr	r3, .L44
 636 0006 1D68     		ldr	r5, [r3]
 637              	.LVL39:
5293:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5294:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
5295:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
5296:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* About to enter a delayed list, so ensure the ucDelayAborted flag is
5297:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * reset to pdFALSE so it can be detected as having been set to pdTRUE
5298:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * when the task leaves the Blocked state. */
5299:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxCurrentTCB->ucDelayAborted = pdFALSE;
5300:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
5301:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif
ARM GAS  /tmp/ccjYyDGQ.s 			page 111


5302:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5303:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Remove the task from the ready list before adding it to the blocked list
5304:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****      * as the same list item is used for both lists. */
5305:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 638              		.loc 1 5305 5 is_stmt 1 view .LVU190
 639              		.loc 1 5305 38 is_stmt 0 view .LVU191
 640 0008 104E     		ldr	r6, .L44+4
 641 000a 3068     		ldr	r0, [r6]
 642              	.LVL40:
 643              		.loc 1 5305 9 view .LVU192
 644 000c 0430     		adds	r0, r0, #4
 645 000e FFF7FEFF 		bl	uxListRemove
 646              	.LVL41:
5306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
5307:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* The current task must be in a ready list, so there is no need to
5308:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * check, and the port reset macro can be called directly. */
5309:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCu
5310:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
5311:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     else
5312:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
5313:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 647              		.loc 1 5313 33 is_stmt 1 view .LVU193
5314:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
5315:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5316:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskSuspend == 1 )
5317:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
5318:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
5319:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
5320:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Add the task to the suspended task list instead of a delayed task
5321:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * list to ensure it is not woken by a timing event.  It will block
5322:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * indefinitely. */
5323:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5324:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
5325:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
5326:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
5327:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Calculate the time at which the task should be woken if the event
5328:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * does not occur.  This may overflow but this doesn't matter, the
5329:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * kernel will manage it correctly. */
5330:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xTimeToWake = xConstTickCount + xTicksToWait;
5331:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5332:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* The list item will be inserted in wake time order. */
5333:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5334:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5335:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( xTimeToWake < xConstTickCount )
5336:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
5337:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* Wake time has overflowed.  Place this item in the overflow
5338:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * list. */
5339:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5340:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
5341:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
5342:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
5343:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* The wake time has not overflowed, so the current block list
5344:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * is used. */
5345:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5346:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5347:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 /* If the task entering the blocked state was placed at the
5348:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * head of the list of blocked tasks then xNextTaskUnblockTime
ARM GAS  /tmp/ccjYyDGQ.s 			page 112


5349:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                  * needs to be updated too. */
5350:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 if( xTimeToWake < xNextTaskUnblockTime )
5351:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
5352:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xNextTaskUnblockTime = xTimeToWake;
5353:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
5354:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 else
5355:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
5356:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5357:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
5358:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
5359:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
5360:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
5361:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #else /* INCLUDE_vTaskSuspend */
5362:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
5363:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Calculate the time at which the task should be woken if the event
5364:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * does not occur.  This may overflow but this doesn't matter, the kernel
5365:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****          * will manage it correctly. */
5366:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xTimeToWake = xConstTickCount + xTicksToWait;
 648              		.loc 1 5366 9 view .LVU194
 649              		.loc 1 5366 21 is_stmt 0 view .LVU195
 650 0012 2C44     		add	r4, r4, r5
 651              	.LVL42:
5367:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5368:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* The list item will be inserted in wake time order. */
5369:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 652              		.loc 1 5369 9 is_stmt 1 view .LVU196
 653 0014 3368     		ldr	r3, [r6]
 654 0016 5C60     		str	r4, [r3, #4]
5370:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5371:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         if( xTimeToWake < xConstTickCount )
 655              		.loc 1 5371 9 view .LVU197
 656              		.loc 1 5371 11 is_stmt 0 view .LVU198
 657 0018 A542     		cmp	r5, r4
 658 001a 06D9     		bls	.L41
5372:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
5373:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* Wake time has overflowed.  Place this item in the overflow list. */
5374:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 659              		.loc 1 5374 13 is_stmt 1 view .LVU199
 660 001c 0C4B     		ldr	r3, .L44+8
 661 001e 1868     		ldr	r0, [r3]
 662              		.loc 1 5374 68 is_stmt 0 view .LVU200
 663 0020 3168     		ldr	r1, [r6]
 664              		.loc 1 5374 13 view .LVU201
 665 0022 0431     		adds	r1, r1, #4
 666 0024 FFF7FEFF 		bl	vListInsert
 667              	.LVL43:
 668              	.L40:
5375:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
5376:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         else
5377:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
5378:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* The wake time has not overflowed, so the current block list is used. */
5379:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5380:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5381:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             /* If the task entering the blocked state was placed at the head of the
5382:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * list of blocked tasks then xNextTaskUnblockTime needs to be updated
5383:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****              * too. */
5384:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             if( xTimeToWake < xNextTaskUnblockTime )
ARM GAS  /tmp/ccjYyDGQ.s 			page 113


5385:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
5386:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xNextTaskUnblockTime = xTimeToWake;
5387:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
5388:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             else
5389:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
5390:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
5391:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
5392:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
5393:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
5394:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5395:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         ( void ) xCanBlockIndefinitely;
5396:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
5397:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskSuspend */
5398:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 669              		.loc 1 5398 1 view .LVU202
 670 0028 70BD     		pop	{r4, r5, r6, pc}
 671              	.LVL44:
 672              	.L41:
5379:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 673              		.loc 1 5379 13 is_stmt 1 view .LVU203
 674 002a 0A4B     		ldr	r3, .L44+12
 675 002c 1868     		ldr	r0, [r3]
5379:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 676              		.loc 1 5379 60 is_stmt 0 view .LVU204
 677 002e 074B     		ldr	r3, .L44+4
 678 0030 1968     		ldr	r1, [r3]
5379:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 679              		.loc 1 5379 13 view .LVU205
 680 0032 0431     		adds	r1, r1, #4
 681 0034 FFF7FEFF 		bl	vListInsert
 682              	.LVL45:
5384:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 683              		.loc 1 5384 13 is_stmt 1 view .LVU206
5384:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 684              		.loc 1 5384 29 is_stmt 0 view .LVU207
 685 0038 074B     		ldr	r3, .L44+16
 686 003a 1B68     		ldr	r3, [r3]
5384:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 687              		.loc 1 5384 15 view .LVU208
 688 003c A342     		cmp	r3, r4
 689 003e F3D9     		bls	.L40
5386:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 690              		.loc 1 5386 17 is_stmt 1 view .LVU209
5386:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 691              		.loc 1 5386 38 is_stmt 0 view .LVU210
 692 0040 054B     		ldr	r3, .L44+16
 693 0042 1C60     		str	r4, [r3]
5390:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 694              		.loc 1 5390 41 is_stmt 1 view .LVU211
5395:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 695              		.loc 1 5395 9 view .LVU212
 696              		.loc 1 5398 1 is_stmt 0 view .LVU213
 697 0044 F0E7     		b	.L40
 698              	.L45:
 699 0046 00BF     		.align	2
 700              	.L44:
 701 0048 00000000 		.word	.LANCHOR12
ARM GAS  /tmp/ccjYyDGQ.s 			page 114


 702 004c 00000000 		.word	.LANCHOR8
 703 0050 00000000 		.word	.LANCHOR6
 704 0054 00000000 		.word	.LANCHOR1
 705 0058 00000000 		.word	.LANCHOR2
 706              		.cfi_endproc
 707              	.LFE51:
 709              		.section	.text.xTaskCreate,"ax",%progbits
 710              		.align	1
 711              		.global	xTaskCreate
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 716              	xTaskCreate:
 717              	.LVL46:
 718              	.LFB4:
 727:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 719              		.loc 1 727 5 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 8, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 727:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 723              		.loc 1 727 5 is_stmt 0 view .LVU215
 724 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 725              	.LCFI4:
 726              		.cfi_def_cfa_offset 28
 727              		.cfi_offset 4, -28
 728              		.cfi_offset 5, -24
 729              		.cfi_offset 6, -20
 730              		.cfi_offset 7, -16
 731              		.cfi_offset 8, -12
 732              		.cfi_offset 9, -8
 733              		.cfi_offset 14, -4
 734 0004 85B0     		sub	sp, sp, #20
 735              	.LCFI5:
 736              		.cfi_def_cfa_offset 48
 737 0006 0746     		mov	r7, r0
 738 0008 8846     		mov	r8, r1
 739 000a 1446     		mov	r4, r2
 740 000c 1E46     		mov	r6, r3
 728:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 741              		.loc 1 728 9 is_stmt 1 view .LVU216
 729:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 742              		.loc 1 729 9 view .LVU217
 743              	.LBB121:
 760:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 744              		.loc 1 760 13 view .LVU218
 763:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 745              		.loc 1 763 13 view .LVU219
 763:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 746              		.loc 1 763 23 is_stmt 0 view .LVU220
 747 000e 9000     		lsls	r0, r2, #2
 748              	.LVL47:
 763:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 749              		.loc 1 763 23 view .LVU221
 750 0010 FFF7FEFF 		bl	pvPortMalloc
 751              	.LVL48:
 765:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
ARM GAS  /tmp/ccjYyDGQ.s 			page 115


 752              		.loc 1 765 13 is_stmt 1 view .LVU222
 765:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 753              		.loc 1 765 15 is_stmt 0 view .LVU223
 754 0014 10B3     		cbz	r0, .L50
 755 0016 8146     		mov	r9, r0
 768:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 756              		.loc 1 768 17 is_stmt 1 view .LVU224
 768:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 757              		.loc 1 768 40 is_stmt 0 view .LVU225
 758 0018 5420     		movs	r0, #84
 759              	.LVL49:
 768:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 760              		.loc 1 768 40 view .LVU226
 761 001a FFF7FEFF 		bl	pvPortMalloc
 762              	.LVL50:
 770:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 763              		.loc 1 770 17 is_stmt 1 view .LVU227
 770:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 764              		.loc 1 770 19 is_stmt 0 view .LVU228
 765 001e 0546     		mov	r5, r0
 766 0020 C0B1     		cbz	r0, .L48
 772:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 767              		.loc 1 772 21 is_stmt 1 view .LVU229
 768 0022 5422     		movs	r2, #84
 769 0024 0021     		movs	r1, #0
 770 0026 FFF7FEFF 		bl	memset
 771              	.LVL51:
 775:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 772              		.loc 1 775 21 view .LVU230
 775:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 773              		.loc 1 775 39 is_stmt 0 view .LVU231
 774 002a C5F83090 		str	r9, [r5, #48]
 775              	.L49:
 775:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 776              		.loc 1 775 39 view .LVU232
 777              	.LBE121:
 791:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 778              		.loc 1 791 9 is_stmt 1 view .LVU233
 791:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 779              		.loc 1 791 11 is_stmt 0 view .LVU234
 780 002e D5B1     		cbz	r5, .L51
 801:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 781              		.loc 1 801 13 is_stmt 1 view .LVU235
 782 0030 0023     		movs	r3, #0
 783 0032 0393     		str	r3, [sp, #12]
 784 0034 0295     		str	r5, [sp, #8]
 785 0036 0D9B     		ldr	r3, [sp, #52]
 786 0038 0193     		str	r3, [sp, #4]
 787 003a 0C9B     		ldr	r3, [sp, #48]
 788 003c 0093     		str	r3, [sp]
 789 003e 3346     		mov	r3, r6
 790 0040 2246     		mov	r2, r4
 791 0042 4146     		mov	r1, r8
 792 0044 3846     		mov	r0, r7
 793 0046 FFF7FEFF 		bl	prvInitialiseNewTask
 794              	.LVL52:
 802:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = pdPASS;
ARM GAS  /tmp/ccjYyDGQ.s 			page 116


 795              		.loc 1 802 13 view .LVU236
 796 004a 2846     		mov	r0, r5
 797 004c FFF7FEFF 		bl	prvAddNewTaskToReadyList
 798              	.LVL53:
 803:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 799              		.loc 1 803 13 view .LVU237
 803:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 800              		.loc 1 803 21 is_stmt 0 view .LVU238
 801 0050 0120     		movs	r0, #1
 802 0052 05E0     		b	.L46
 803              	.LVL54:
 804              	.L48:
 805              	.LBB122:
 781:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 806              		.loc 1 781 21 is_stmt 1 view .LVU239
 807 0054 4846     		mov	r0, r9
 808              	.LVL55:
 781:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 809              		.loc 1 781 21 is_stmt 0 view .LVU240
 810 0056 FFF7FEFF 		bl	vPortFree
 811              	.LVL56:
 812 005a E8E7     		b	.L49
 813              	.LVL57:
 814              	.L50:
 781:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 815              		.loc 1 781 21 view .LVU241
 816              	.LBE122:
 807:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 817              		.loc 1 807 21 view .LVU242
 818 005c 4FF0FF30 		mov	r0, #-1
 819              	.LVL58:
 820              	.L46:
 811:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 821              		.loc 1 811 5 view .LVU243
 822 0060 05B0     		add	sp, sp, #20
 823              	.LCFI6:
 824              		.cfi_remember_state
 825              		.cfi_def_cfa_offset 28
 826              		@ sp needed
 827 0062 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 828              	.LVL59:
 829              	.L51:
 830              	.LCFI7:
 831              		.cfi_restore_state
 807:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 832              		.loc 1 807 21 view .LVU244
 833 0066 4FF0FF30 		mov	r0, #-1
 834              	.LVL60:
 810:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 835              		.loc 1 810 9 is_stmt 1 view .LVU245
 810:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 836              		.loc 1 810 16 is_stmt 0 view .LVU246
 837 006a F9E7     		b	.L46
 838              		.cfi_endproc
 839              	.LFE4:
 841              		.section	.text.eTaskGetState,"ax",%progbits
 842              		.align	1
ARM GAS  /tmp/ccjYyDGQ.s 			page 117


 843              		.global	eTaskGetState
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 848              	eTaskGetState:
 849              	.LVL61:
 850              	.LFB8:
1347:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         eTaskState eReturn;
 851              		.loc 1 1347 5 is_stmt 1 view -0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
1348:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         List_t const * pxStateList, * pxDelayedList, * pxOverflowedDelayedList;
 855              		.loc 1 1348 9 view .LVU248
1349:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
 856              		.loc 1 1349 9 view .LVU249
1350:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 857              		.loc 1 1350 9 view .LVU250
1352:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 858              		.loc 1 1352 9 view .LVU251
 859 0000 A0B1     		cbz	r0, .L61
1347:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         eTaskState eReturn;
 860              		.loc 1 1347 5 is_stmt 0 discriminator 2 view .LVU252
 861 0002 70B5     		push	{r4, r5, r6, lr}
 862              	.LCFI8:
 863              		.cfi_def_cfa_offset 16
 864              		.cfi_offset 4, -16
 865              		.cfi_offset 5, -12
 866              		.cfi_offset 6, -8
 867              		.cfi_offset 14, -4
 868 0004 0446     		mov	r4, r0
1352:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 869              		.loc 1 1352 30 is_stmt 1 discriminator 2 view .LVU253
1354:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 870              		.loc 1 1354 9 discriminator 2 view .LVU254
1354:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 871              		.loc 1 1354 19 is_stmt 0 discriminator 2 view .LVU255
 872 0006 104B     		ldr	r3, .L63
 873 0008 1B68     		ldr	r3, [r3]
1354:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 874              		.loc 1 1354 11 discriminator 2 view .LVU256
 875 000a 8342     		cmp	r3, r0
 876 000c 19D0     		beq	.L57
1361:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 877              		.loc 1 1361 13 is_stmt 1 view .LVU257
 878 000e FFF7FEFF 		bl	vPortEnterCritical
 879              	.LVL62:
1363:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxDelayedList = pxDelayedTaskList;
 880              		.loc 1 1363 17 view .LVU258
1363:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxDelayedList = pxDelayedTaskList;
 881              		.loc 1 1363 29 is_stmt 0 view .LVU259
 882 0012 6469     		ldr	r4, [r4, #20]
 883              	.LVL63:
1364:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 884              		.loc 1 1364 17 is_stmt 1 view .LVU260
1364:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 885              		.loc 1 1364 31 is_stmt 0 view .LVU261
ARM GAS  /tmp/ccjYyDGQ.s 			page 118


 886 0014 0D4B     		ldr	r3, .L63+4
 887 0016 1E68     		ldr	r6, [r3]
 888              	.LVL64:
1365:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 889              		.loc 1 1365 17 is_stmt 1 view .LVU262
1365:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 890              		.loc 1 1365 41 is_stmt 0 view .LVU263
 891 0018 0D4B     		ldr	r3, .L63+8
 892 001a 1D68     		ldr	r5, [r3]
 893              	.LVL65:
1367:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 894              		.loc 1 1367 13 is_stmt 1 view .LVU264
 895 001c FFF7FEFF 		bl	vPortExitCritical
 896              	.LVL66:
1369:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 897              		.loc 1 1369 13 view .LVU265
1369:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 898              		.loc 1 1369 15 is_stmt 0 view .LVU266
 899 0020 AC42     		cmp	r4, r5
 900 0022 18BF     		it	ne
 901 0024 B442     		cmpne	r4, r6
 902 0026 0AD0     		beq	.L62
1431:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 903              		.loc 1 1431 25 view .LVU267
 904 0028 0120     		movs	r0, #1
 905 002a 0BE0     		b	.L56
 906              	.LVL67:
 907              	.L61:
 908              	.LCFI9:
 909              		.cfi_def_cfa_offset 0
 910              		.cfi_restore 4
 911              		.cfi_restore 5
 912              		.cfi_restore 6
 913              		.cfi_restore 14
1352:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 914              		.loc 1 1352 9 is_stmt 1 view .LVU268
 915              	.LBB123:
 916              	.LBI123:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 917              		.loc 2 194 34 view .LVU269
 918              	.LBB124:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 919              		.loc 2 196 9 view .LVU270
 920              		.loc 2 198 9 view .LVU271
 921              		.syntax unified
 922              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 923 002c 4FF05003 			mov r3, #80												
 924 0030 83F31188 		msr basepri, r3											
 925 0034 BFF36F8F 		isb														
 926 0038 BFF34F8F 		dsb														
 927              	
 928              	@ 0 "" 2
 929              	.LVL68:
 930              		.thumb
 931              		.syntax unified
 932              	.L55:
 933              		.loc 2 198 9 is_stmt 0 view .LVU272
ARM GAS  /tmp/ccjYyDGQ.s 			page 119


 934              	.LBE124:
 935              	.LBE123:
1352:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 936              		.loc 1 1352 9 is_stmt 1 discriminator 1 view .LVU273
1352:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 937              		.loc 1 1352 9 discriminator 1 view .LVU274
1352:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 938              		.loc 1 1352 9 discriminator 1 view .LVU275
 939 003c FEE7     		b	.L55
 940              	.LVL69:
 941              	.L62:
 942              	.LCFI10:
 943              		.cfi_def_cfa_offset 16
 944              		.cfi_offset 4, -16
 945              		.cfi_offset 5, -12
 946              		.cfi_offset 6, -8
 947              		.cfi_offset 14, -4
1373:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 948              		.loc 1 1373 25 is_stmt 0 view .LVU276
 949 003e 0220     		movs	r0, #2
 950 0040 00E0     		b	.L56
 951              	.LVL70:
 952              	.L57:
1357:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 953              		.loc 1 1357 21 view .LVU277
 954 0042 0020     		movs	r0, #0
 955              	.LVL71:
 956              	.L56:
1435:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 957              		.loc 1 1435 9 is_stmt 1 view .LVU278
1436:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 958              		.loc 1 1436 5 is_stmt 0 view .LVU279
 959 0044 70BD     		pop	{r4, r5, r6, pc}
 960              	.L64:
 961 0046 00BF     		.align	2
 962              	.L63:
 963 0048 00000000 		.word	.LANCHOR8
 964 004c 00000000 		.word	.LANCHOR1
 965 0050 00000000 		.word	.LANCHOR6
 966              		.cfi_endproc
 967              	.LFE8:
 969              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 970              		.align	2
 971              	.LC0:
 972 0000 49444C45 		.ascii	"IDLE\000"
 972      00
 973              		.section	.text.vTaskStartScheduler,"ax",%progbits
 974              		.align	1
 975              		.global	vTaskStartScheduler
 976              		.syntax unified
 977              		.thumb
 978              		.thumb_func
 980              	vTaskStartScheduler:
 981              	.LFB9:
1953:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 982              		.loc 1 1953 1 is_stmt 1 view -0
 983              		.cfi_startproc
ARM GAS  /tmp/ccjYyDGQ.s 			page 120


 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 986 0000 00B5     		push	{lr}
 987              	.LCFI11:
 988              		.cfi_def_cfa_offset 4
 989              		.cfi_offset 14, -4
 990 0002 83B0     		sub	sp, sp, #12
 991              	.LCFI12:
 992              		.cfi_def_cfa_offset 16
1954:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 993              		.loc 1 1954 5 view .LVU281
1986:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                configIDLE_TASK_NAME,
 994              		.loc 1 1986 9 view .LVU282
1986:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                                configIDLE_TASK_NAME,
 995              		.loc 1 1986 19 is_stmt 0 view .LVU283
 996 0004 184B     		ldr	r3, .L72
 997 0006 0193     		str	r3, [sp, #4]
 998 0008 0023     		movs	r3, #0
 999 000a 0093     		str	r3, [sp]
 1000 000c 8222     		movs	r2, #130
 1001 000e 1749     		ldr	r1, .L72+4
 1002 0010 1748     		ldr	r0, .L72+8
 1003 0012 FFF7FEFF 		bl	xTaskCreate
 1004              	.LVL72:
2008:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 1005              		.loc 1 2008 5 is_stmt 1 view .LVU284
2008:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 1006              		.loc 1 2008 7 is_stmt 0 view .LVU285
 1007 0016 0128     		cmp	r0, #1
 1008 0018 07D0     		beq	.L70
2064:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 1009              		.loc 1 2064 9 is_stmt 1 view .LVU286
 1010 001a B0F1FF3F 		cmp	r0, #-1
 1011 001e 19D0     		beq	.L71
 1012              	.LVL73:
 1013              	.L67:
2064:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 1014              		.loc 1 2064 73 discriminator 2 view .LVU287
2069:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1015              		.loc 1 2069 5 discriminator 2 view .LVU288
2073:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 1016              		.loc 1 2073 5 discriminator 2 view .LVU289
 1017 0020 144B     		ldr	r3, .L72+12
 1018 0022 1B68     		ldr	r3, [r3]
2074:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 1019              		.loc 1 2074 1 is_stmt 0 discriminator 2 view .LVU290
 1020 0024 03B0     		add	sp, sp, #12
 1021              	.LCFI13:
 1022              		.cfi_remember_state
 1023              		.cfi_def_cfa_offset 4
 1024              		@ sp needed
 1025 0026 5DF804FB 		ldr	pc, [sp], #4
 1026              	.LVL74:
 1027              	.L70:
 1028              	.LCFI14:
 1029              		.cfi_restore_state
2024:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 121


 1030              		.loc 1 2024 9 is_stmt 1 view .LVU291
 1031              	.LBB125:
 1032              	.LBI125:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1033              		.loc 2 194 34 view .LVU292
 1034              	.LBB126:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1035              		.loc 2 196 9 view .LVU293
 1036              		.loc 2 198 9 view .LVU294
 1037              		.syntax unified
 1038              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1039 002a 4FF05003 			mov r3, #80												
 1040 002e 83F31188 		msr basepri, r3											
 1041 0032 BFF36F8F 		isb														
 1042 0036 BFF34F8F 		dsb														
 1043              	
 1044              	@ 0 "" 2
 1045              		.thumb
 1046              		.syntax unified
 1047              	.LBE126:
 1048              	.LBE125:
2034:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xSchedulerRunning = pdTRUE;
 1049              		.loc 1 2034 9 view .LVU295
2034:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xSchedulerRunning = pdTRUE;
 1050              		.loc 1 2034 30 is_stmt 0 view .LVU296
 1051 003a 0F4B     		ldr	r3, .L72+16
 1052 003c 4FF0FF32 		mov	r2, #-1
 1053 0040 1A60     		str	r2, [r3]
2035:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 1054              		.loc 1 2035 9 is_stmt 1 view .LVU297
2035:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 1055              		.loc 1 2035 27 is_stmt 0 view .LVU298
 1056 0042 0E4B     		ldr	r3, .L72+20
 1057 0044 0122     		movs	r2, #1
 1058 0046 1A60     		str	r2, [r3]
2036:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1059              		.loc 1 2036 9 is_stmt 1 view .LVU299
2036:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1060              		.loc 1 2036 20 is_stmt 0 view .LVU300
 1061 0048 0D4B     		ldr	r3, .L72+24
 1062 004a 0022     		movs	r2, #0
 1063 004c 1A60     		str	r2, [r3]
2044:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1064              		.loc 1 2044 49 is_stmt 1 view .LVU301
2046:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1065              		.loc 1 2046 32 view .LVU302
2050:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1066              		.loc 1 2050 9 view .LVU303
 1067 004e FFF7FEFF 		bl	xPortStartScheduler
 1068              	.LVL75:
2050:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1069              		.loc 1 2050 9 is_stmt 0 view .LVU304
 1070 0052 E5E7     		b	.L67
 1071              	.LVL76:
 1072              	.L71:
2064:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 1073              		.loc 1 2064 9 is_stmt 1 view .LVU305
ARM GAS  /tmp/ccjYyDGQ.s 			page 122


 1074              	.LBB127:
 1075              	.LBI127:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1076              		.loc 2 194 34 view .LVU306
 1077              	.LBB128:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1078              		.loc 2 196 9 view .LVU307
 1079              		.loc 2 198 9 view .LVU308
 1080              		.syntax unified
 1081              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1082 0054 4FF05003 			mov r3, #80												
 1083 0058 83F31188 		msr basepri, r3											
 1084 005c BFF36F8F 		isb														
 1085 0060 BFF34F8F 		dsb														
 1086              	
 1087              	@ 0 "" 2
 1088              	.LVL77:
 1089              		.thumb
 1090              		.syntax unified
 1091              	.L68:
 1092              		.loc 2 198 9 is_stmt 0 view .LVU309
 1093              	.LBE128:
 1094              	.LBE127:
2064:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 1095              		.loc 1 2064 9 is_stmt 1 discriminator 1 view .LVU310
2064:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 1096              		.loc 1 2064 9 discriminator 1 view .LVU311
2064:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 1097              		.loc 1 2064 9 discriminator 1 view .LVU312
 1098 0064 FEE7     		b	.L68
 1099              	.L73:
 1100 0066 00BF     		.align	2
 1101              	.L72:
 1102 0068 00000000 		.word	.LANCHOR13
 1103 006c 00000000 		.word	.LC0
 1104 0070 00000000 		.word	prvIdleTask
 1105 0074 00000000 		.word	.LANCHOR14
 1106 0078 00000000 		.word	.LANCHOR2
 1107 007c 00000000 		.word	.LANCHOR9
 1108 0080 00000000 		.word	.LANCHOR12
 1109              		.cfi_endproc
 1110              	.LFE9:
 1112              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1113              		.align	1
 1114              		.global	vTaskEndScheduler
 1115              		.syntax unified
 1116              		.thumb
 1117              		.thumb_func
 1119              	vTaskEndScheduler:
 1120              	.LFB10:
2078:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* Stop the scheduler interrupts and call the portable scheduler end
 1121              		.loc 1 2078 1 view -0
 1122              		.cfi_startproc
 1123              		@ args = 0, pretend = 0, frame = 0
 1124              		@ frame_needed = 0, uses_anonymous_args = 0
 1125 0000 08B5     		push	{r3, lr}
 1126              	.LCFI15:
ARM GAS  /tmp/ccjYyDGQ.s 			page 123


 1127              		.cfi_def_cfa_offset 8
 1128              		.cfi_offset 3, -8
 1129              		.cfi_offset 14, -4
2082:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     xSchedulerRunning = pdFALSE;
 1130              		.loc 1 2082 5 view .LVU314
 1131              	.LBB129:
 1132              	.LBI129:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1133              		.loc 2 194 34 view .LVU315
 1134              	.LBB130:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1135              		.loc 2 196 9 view .LVU316
 1136              		.loc 2 198 9 view .LVU317
 1137              		.syntax unified
 1138              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1139 0002 4FF05003 			mov r3, #80												
 1140 0006 83F31188 		msr basepri, r3											
 1141 000a BFF36F8F 		isb														
 1142 000e BFF34F8F 		dsb														
 1143              	
 1144              	@ 0 "" 2
 1145              		.thumb
 1146              		.syntax unified
 1147              	.LBE130:
 1148              	.LBE129:
2083:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     vPortEndScheduler();
 1149              		.loc 1 2083 5 view .LVU318
2083:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     vPortEndScheduler();
 1150              		.loc 1 2083 23 is_stmt 0 view .LVU319
 1151 0012 034B     		ldr	r3, .L76
 1152 0014 0022     		movs	r2, #0
 1153 0016 1A60     		str	r2, [r3]
2084:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 1154              		.loc 1 2084 5 is_stmt 1 view .LVU320
 1155 0018 FFF7FEFF 		bl	vPortEndScheduler
 1156              	.LVL78:
2085:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 1157              		.loc 1 2085 1 is_stmt 0 view .LVU321
 1158 001c 08BD     		pop	{r3, pc}
 1159              	.L77:
 1160 001e 00BF     		.align	2
 1161              	.L76:
 1162 0020 00000000 		.word	.LANCHOR9
 1163              		.cfi_endproc
 1164              	.LFE10:
 1166              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1167              		.align	1
 1168              		.global	vTaskSuspendAll
 1169              		.syntax unified
 1170              		.thumb
 1171              		.thumb_func
 1173              	vTaskSuspendAll:
 1174              	.LFB11:
2089:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* A critical section is not required as the variable is of type
 1175              		.loc 1 2089 1 is_stmt 1 view -0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccjYyDGQ.s 			page 124


 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179              		@ link register save eliminated.
2097:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1180              		.loc 1 2097 27 view .LVU323
2101:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1181              		.loc 1 2101 5 view .LVU324
 1182 0000 024A     		ldr	r2, .L79
 1183 0002 1368     		ldr	r3, [r2]
 1184 0004 0133     		adds	r3, r3, #1
 1185 0006 1360     		str	r3, [r2]
2105:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 1186              		.loc 1 2105 5 view .LVU325
2106:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 1187              		.loc 1 2106 1 is_stmt 0 view .LVU326
 1188 0008 7047     		bx	lr
 1189              	.L80:
 1190 000a 00BF     		.align	2
 1191              	.L79:
 1192 000c 00000000 		.word	.LANCHOR15
 1193              		.cfi_endproc
 1194              	.LFE11:
 1196              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1197              		.align	1
 1198              		.global	xTaskGetTickCount
 1199              		.syntax unified
 1200              		.thumb
 1201              		.thumb_func
 1203              	xTaskGetTickCount:
 1204              	.LFB13:
2285:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TickType_t xTicks;
 1205              		.loc 1 2285 1 is_stmt 1 view -0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 1209              		@ link register save eliminated.
2286:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1210              		.loc 1 2286 5 view .LVU328
2289:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 1211              		.loc 1 2289 35 view .LVU329
2291:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 1212              		.loc 1 2291 9 view .LVU330
2291:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 1213              		.loc 1 2291 16 is_stmt 0 view .LVU331
 1214 0000 014B     		ldr	r3, .L82
 1215 0002 1868     		ldr	r0, [r3]
 1216              	.LVL79:
2293:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1217              		.loc 1 2293 34 is_stmt 1 view .LVU332
2295:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 1218              		.loc 1 2295 5 view .LVU333
2296:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 1219              		.loc 1 2296 1 is_stmt 0 view .LVU334
 1220 0004 7047     		bx	lr
 1221              	.L83:
 1222 0006 00BF     		.align	2
 1223              	.L82:
 1224 0008 00000000 		.word	.LANCHOR12
ARM GAS  /tmp/ccjYyDGQ.s 			page 125


 1225              		.cfi_endproc
 1226              	.LFE13:
 1228              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1229              		.align	1
 1230              		.global	xTaskGetTickCountFromISR
 1231              		.syntax unified
 1232              		.thumb
 1233              		.thumb_func
 1235              	xTaskGetTickCountFromISR:
 1236              	.LFB14:
2300:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TickType_t xReturn;
 1237              		.loc 1 2300 1 is_stmt 1 view -0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 1241 0000 08B5     		push	{r3, lr}
 1242              	.LCFI16:
 1243              		.cfi_def_cfa_offset 8
 1244              		.cfi_offset 3, -8
 1245              		.cfi_offset 14, -4
2301:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     UBaseType_t uxSavedInterruptStatus;
 1246              		.loc 1 2301 5 view .LVU336
2302:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1247              		.loc 1 2302 5 view .LVU337
2318:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1248              		.loc 1 2318 5 view .LVU338
 1249 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1250              	.LVL80:
2320:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 1251              		.loc 1 2320 5 view .LVU339
2322:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 1252              		.loc 1 2322 9 view .LVU340
2322:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 1253              		.loc 1 2322 17 is_stmt 0 view .LVU341
 1254 0006 014B     		ldr	r3, .L86
 1255 0008 1868     		ldr	r0, [r3]
 1256              	.LVL81:
2324:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1257              		.loc 1 2324 5 is_stmt 1 view .LVU342
2326:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 1258              		.loc 1 2326 5 view .LVU343
2327:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 1259              		.loc 1 2327 1 is_stmt 0 view .LVU344
 1260 000a 08BD     		pop	{r3, pc}
 1261              	.L87:
 1262              		.align	2
 1263              	.L86:
 1264 000c 00000000 		.word	.LANCHOR12
 1265              		.cfi_endproc
 1266              	.LFE14:
 1268              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1269              		.align	1
 1270              		.global	uxTaskGetNumberOfTasks
 1271              		.syntax unified
 1272              		.thumb
 1273              		.thumb_func
 1275              	uxTaskGetNumberOfTasks:
ARM GAS  /tmp/ccjYyDGQ.s 			page 126


 1276              	.LFB15:
2331:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* A critical section is not required because the variables are of type
 1277              		.loc 1 2331 1 is_stmt 1 view -0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 1281              		@ link register save eliminated.
2334:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 1282              		.loc 1 2334 5 view .LVU346
2334:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 1283              		.loc 1 2334 12 is_stmt 0 view .LVU347
 1284 0000 014B     		ldr	r3, .L89
 1285 0002 1868     		ldr	r0, [r3]
2335:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 1286              		.loc 1 2335 1 view .LVU348
 1287 0004 7047     		bx	lr
 1288              	.L90:
 1289 0006 00BF     		.align	2
 1290              	.L89:
 1291 0008 00000000 		.word	.LANCHOR7
 1292              		.cfi_endproc
 1293              	.LFE15:
 1295              		.section	.text.pcTaskGetName,"ax",%progbits
 1296              		.align	1
 1297              		.global	pcTaskGetName
 1298              		.syntax unified
 1299              		.thumb
 1300              		.thumb_func
 1302              	pcTaskGetName:
 1303              	.LVL82:
 1304              	.LFB16:
2339:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
 1305              		.loc 1 2339 1 is_stmt 1 view -0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              		@ link register save eliminated.
2340:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1310              		.loc 1 2340 5 view .LVU350
2344:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
 1311              		.loc 1 2344 5 view .LVU351
2344:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
 1312              		.loc 1 2344 13 is_stmt 0 view .LVU352
 1313 0000 0346     		mov	r3, r0
 1314 0002 18B1     		cbz	r0, .L95
 1315              	.LVL83:
 1316              	.L92:
2345:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 1317              		.loc 1 2345 5 is_stmt 1 discriminator 4 view .LVU353
 1318 0004 2BB1     		cbz	r3, .L96
2345:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 1319              		.loc 1 2345 26 discriminator 2 view .LVU354
2346:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 1320              		.loc 1 2346 5 discriminator 2 view .LVU355
2347:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 1321              		.loc 1 2347 1 is_stmt 0 discriminator 2 view .LVU356
 1322 0006 03F13400 		add	r0, r3, #52
ARM GAS  /tmp/ccjYyDGQ.s 			page 127


 1323 000a 7047     		bx	lr
 1324              	.LVL84:
 1325              	.L95:
2344:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
 1326              		.loc 1 2344 13 discriminator 1 view .LVU357
 1327 000c 054B     		ldr	r3, .L97
 1328 000e 1B68     		ldr	r3, [r3]
 1329              	.LVL85:
2344:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
 1330              		.loc 1 2344 13 discriminator 1 view .LVU358
 1331 0010 F8E7     		b	.L92
 1332              	.LVL86:
 1333              	.L96:
2345:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 1334              		.loc 1 2345 5 is_stmt 1 view .LVU359
 1335              	.LBB131:
 1336              	.LBI131:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1337              		.loc 2 194 34 view .LVU360
 1338              	.LBB132:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1339              		.loc 2 196 9 view .LVU361
 1340              		.loc 2 198 9 view .LVU362
 1341              		.syntax unified
 1342              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1343 0012 4FF05003 			mov r3, #80												
 1344 0016 83F31188 		msr basepri, r3											
 1345 001a BFF36F8F 		isb														
 1346 001e BFF34F8F 		dsb														
 1347              	
 1348              	@ 0 "" 2
 1349              	.LVL87:
 1350              		.thumb
 1351              		.syntax unified
 1352              	.L94:
 1353              		.loc 2 198 9 is_stmt 0 view .LVU363
 1354              	.LBE132:
 1355              	.LBE131:
2345:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 1356              		.loc 1 2345 5 is_stmt 1 discriminator 1 view .LVU364
2345:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 1357              		.loc 1 2345 5 discriminator 1 view .LVU365
2345:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 1358              		.loc 1 2345 5 discriminator 1 view .LVU366
 1359 0022 FEE7     		b	.L94
 1360              	.L98:
 1361              		.align	2
 1362              	.L97:
 1363 0024 00000000 		.word	.LANCHOR8
 1364              		.cfi_endproc
 1365              	.LFE16:
 1367              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1368              		.align	1
 1369              		.global	xTaskIncrementTick
 1370              		.syntax unified
 1371              		.thumb
 1372              		.thumb_func
ARM GAS  /tmp/ccjYyDGQ.s 			page 128


 1374              	xTaskIncrementTick:
 1375              	.LFB19:
2717:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
 1376              		.loc 1 2717 1 view -0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
2718:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TickType_t xItemValue;
 1380              		.loc 1 2718 5 view .LVU368
2719:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xSwitchRequired = pdFALSE;
 1381              		.loc 1 2719 5 view .LVU369
2720:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1382              		.loc 1 2720 5 view .LVU370
 1383              	.LVL88:
2725:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1384              		.loc 1 2725 43 view .LVU371
2727:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 1385              		.loc 1 2727 5 view .LVU372
2727:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 1386              		.loc 1 2727 30 is_stmt 0 view .LVU373
 1387 0000 524B     		ldr	r3, .L127
 1388 0002 1B68     		ldr	r3, [r3]
2727:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 1389              		.loc 1 2727 7 view .LVU374
 1390 0004 002B     		cmp	r3, #0
 1391 0006 40F09980 		bne	.L100
2717:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
 1392              		.loc 1 2717 1 view .LVU375
 1393 000a 70B5     		push	{r4, r5, r6, lr}
 1394              	.LCFI17:
 1395              		.cfi_def_cfa_offset 16
 1396              		.cfi_offset 4, -16
 1397              		.cfi_offset 5, -12
 1398              		.cfi_offset 6, -8
 1399              		.cfi_offset 14, -4
 1400              	.LBB133:
2731:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1401              		.loc 1 2731 9 is_stmt 1 view .LVU376
2731:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1402              		.loc 1 2731 55 is_stmt 0 view .LVU377
 1403 000c 504B     		ldr	r3, .L127+4
 1404 000e 1C68     		ldr	r4, [r3]
2731:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1405              		.loc 1 2731 26 view .LVU378
 1406 0010 0134     		adds	r4, r4, #1
 1407              	.LVL89:
2735:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1408              		.loc 1 2735 9 is_stmt 1 view .LVU379
2735:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1409              		.loc 1 2735 20 is_stmt 0 view .LVU380
 1410 0012 1C60     		str	r4, [r3]
2737:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 1411              		.loc 1 2737 9 is_stmt 1 view .LVU381
2737:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 1412              		.loc 1 2737 11 is_stmt 0 view .LVU382
 1413 0014 C4B9     		cbnz	r4, .L101
 1414              	.LBB134:
ARM GAS  /tmp/ccjYyDGQ.s 			page 129


2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 1415              		.loc 1 2739 13 is_stmt 1 view .LVU383
2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 1416              		.loc 1 2739 13 view .LVU384
 1417 0016 4F4B     		ldr	r3, .L127+8
 1418 0018 1B68     		ldr	r3, [r3]
 1419 001a 1B68     		ldr	r3, [r3]
 1420 001c 43B1     		cbz	r3, .L102
2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 1421              		.loc 1 2739 13 view .LVU385
 1422              	.LBB135:
 1423              	.LBI135:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1424              		.loc 2 194 34 view .LVU386
 1425              	.LBB136:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1426              		.loc 2 196 9 view .LVU387
 1427              		.loc 2 198 9 view .LVU388
 1428              		.syntax unified
 1429              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1430 001e 4FF05003 			mov r3, #80												
 1431 0022 83F31188 		msr basepri, r3											
 1432 0026 BFF36F8F 		isb														
 1433 002a BFF34F8F 		dsb														
 1434              	
 1435              	@ 0 "" 2
 1436              	.LVL90:
 1437              		.thumb
 1438              		.syntax unified
 1439              	.L103:
 1440              		.loc 2 198 9 is_stmt 0 view .LVU389
 1441              	.LBE136:
 1442              	.LBE135:
2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 1443              		.loc 1 2739 13 is_stmt 1 discriminator 1 view .LVU390
2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 1444              		.loc 1 2739 13 discriminator 1 view .LVU391
2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 1445              		.loc 1 2739 13 discriminator 1 view .LVU392
 1446 002e FEE7     		b	.L103
 1447              	.L102:
2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 1448              		.loc 1 2739 13 discriminator 2 view .LVU393
2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 1449              		.loc 1 2739 13 discriminator 2 view .LVU394
 1450 0030 484A     		ldr	r2, .L127+8
 1451 0032 1168     		ldr	r1, [r2]
 1452              	.LVL91:
2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 1453              		.loc 1 2739 13 discriminator 2 view .LVU395
 1454 0034 484B     		ldr	r3, .L127+12
 1455 0036 1868     		ldr	r0, [r3]
 1456 0038 1060     		str	r0, [r2]
2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 1457              		.loc 1 2739 13 discriminator 2 view .LVU396
 1458 003a 1960     		str	r1, [r3]
2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
ARM GAS  /tmp/ccjYyDGQ.s 			page 130


 1459              		.loc 1 2739 13 discriminator 2 view .LVU397
 1460 003c 474A     		ldr	r2, .L127+16
 1461 003e 1368     		ldr	r3, [r2]
 1462 0040 0133     		adds	r3, r3, #1
 1463 0042 1360     		str	r3, [r2]
2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 1464              		.loc 1 2739 13 discriminator 2 view .LVU398
 1465 0044 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1466              	.LVL92:
2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 1467              		.loc 1 2739 13 is_stmt 0 discriminator 2 view .LVU399
 1468              	.LBE134:
2739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 1469              		.loc 1 2739 39 is_stmt 1 discriminator 2 view .LVU400
 1470              	.L101:
2743:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 1471              		.loc 1 2743 37 view .LVU401
2750:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 1472              		.loc 1 2750 9 view .LVU402
2750:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 1473              		.loc 1 2750 29 is_stmt 0 view .LVU403
 1474 0048 454B     		ldr	r3, .L127+20
 1475 004a 1B68     		ldr	r3, [r3]
2750:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 1476              		.loc 1 2750 11 view .LVU404
 1477 004c A342     		cmp	r3, r4
 1478 004e 10D9     		bls	.L116
 1479              	.LBE133:
2720:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1480              		.loc 1 2720 16 view .LVU405
 1481 0050 0020     		movs	r0, #0
 1482              	.LVL93:
 1483              	.L105:
 1484              	.LBB142:
2833:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 1485              		.loc 1 2833 13 is_stmt 1 view .LVU406
2833:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 1486              		.loc 1 2833 17 is_stmt 0 view .LVU407
 1487 0052 444B     		ldr	r3, .L127+24
 1488 0054 1B68     		ldr	r3, [r3]
 1489 0056 DB6A     		ldr	r3, [r3, #44]
 1490 0058 03EB8303 		add	r3, r3, r3, lsl #2
 1491 005c 9A00     		lsls	r2, r3, #2
 1492 005e 424B     		ldr	r3, .L127+28
 1493 0060 9B58     		ldr	r3, [r3, r2]
2833:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 1494              		.loc 1 2833 15 view .LVU408
 1495 0062 012B     		cmp	r3, #1
 1496 0064 00D9     		bls	.L114
2835:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 1497              		.loc 1 2835 33 view .LVU409
 1498 0066 0120     		movs	r0, #1
 1499              	.LVL94:
 1500              	.L114:
2839:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 1501              		.loc 1 2839 41 is_stmt 1 view .LVU410
2861:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
ARM GAS  /tmp/ccjYyDGQ.s 			page 131


 1502              		.loc 1 2861 13 view .LVU411
2861:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 1503              		.loc 1 2861 31 is_stmt 0 view .LVU412
 1504 0068 404B     		ldr	r3, .L127+32
 1505 006a 1B68     		ldr	r3, [r3]
2861:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 1506              		.loc 1 2861 15 view .LVU413
 1507 006c 002B     		cmp	r3, #0
 1508 006e 6BD1     		bne	.L119
 1509              	.LVL95:
 1510              	.L99:
2861:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 1511              		.loc 1 2861 15 view .LVU414
 1512              	.LBE142:
2886:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 1513              		.loc 1 2886 1 view .LVU415
 1514 0070 70BD     		pop	{r4, r5, r6, pc}
 1515              	.LVL96:
 1516              	.L116:
2720:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1517              		.loc 1 2720 16 view .LVU416
 1518 0072 0020     		movs	r0, #0
 1519 0074 37E0     		b	.L104
 1520              	.LVL97:
 1521              	.L124:
 1522              	.LBB143:
2761:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 1523              		.loc 1 2761 21 is_stmt 1 view .LVU417
2761:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 1524              		.loc 1 2761 42 is_stmt 0 view .LVU418
 1525 0076 3A4B     		ldr	r3, .L127+20
 1526 0078 4FF0FF32 		mov	r2, #-1
 1527 007c 1A60     		str	r2, [r3]
2762:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 1528              		.loc 1 2762 21 is_stmt 1 view .LVU419
 1529 007e E8E7     		b	.L105
 1530              	.LVL98:
 1531              	.L125:
2780:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
 1532              		.loc 1 2780 25 view .LVU420
2780:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
 1533              		.loc 1 2780 46 is_stmt 0 view .LVU421
 1534 0080 374B     		ldr	r3, .L127+20
 1535              	.LVL99:
2780:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
 1536              		.loc 1 2780 46 view .LVU422
 1537 0082 1A60     		str	r2, [r3]
2781:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1538              		.loc 1 2781 25 is_stmt 1 view .LVU423
 1539 0084 E5E7     		b	.L105
 1540              	.LVL100:
 1541              	.L126:
 1542              	.LBB137:
2789:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1543              		.loc 1 2789 21 discriminator 1 view .LVU424
 1544 0086 D968     		ldr	r1, [r3, #12]
 1545 0088 5160     		str	r1, [r2, #4]
ARM GAS  /tmp/ccjYyDGQ.s 			page 132


 1546 008a 42E0     		b	.L108
 1547              	.LVL101:
 1548              	.L110:
2789:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1549              		.loc 1 2789 21 is_stmt 0 discriminator 1 view .LVU425
 1550              	.LBE137:
 1551              	.LBB138:
2795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1552              		.loc 1 2795 25 is_stmt 1 discriminator 3 view .LVU426
 1553 008c 0021     		movs	r1, #0
 1554 008e 9962     		str	r1, [r3, #40]
2795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1555              		.loc 1 2795 25 discriminator 3 view .LVU427
 1556 0090 1168     		ldr	r1, [r2]
 1557 0092 0139     		subs	r1, r1, #1
 1558 0094 1160     		str	r1, [r2]
 1559              	.LBE138:
2795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1560              		.loc 1 2795 70 discriminator 3 view .LVU428
 1561              	.LVL102:
 1562              	.L109:
2799:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1563              		.loc 1 2799 49 view .LVU429
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1564              		.loc 1 2804 21 view .LVU430
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1565              		.loc 1 2804 21 view .LVU431
 1566 0096 DA6A     		ldr	r2, [r3, #44]
 1567 0098 3549     		ldr	r1, .L127+36
 1568 009a 0968     		ldr	r1, [r1]
 1569 009c 8A42     		cmp	r2, r1
 1570 009e 01D9     		bls	.L111
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1571              		.loc 1 2804 21 discriminator 1 view .LVU432
 1572 00a0 3349     		ldr	r1, .L127+36
 1573 00a2 0A60     		str	r2, [r1]
 1574              	.L111:
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1575              		.loc 1 2804 21 discriminator 3 view .LVU433
 1576              	.LBB139:
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1577              		.loc 1 2804 21 discriminator 3 view .LVU434
 1578 00a4 3049     		ldr	r1, .L127+28
 1579 00a6 02EB8202 		add	r2, r2, r2, lsl #2
 1580 00aa 4FEA820C 		lsl	ip, r2, #2
 1581 00ae 8C44     		add	ip, ip, r1
 1582 00b0 DCF80420 		ldr	r2, [ip, #4]
 1583              	.LVL103:
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1584              		.loc 1 2804 21 discriminator 3 view .LVU435
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1585              		.loc 1 2804 21 discriminator 3 view .LVU436
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1586              		.loc 1 2804 21 discriminator 3 view .LVU437
 1587 00b4 9A60     		str	r2, [r3, #8]
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1588              		.loc 1 2804 21 discriminator 3 view .LVU438
ARM GAS  /tmp/ccjYyDGQ.s 			page 133


 1589 00b6 9668     		ldr	r6, [r2, #8]
 1590 00b8 DE60     		str	r6, [r3, #12]
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1591              		.loc 1 2804 21 discriminator 3 view .LVU439
 1592 00ba 7560     		str	r5, [r6, #4]
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1593              		.loc 1 2804 21 discriminator 3 view .LVU440
 1594 00bc 9560     		str	r5, [r2, #8]
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1595              		.loc 1 2804 21 discriminator 3 view .LVU441
 1596 00be DA6A     		ldr	r2, [r3, #44]
 1597              	.LVL104:
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1598              		.loc 1 2804 21 is_stmt 0 discriminator 3 view .LVU442
 1599 00c0 02EB820C 		add	ip, r2, r2, lsl #2
 1600 00c4 4FEA8C05 		lsl	r5, ip, #2
 1601 00c8 4E19     		adds	r6, r1, r5
 1602 00ca 5E61     		str	r6, [r3, #20]
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1603              		.loc 1 2804 21 is_stmt 1 discriminator 3 view .LVU443
 1604 00cc 4D59     		ldr	r5, [r1, r5]
 1605 00ce 0135     		adds	r5, r5, #1
 1606 00d0 4FEA8C0C 		lsl	ip, ip, #2
 1607 00d4 41F80C50 		str	r5, [r1, ip]
 1608              	.LBE139:
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1609              		.loc 1 2804 21 discriminator 3 view .LVU444
2804:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1610              		.loc 1 2804 51 discriminator 3 view .LVU445
2814:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
 1611              		.loc 1 2814 25 discriminator 3 view .LVU446
2814:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
 1612              		.loc 1 2814 34 is_stmt 0 discriminator 3 view .LVU447
 1613 00d8 DA6A     		ldr	r2, [r3, #44]
2814:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
 1614              		.loc 1 2814 62 discriminator 3 view .LVU448
 1615 00da 224B     		ldr	r3, .L127+24
 1616              	.LVL105:
2814:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
 1617              		.loc 1 2814 62 discriminator 3 view .LVU449
 1618 00dc 1B68     		ldr	r3, [r3]
 1619 00de DB6A     		ldr	r3, [r3, #44]
2814:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
 1620              		.loc 1 2814 27 discriminator 3 view .LVU450
 1621 00e0 9A42     		cmp	r2, r3
 1622 00e2 00D3     		bcc	.L104
2816:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
 1623              		.loc 1 2816 45 view .LVU451
 1624 00e4 0120     		movs	r0, #1
 1625              	.LVL106:
 1626              	.L104:
2752:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 1627              		.loc 1 2752 13 is_stmt 1 view .LVU452
2754:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 1628              		.loc 1 2754 17 view .LVU453
2754:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 1629              		.loc 1 2754 21 is_stmt 0 view .LVU454
ARM GAS  /tmp/ccjYyDGQ.s 			page 134


 1630 00e6 1B4B     		ldr	r3, .L127+8
 1631 00e8 1B68     		ldr	r3, [r3]
 1632 00ea 1B68     		ldr	r3, [r3]
2754:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 1633              		.loc 1 2754 19 view .LVU455
 1634 00ec 002B     		cmp	r3, #0
 1635 00ee C2D0     		beq	.L124
2770:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1636              		.loc 1 2770 21 is_stmt 1 view .LVU456
2770:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1637              		.loc 1 2770 29 is_stmt 0 view .LVU457
 1638 00f0 184B     		ldr	r3, .L127+8
 1639 00f2 1B68     		ldr	r3, [r3]
 1640 00f4 DB68     		ldr	r3, [r3, #12]
2770:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1641              		.loc 1 2770 27 view .LVU458
 1642 00f6 DB68     		ldr	r3, [r3, #12]
 1643              	.LVL107:
2771:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1644              		.loc 1 2771 21 is_stmt 1 view .LVU459
2771:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1645              		.loc 1 2771 32 is_stmt 0 view .LVU460
 1646 00f8 5A68     		ldr	r2, [r3, #4]
 1647              	.LVL108:
2773:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 1648              		.loc 1 2773 21 is_stmt 1 view .LVU461
2773:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 1649              		.loc 1 2773 23 is_stmt 0 view .LVU462
 1650 00fa 9442     		cmp	r4, r2
 1651 00fc C0D3     		bcc	.L125
2785:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1652              		.loc 1 2785 49 is_stmt 1 view .LVU463
 1653              	.LBB140:
2789:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1654              		.loc 1 2789 21 view .LVU464
 1655 00fe 5A69     		ldr	r2, [r3, #20]
 1656              	.LVL109:
2789:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1657              		.loc 1 2789 21 view .LVU465
 1658 0100 9D68     		ldr	r5, [r3, #8]
 1659 0102 D968     		ldr	r1, [r3, #12]
 1660 0104 A960     		str	r1, [r5, #8]
 1661              	.LVL110:
2789:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1662              		.loc 1 2789 21 view .LVU466
 1663 0106 9D68     		ldr	r5, [r3, #8]
 1664 0108 4D60     		str	r5, [r1, #4]
2789:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1665              		.loc 1 2789 21 view .LVU467
 1666 010a 5168     		ldr	r1, [r2, #4]
 1667 010c 1D1D     		adds	r5, r3, #4
 1668 010e A942     		cmp	r1, r5
 1669 0110 B9D0     		beq	.L126
 1670              	.L108:
2789:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1671              		.loc 1 2789 21 discriminator 3 view .LVU468
 1672 0112 0021     		movs	r1, #0
ARM GAS  /tmp/ccjYyDGQ.s 			page 135


 1673 0114 5961     		str	r1, [r3, #20]
2789:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1674              		.loc 1 2789 21 discriminator 3 view .LVU469
 1675 0116 1168     		ldr	r1, [r2]
 1676 0118 0139     		subs	r1, r1, #1
 1677 011a 1160     		str	r1, [r2]
 1678              	.LBE140:
2789:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1679              		.loc 1 2789 66 discriminator 3 view .LVU470
2793:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 1680              		.loc 1 2793 21 discriminator 3 view .LVU471
2793:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 1681              		.loc 1 2793 25 is_stmt 0 discriminator 3 view .LVU472
 1682 011c 9A6A     		ldr	r2, [r3, #40]
 1683              	.LVL111:
2793:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 1684              		.loc 1 2793 23 discriminator 3 view .LVU473
 1685 011e 002A     		cmp	r2, #0
 1686 0120 B9D0     		beq	.L109
 1687              	.LBB141:
2795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1688              		.loc 1 2795 25 is_stmt 1 view .LVU474
 1689              	.LVL112:
2795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1690              		.loc 1 2795 25 view .LVU475
 1691 0122 DE69     		ldr	r6, [r3, #28]
 1692 0124 196A     		ldr	r1, [r3, #32]
 1693 0126 B160     		str	r1, [r6, #8]
2795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1694              		.loc 1 2795 25 view .LVU476
 1695 0128 DE69     		ldr	r6, [r3, #28]
 1696 012a 4E60     		str	r6, [r1, #4]
2795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1697              		.loc 1 2795 25 view .LVU477
 1698 012c 5668     		ldr	r6, [r2, #4]
 1699 012e 03F11801 		add	r1, r3, #24
 1700 0132 8E42     		cmp	r6, r1
 1701 0134 AAD1     		bne	.L110
2795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1702              		.loc 1 2795 25 discriminator 1 view .LVU478
 1703 0136 196A     		ldr	r1, [r3, #32]
 1704 0138 5160     		str	r1, [r2, #4]
 1705 013a A7E7     		b	.L110
 1706              	.LVL113:
 1707              	.L100:
 1708              	.LCFI18:
 1709              		.cfi_def_cfa_offset 0
 1710              		.cfi_restore 4
 1711              		.cfi_restore 5
 1712              		.cfi_restore 6
 1713              		.cfi_restore 14
2795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1714              		.loc 1 2795 25 is_stmt 0 discriminator 1 view .LVU479
 1715              	.LBE141:
 1716              	.LBE143:
2874:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1717              		.loc 1 2874 9 is_stmt 1 view .LVU480
ARM GAS  /tmp/ccjYyDGQ.s 			page 136


 1718 013c 0D4A     		ldr	r2, .L127+40
 1719 013e 1368     		ldr	r3, [r2]
 1720 0140 0133     		adds	r3, r3, #1
 1721 0142 1360     		str	r3, [r2]
2720:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1722              		.loc 1 2720 16 is_stmt 0 view .LVU481
 1723 0144 0020     		movs	r0, #0
2886:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 1724              		.loc 1 2886 1 view .LVU482
 1725 0146 7047     		bx	lr
 1726              	.LVL114:
 1727              	.L119:
 1728              	.LCFI19:
 1729              		.cfi_def_cfa_offset 16
 1730              		.cfi_offset 4, -16
 1731              		.cfi_offset 5, -12
 1732              		.cfi_offset 6, -8
 1733              		.cfi_offset 14, -4
 1734              	.LBB144:
2863:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 1735              		.loc 1 2863 33 view .LVU483
 1736 0148 0120     		movs	r0, #1
 1737              	.LVL115:
2863:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 1738              		.loc 1 2863 33 view .LVU484
 1739              	.LBE144:
2885:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 1740              		.loc 1 2885 5 is_stmt 1 view .LVU485
2885:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 1741              		.loc 1 2885 12 is_stmt 0 view .LVU486
 1742 014a 91E7     		b	.L99
 1743              	.L128:
 1744              		.align	2
 1745              	.L127:
 1746 014c 00000000 		.word	.LANCHOR15
 1747 0150 00000000 		.word	.LANCHOR12
 1748 0154 00000000 		.word	.LANCHOR1
 1749 0158 00000000 		.word	.LANCHOR6
 1750 015c 00000000 		.word	.LANCHOR16
 1751 0160 00000000 		.word	.LANCHOR2
 1752 0164 00000000 		.word	.LANCHOR8
 1753 0168 00000000 		.word	.LANCHOR0
 1754 016c 00000000 		.word	.LANCHOR17
 1755 0170 00000000 		.word	.LANCHOR11
 1756 0174 00000000 		.word	.LANCHOR18
 1757              		.cfi_endproc
 1758              	.LFE19:
 1760              		.section	.text.xTaskResumeAll,"ax",%progbits
 1761              		.align	1
 1762              		.global	xTaskResumeAll
 1763              		.syntax unified
 1764              		.thumb
 1765              		.thumb_func
 1767              	xTaskResumeAll:
 1768              	.LFB12:
2173:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TCB_t * pxTCB = NULL;
 1769              		.loc 1 2173 1 is_stmt 1 view -0
ARM GAS  /tmp/ccjYyDGQ.s 			page 137


 1770              		.cfi_startproc
 1771              		@ args = 0, pretend = 0, frame = 0
 1772              		@ frame_needed = 0, uses_anonymous_args = 0
2174:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
 1773              		.loc 1 2174 5 view .LVU488
 1774              	.LVL116:
2175:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1775              		.loc 1 2175 5 view .LVU489
2179:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1776              		.loc 1 2179 5 view .LVU490
 1777 0000 4A4B     		ldr	r3, .L151
 1778 0002 1B68     		ldr	r3, [r3]
 1779 0004 43B9     		cbnz	r3, .L130
2179:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1780              		.loc 1 2179 5 view .LVU491
 1781              	.LBB145:
 1782              	.LBI145:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1783              		.loc 2 194 34 view .LVU492
 1784              	.LBB146:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1785              		.loc 2 196 9 view .LVU493
 1786              		.loc 2 198 9 view .LVU494
 1787              		.syntax unified
 1788              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1789 0006 4FF05003 			mov r3, #80												
 1790 000a 83F31188 		msr basepri, r3											
 1791 000e BFF36F8F 		isb														
 1792 0012 BFF34F8F 		dsb														
 1793              	
 1794              	@ 0 "" 2
 1795              	.LVL117:
 1796              		.thumb
 1797              		.syntax unified
 1798              	.L131:
 1799              		.loc 2 198 9 is_stmt 0 view .LVU495
 1800              	.LBE146:
 1801              	.LBE145:
2179:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1802              		.loc 1 2179 5 is_stmt 1 discriminator 1 view .LVU496
2179:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1803              		.loc 1 2179 5 discriminator 1 view .LVU497
2179:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1804              		.loc 1 2179 5 discriminator 1 view .LVU498
 1805 0016 FEE7     		b	.L131
 1806              	.L130:
2173:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TCB_t * pxTCB = NULL;
 1807              		.loc 1 2173 1 is_stmt 0 discriminator 2 view .LVU499
 1808 0018 10B5     		push	{r4, lr}
 1809              	.LCFI20:
 1810              		.cfi_def_cfa_offset 8
 1811              		.cfi_offset 4, -8
 1812              		.cfi_offset 14, -4
2179:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1813              		.loc 1 2179 41 is_stmt 1 discriminator 2 view .LVU500
2186:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 1814              		.loc 1 2186 5 discriminator 2 view .LVU501
ARM GAS  /tmp/ccjYyDGQ.s 			page 138


 1815 001a FFF7FEFF 		bl	vPortEnterCritical
 1816              	.LVL118:
2188:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1817              		.loc 1 2188 9 discriminator 2 view .LVU502
 1818 001e 434B     		ldr	r3, .L151
 1819 0020 1A68     		ldr	r2, [r3]
 1820 0022 013A     		subs	r2, r2, #1
 1821 0024 1A60     		str	r2, [r3]
2190:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 1822              		.loc 1 2190 9 discriminator 2 view .LVU503
2190:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 1823              		.loc 1 2190 34 is_stmt 0 discriminator 2 view .LVU504
 1824 0026 1B68     		ldr	r3, [r3]
2190:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 1825              		.loc 1 2190 11 discriminator 2 view .LVU505
 1826 0028 002B     		cmp	r3, #0
 1827 002a 7AD1     		bne	.L143
2192:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 1828              		.loc 1 2192 13 is_stmt 1 view .LVU506
2192:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 1829              		.loc 1 2192 40 is_stmt 0 view .LVU507
 1830 002c 404B     		ldr	r3, .L151+4
 1831 002e 1B68     		ldr	r3, [r3]
2192:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 1832              		.loc 1 2192 15 view .LVU508
 1833 0030 3BB9     		cbnz	r3, .L144
2175:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1834              		.loc 1 2175 16 view .LVU509
 1835 0032 0024     		movs	r4, #0
 1836 0034 76E0     		b	.L132
 1837              	.LVL119:
 1838              	.L148:
 1839              	.LBB147:
2199:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 1840              		.loc 1 2199 21 is_stmt 1 discriminator 1 view .LVU510
 1841 0036 196A     		ldr	r1, [r3, #32]
 1842 0038 5160     		str	r1, [r2, #4]
 1843 003a 15E0     		b	.L134
 1844              	.LVL120:
 1845              	.L149:
2199:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 1846              		.loc 1 2199 21 is_stmt 0 discriminator 1 view .LVU511
 1847              	.LBE147:
 1848              	.LBB148:
2201:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1849              		.loc 1 2201 21 is_stmt 1 discriminator 1 view .LVU512
 1850 003c D968     		ldr	r1, [r3, #12]
 1851 003e 5160     		str	r1, [r2, #4]
 1852 0040 21E0     		b	.L135
 1853              	.LVL121:
 1854              	.L144:
2201:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1855              		.loc 1 2201 21 is_stmt 0 discriminator 1 view .LVU513
 1856              	.LBE148:
2174:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
 1857              		.loc 1 2174 13 view .LVU514
 1858 0042 0023     		movs	r3, #0
ARM GAS  /tmp/ccjYyDGQ.s 			page 139


 1859              	.LVL122:
 1860              	.L133:
2212:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1861              		.loc 1 2212 49 is_stmt 1 view .LVU515
2196:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 1862              		.loc 1 2196 22 view .LVU516
2196:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 1863              		.loc 1 2196 24 is_stmt 0 view .LVU517
 1864 0044 3B4A     		ldr	r2, .L151+8
 1865 0046 1268     		ldr	r2, [r2]
2196:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 1866              		.loc 1 2196 22 view .LVU518
 1867 0048 002A     		cmp	r2, #0
 1868 004a 47D0     		beq	.L147
2198:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 1869              		.loc 1 2198 21 is_stmt 1 view .LVU519
2198:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 1870              		.loc 1 2198 29 is_stmt 0 view .LVU520
 1871 004c 394B     		ldr	r3, .L151+8
 1872              	.LVL123:
2198:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 1873              		.loc 1 2198 29 view .LVU521
 1874 004e DB68     		ldr	r3, [r3, #12]
2198:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 1875              		.loc 1 2198 27 view .LVU522
 1876 0050 DB68     		ldr	r3, [r3, #12]
 1877              	.LVL124:
 1878              	.LBB149:
2199:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 1879              		.loc 1 2199 21 is_stmt 1 view .LVU523
 1880 0052 9A6A     		ldr	r2, [r3, #40]
 1881              	.LVL125:
2199:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 1882              		.loc 1 2199 21 view .LVU524
 1883 0054 D869     		ldr	r0, [r3, #28]
 1884 0056 196A     		ldr	r1, [r3, #32]
 1885 0058 8160     		str	r1, [r0, #8]
2199:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 1886              		.loc 1 2199 21 view .LVU525
 1887 005a D869     		ldr	r0, [r3, #28]
 1888 005c 4860     		str	r0, [r1, #4]
2199:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 1889              		.loc 1 2199 21 view .LVU526
 1890 005e 5068     		ldr	r0, [r2, #4]
 1891 0060 03F11801 		add	r1, r3, #24
 1892 0064 8842     		cmp	r0, r1
 1893 0066 E6D0     		beq	.L148
 1894              	.L134:
2199:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 1895              		.loc 1 2199 21 discriminator 3 view .LVU527
 1896 0068 0021     		movs	r1, #0
 1897 006a 9962     		str	r1, [r3, #40]
2199:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 1898              		.loc 1 2199 21 discriminator 3 view .LVU528
 1899 006c 1168     		ldr	r1, [r2]
 1900 006e 0139     		subs	r1, r1, #1
 1901 0070 1160     		str	r1, [r2]
ARM GAS  /tmp/ccjYyDGQ.s 			page 140


 1902              	.LBE149:
2199:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 1903              		.loc 1 2199 66 discriminator 3 view .LVU529
2200:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 1904              		.loc 1 2200 21 discriminator 3 view .LVU530
 1905              	.LBB150:
2201:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1906              		.loc 1 2201 21 discriminator 3 view .LVU531
 1907 0072 5A69     		ldr	r2, [r3, #20]
 1908              	.LVL126:
2201:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1909              		.loc 1 2201 21 discriminator 3 view .LVU532
 1910 0074 9868     		ldr	r0, [r3, #8]
 1911 0076 D968     		ldr	r1, [r3, #12]
 1912 0078 8160     		str	r1, [r0, #8]
2201:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1913              		.loc 1 2201 21 discriminator 3 view .LVU533
 1914 007a 9868     		ldr	r0, [r3, #8]
 1915 007c 4860     		str	r0, [r1, #4]
2201:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1916              		.loc 1 2201 21 discriminator 3 view .LVU534
 1917 007e 5168     		ldr	r1, [r2, #4]
 1918 0080 181D     		adds	r0, r3, #4
 1919 0082 8142     		cmp	r1, r0
 1920 0084 DAD0     		beq	.L149
 1921              	.L135:
2201:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1922              		.loc 1 2201 21 discriminator 3 view .LVU535
 1923 0086 0021     		movs	r1, #0
 1924 0088 5961     		str	r1, [r3, #20]
2201:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1925              		.loc 1 2201 21 discriminator 3 view .LVU536
 1926 008a 1168     		ldr	r1, [r2]
 1927 008c 0139     		subs	r1, r1, #1
 1928 008e 1160     		str	r1, [r2]
 1929              	.LBE150:
2201:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1930              		.loc 1 2201 66 discriminator 3 view .LVU537
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1931              		.loc 1 2202 21 discriminator 3 view .LVU538
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1932              		.loc 1 2202 21 discriminator 3 view .LVU539
 1933 0090 DA6A     		ldr	r2, [r3, #44]
 1934              	.LVL127:
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1935              		.loc 1 2202 21 is_stmt 0 discriminator 3 view .LVU540
 1936 0092 2949     		ldr	r1, .L151+12
 1937 0094 0968     		ldr	r1, [r1]
 1938 0096 8A42     		cmp	r2, r1
 1939 0098 01D9     		bls	.L136
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1940              		.loc 1 2202 21 is_stmt 1 discriminator 1 view .LVU541
 1941 009a 2749     		ldr	r1, .L151+12
 1942 009c 0A60     		str	r2, [r1]
 1943              	.L136:
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1944              		.loc 1 2202 21 discriminator 3 view .LVU542
ARM GAS  /tmp/ccjYyDGQ.s 			page 141


 1945              	.LBB151:
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1946              		.loc 1 2202 21 discriminator 3 view .LVU543
 1947 009e 2749     		ldr	r1, .L151+16
 1948 00a0 02EB8202 		add	r2, r2, r2, lsl #2
 1949 00a4 01EB8202 		add	r2, r1, r2, lsl #2
 1950 00a8 5268     		ldr	r2, [r2, #4]
 1951              	.LVL128:
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1952              		.loc 1 2202 21 discriminator 3 view .LVU544
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1953              		.loc 1 2202 21 discriminator 3 view .LVU545
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1954              		.loc 1 2202 21 discriminator 3 view .LVU546
 1955 00aa 9A60     		str	r2, [r3, #8]
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1956              		.loc 1 2202 21 discriminator 3 view .LVU547
 1957 00ac 9468     		ldr	r4, [r2, #8]
 1958 00ae DC60     		str	r4, [r3, #12]
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1959              		.loc 1 2202 21 discriminator 3 view .LVU548
 1960 00b0 6060     		str	r0, [r4, #4]
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1961              		.loc 1 2202 21 discriminator 3 view .LVU549
 1962 00b2 9060     		str	r0, [r2, #8]
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1963              		.loc 1 2202 21 discriminator 3 view .LVU550
 1964 00b4 DA6A     		ldr	r2, [r3, #44]
 1965              	.LVL129:
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1966              		.loc 1 2202 21 is_stmt 0 discriminator 3 view .LVU551
 1967 00b6 02EB8200 		add	r0, r2, r2, lsl #2
 1968 00ba 8400     		lsls	r4, r0, #2
 1969 00bc 01EB8000 		add	r0, r1, r0, lsl #2
 1970 00c0 5861     		str	r0, [r3, #20]
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1971              		.loc 1 2202 21 is_stmt 1 discriminator 3 view .LVU552
 1972 00c2 0859     		ldr	r0, [r1, r4]
 1973 00c4 0130     		adds	r0, r0, #1
 1974 00c6 0851     		str	r0, [r1, r4]
 1975              	.LBE151:
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1976              		.loc 1 2202 21 discriminator 3 view .LVU553
2202:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 1977              		.loc 1 2202 51 discriminator 3 view .LVU554
2206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 1978              		.loc 1 2206 21 discriminator 3 view .LVU555
2206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 1979              		.loc 1 2206 30 is_stmt 0 discriminator 3 view .LVU556
 1980 00c8 D96A     		ldr	r1, [r3, #44]
2206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 1981              		.loc 1 2206 58 discriminator 3 view .LVU557
 1982 00ca 1D4A     		ldr	r2, .L151+20
 1983 00cc 1268     		ldr	r2, [r2]
 1984 00ce D26A     		ldr	r2, [r2, #44]
2206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 1985              		.loc 1 2206 23 discriminator 3 view .LVU558
ARM GAS  /tmp/ccjYyDGQ.s 			page 142


 1986 00d0 9142     		cmp	r1, r2
 1987 00d2 B7D3     		bcc	.L133
2208:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1988              		.loc 1 2208 25 is_stmt 1 view .LVU559
2208:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 1989              		.loc 1 2208 39 is_stmt 0 view .LVU560
 1990 00d4 1B4A     		ldr	r2, .L151+24
 1991 00d6 0121     		movs	r1, #1
 1992 00d8 1160     		str	r1, [r2]
 1993 00da B3E7     		b	.L133
 1994              	.L147:
2216:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 1995              		.loc 1 2216 17 is_stmt 1 view .LVU561
2216:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 1996              		.loc 1 2216 19 is_stmt 0 view .LVU562
 1997 00dc 0BB1     		cbz	r3, .L139
2224:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 1998              		.loc 1 2224 21 is_stmt 1 view .LVU563
 1999 00de FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2000              	.LVL130:
 2001              	.L139:
 2002              	.LBB152:
2232:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2003              		.loc 1 2232 21 view .LVU564
2232:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2004              		.loc 1 2232 32 is_stmt 0 view .LVU565
 2005 00e2 194B     		ldr	r3, .L151+28
 2006 00e4 1C68     		ldr	r4, [r3]
 2007              	.LVL131:
2234:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 2008              		.loc 1 2234 21 is_stmt 1 view .LVU566
2234:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 2009              		.loc 1 2234 23 is_stmt 0 view .LVU567
 2010 00e6 84B9     		cbnz	r4, .L142
 2011              	.L140:
2254:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 2012              		.loc 1 2254 49 is_stmt 1 view .LVU568
 2013              	.LBE152:
2258:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 2014              		.loc 1 2258 17 view .LVU569
2258:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 2015              		.loc 1 2258 35 is_stmt 0 view .LVU570
 2016 00e8 164B     		ldr	r3, .L151+24
 2017 00ea 1C68     		ldr	r4, [r3]
 2018              	.LVL132:
2258:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 2019              		.loc 1 2258 19 view .LVU571
 2020 00ec D4B1     		cbz	r4, .L132
2262:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 2021              		.loc 1 2262 25 is_stmt 1 view .LVU572
 2022              	.LVL133:
2265:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 2023              		.loc 1 2265 21 view .LVU573
 2024 00ee 4FF0E023 		mov	r3, #-536813568
 2025 00f2 4FF08052 		mov	r2, #268435456
 2026 00f6 C3F8042D 		str	r2, [r3, #3332]
2265:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
ARM GAS  /tmp/ccjYyDGQ.s 			page 143


 2027              		.loc 1 2265 21 view .LVU574
 2028              		.syntax unified
 2029              	@ 2265 "../../Middlewares/Third_Party/FreeRTOS/tasks.c" 1
 2030 00fa BFF34F8F 		dsb
 2031              	@ 0 "" 2
2265:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 2032              		.loc 1 2265 21 view .LVU575
 2033              	@ 2265 "../../Middlewares/Third_Party/FreeRTOS/tasks.c" 1
 2034 00fe BFF36F8F 		isb
 2035              	@ 0 "" 2
2265:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 2036              		.loc 1 2265 52 view .LVU576
2262:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 2037              		.loc 1 2262 41 is_stmt 0 view .LVU577
 2038              		.thumb
 2039              		.syntax unified
 2040 0102 0124     		movs	r4, #1
 2041 0104 0EE0     		b	.L132
 2042              	.LVL134:
 2043              	.L141:
 2044              	.LBB153:
2244:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             }
 2045              		.loc 1 2244 57 is_stmt 1 view .LVU578
2247:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         } while( xPendedCounts > ( TickType_t ) 0U );
 2046              		.loc 1 2247 29 view .LVU579
2248:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2047              		.loc 1 2248 32 view .LVU580
2248:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2048              		.loc 1 2248 25 is_stmt 0 view .LVU581
 2049 0106 013C     		subs	r4, r4, #1
 2050              	.LVL135:
2248:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2051              		.loc 1 2248 25 view .LVU582
 2052 0108 07D0     		beq	.L150
 2053              	.L142:
2236:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
 2054              		.loc 1 2236 25 is_stmt 1 view .LVU583
2238:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             {
 2055              		.loc 1 2238 29 view .LVU584
2238:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             {
 2056              		.loc 1 2238 33 is_stmt 0 view .LVU585
 2057 010a FFF7FEFF 		bl	xTaskIncrementTick
 2058              	.LVL136:
2238:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             {
 2059              		.loc 1 2238 31 view .LVU586
 2060 010e 0028     		cmp	r0, #0
 2061 0110 F9D0     		beq	.L141
2240:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             }
 2062              		.loc 1 2240 33 is_stmt 1 view .LVU587
2240:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                             }
 2063              		.loc 1 2240 47 is_stmt 0 view .LVU588
 2064 0112 0C4B     		ldr	r3, .L151+24
 2065 0114 0122     		movs	r2, #1
 2066 0116 1A60     		str	r2, [r3]
 2067 0118 F5E7     		b	.L141
 2068              	.L150:
2250:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
ARM GAS  /tmp/ccjYyDGQ.s 			page 144


 2069              		.loc 1 2250 25 is_stmt 1 view .LVU589
2250:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 2070              		.loc 1 2250 38 is_stmt 0 view .LVU590
 2071 011a 0B4B     		ldr	r3, .L151+28
 2072 011c 0022     		movs	r2, #0
 2073 011e 1A60     		str	r2, [r3]
 2074 0120 E2E7     		b	.L140
 2075              	.LVL137:
 2076              	.L143:
2250:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 2077              		.loc 1 2250 38 view .LVU591
 2078              	.LBE153:
2175:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2079              		.loc 1 2175 16 view .LVU592
 2080 0122 0024     		movs	r4, #0
 2081              	.LVL138:
 2082              	.L132:
2275:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 2083              		.loc 1 2275 37 is_stmt 1 view .LVU593
2278:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2084              		.loc 1 2278 5 view .LVU594
 2085 0124 FFF7FEFF 		bl	vPortExitCritical
 2086              	.LVL139:
2280:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 2087              		.loc 1 2280 5 view .LVU595
2281:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2088              		.loc 1 2281 1 is_stmt 0 view .LVU596
 2089 0128 2046     		mov	r0, r4
 2090 012a 10BD     		pop	{r4, pc}
 2091              	.LVL140:
 2092              	.L152:
2281:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2093              		.loc 1 2281 1 view .LVU597
 2094              		.align	2
 2095              	.L151:
 2096 012c 00000000 		.word	.LANCHOR15
 2097 0130 00000000 		.word	.LANCHOR7
 2098 0134 00000000 		.word	.LANCHOR5
 2099 0138 00000000 		.word	.LANCHOR11
 2100 013c 00000000 		.word	.LANCHOR0
 2101 0140 00000000 		.word	.LANCHOR8
 2102 0144 00000000 		.word	.LANCHOR17
 2103 0148 00000000 		.word	.LANCHOR18
 2104              		.cfi_endproc
 2105              	.LFE12:
 2107              		.section	.text.vTaskDelay,"ax",%progbits
 2108              		.align	1
 2109              		.global	vTaskDelay
 2110              		.syntax unified
 2111              		.thumb
 2112              		.thumb_func
 2114              	vTaskDelay:
 2115              	.LVL141:
 2116              	.LFB7:
1302:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
 2117              		.loc 1 1302 5 is_stmt 1 view -0
 2118              		.cfi_startproc
ARM GAS  /tmp/ccjYyDGQ.s 			page 145


 2119              		@ args = 0, pretend = 0, frame = 0
 2120              		@ frame_needed = 0, uses_anonymous_args = 0
1302:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
 2121              		.loc 1 1302 5 is_stmt 0 view .LVU599
 2122 0000 10B5     		push	{r4, lr}
 2123              	.LCFI21:
 2124              		.cfi_def_cfa_offset 8
 2125              		.cfi_offset 4, -8
 2126              		.cfi_offset 14, -4
1303:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2127              		.loc 1 1303 9 is_stmt 1 view .LVU600
 2128              	.LVL142:
1306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 2129              		.loc 1 1306 9 view .LVU601
1306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 2130              		.loc 1 1306 11 is_stmt 0 view .LVU602
 2131 0002 A8B1     		cbz	r0, .L154
 2132 0004 0446     		mov	r4, r0
1308:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 2133              		.loc 1 1308 13 is_stmt 1 view .LVU603
 2134 0006 104B     		ldr	r3, .L159
 2135 0008 1B68     		ldr	r3, [r3]
 2136 000a 43B1     		cbz	r3, .L155
1308:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 2137              		.loc 1 1308 13 view .LVU604
 2138              	.LBB154:
 2139              	.LBI154:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2140              		.loc 2 194 34 view .LVU605
 2141              	.LBB155:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2142              		.loc 2 196 9 view .LVU606
 2143              		.loc 2 198 9 view .LVU607
 2144              		.syntax unified
 2145              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2146 000c 4FF05003 			mov r3, #80												
 2147 0010 83F31188 		msr basepri, r3											
 2148 0014 BFF36F8F 		isb														
 2149 0018 BFF34F8F 		dsb														
 2150              	
 2151              	@ 0 "" 2
 2152              	.LVL143:
 2153              		.thumb
 2154              		.syntax unified
 2155              	.L156:
 2156              		.loc 2 198 9 is_stmt 0 view .LVU608
 2157              	.LBE155:
 2158              	.LBE154:
1308:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 2159              		.loc 1 1308 13 is_stmt 1 discriminator 1 view .LVU609
1308:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 2160              		.loc 1 1308 13 discriminator 1 view .LVU610
1308:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 2161              		.loc 1 1308 13 discriminator 1 view .LVU611
 2162 001c FEE7     		b	.L156
 2163              	.L155:
1308:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vTaskSuspendAll();
ARM GAS  /tmp/ccjYyDGQ.s 			page 146


 2164              		.loc 1 1308 54 discriminator 2 view .LVU612
1309:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 2165              		.loc 1 1309 13 discriminator 2 view .LVU613
 2166 001e FFF7FEFF 		bl	vTaskSuspendAll
 2167              	.LVL144:
1311:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2168              		.loc 1 1311 34 discriminator 2 view .LVU614
1320:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 2169              		.loc 1 1320 17 discriminator 2 view .LVU615
 2170 0022 0021     		movs	r1, #0
 2171 0024 2046     		mov	r0, r4
 2172 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2173              	.LVL145:
1322:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 2174              		.loc 1 1322 13 discriminator 2 view .LVU616
1322:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 2175              		.loc 1 1322 31 is_stmt 0 discriminator 2 view .LVU617
 2176 002a FFF7FEFF 		bl	xTaskResumeAll
 2177              	.LVL146:
1326:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 2178              		.loc 1 1326 37 is_stmt 1 discriminator 2 view .LVU618
1331:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 2179              		.loc 1 1331 9 discriminator 2 view .LVU619
1331:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 2180              		.loc 1 1331 11 is_stmt 0 discriminator 2 view .LVU620
 2181 002e 48B9     		cbnz	r0, .L153
 2182              	.LVL147:
 2183              	.L154:
1333:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 2184              		.loc 1 1333 13 is_stmt 1 view .LVU621
 2185 0030 4FF0E023 		mov	r3, #-536813568
 2186 0034 4FF08052 		mov	r2, #268435456
 2187 0038 C3F8042D 		str	r2, [r3, #3332]
1333:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 2188              		.loc 1 1333 13 view .LVU622
 2189              		.syntax unified
 2190              	@ 1333 "../../Middlewares/Third_Party/FreeRTOS/tasks.c" 1
 2191 003c BFF34F8F 		dsb
 2192              	@ 0 "" 2
1333:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 2193              		.loc 1 1333 13 view .LVU623
 2194              	@ 1333 "../../Middlewares/Third_Party/FreeRTOS/tasks.c" 1
 2195 0040 BFF36F8F 		isb
 2196              	@ 0 "" 2
1333:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 2197              		.loc 1 1333 35 view .LVU624
1337:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 2198              		.loc 1 1337 37 view .LVU625
 2199              		.thumb
 2200              		.syntax unified
 2201              	.L153:
1339:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2202              		.loc 1 1339 5 is_stmt 0 view .LVU626
 2203 0044 10BD     		pop	{r4, pc}
 2204              	.L160:
 2205 0046 00BF     		.align	2
 2206              	.L159:
ARM GAS  /tmp/ccjYyDGQ.s 			page 147


 2207 0048 00000000 		.word	.LANCHOR15
 2208              		.cfi_endproc
 2209              	.LFE7:
 2211              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 2212              		.align	1
 2213              		.global	xTaskCatchUpTicks
 2214              		.syntax unified
 2215              		.thumb
 2216              		.thumb_func
 2218              	xTaskCatchUpTicks:
 2219              	.LVL148:
 2220              	.LFB18:
2613:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xYieldOccurred;
 2221              		.loc 1 2613 1 is_stmt 1 view -0
 2222              		.cfi_startproc
 2223              		@ args = 0, pretend = 0, frame = 0
 2224              		@ frame_needed = 0, uses_anonymous_args = 0
2614:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2225              		.loc 1 2614 5 view .LVU628
2618:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2226              		.loc 1 2618 5 view .LVU629
 2227 0000 0D4B     		ldr	r3, .L166
 2228 0002 1B68     		ldr	r3, [r3]
 2229 0004 43B1     		cbz	r3, .L162
2618:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2230              		.loc 1 2618 5 view .LVU630
 2231              	.LBB156:
 2232              	.LBI156:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2233              		.loc 2 194 34 view .LVU631
 2234              	.LBB157:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2235              		.loc 2 196 9 view .LVU632
 2236              		.loc 2 198 9 view .LVU633
 2237              		.syntax unified
 2238              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2239 0006 4FF05003 			mov r3, #80												
 2240 000a 83F31188 		msr basepri, r3											
 2241 000e BFF36F8F 		isb														
 2242 0012 BFF34F8F 		dsb														
 2243              	
 2244              	@ 0 "" 2
 2245              	.LVL149:
 2246              		.thumb
 2247              		.syntax unified
 2248              	.L163:
 2249              		.loc 2 198 9 is_stmt 0 view .LVU634
 2250              	.LBE157:
 2251              	.LBE156:
2618:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2252              		.loc 1 2618 5 is_stmt 1 discriminator 1 view .LVU635
2618:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2253              		.loc 1 2618 5 discriminator 1 view .LVU636
2618:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2254              		.loc 1 2618 5 discriminator 1 view .LVU637
 2255 0016 FEE7     		b	.L163
 2256              	.L162:
ARM GAS  /tmp/ccjYyDGQ.s 			page 148


2613:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xYieldOccurred;
 2257              		.loc 1 2613 1 is_stmt 0 discriminator 2 view .LVU638
 2258 0018 10B5     		push	{r4, lr}
 2259              	.LCFI22:
 2260              		.cfi_def_cfa_offset 8
 2261              		.cfi_offset 4, -8
 2262              		.cfi_offset 14, -4
 2263 001a 0446     		mov	r4, r0
2618:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2264              		.loc 1 2618 46 is_stmt 1 discriminator 2 view .LVU639
2622:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2265              		.loc 1 2622 5 discriminator 2 view .LVU640
 2266 001c FFF7FEFF 		bl	vTaskSuspendAll
 2267              	.LVL150:
2625:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 2268              		.loc 1 2625 5 discriminator 2 view .LVU641
 2269 0020 FFF7FEFF 		bl	vPortEnterCritical
 2270              	.LVL151:
2627:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2271              		.loc 1 2627 9 discriminator 2 view .LVU642
2627:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2272              		.loc 1 2627 22 is_stmt 0 discriminator 2 view .LVU643
 2273 0024 054B     		ldr	r3, .L166+4
 2274 0026 1868     		ldr	r0, [r3]
 2275 0028 2044     		add	r0, r0, r4
 2276 002a 1860     		str	r0, [r3]
2629:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     xYieldOccurred = xTaskResumeAll();
 2277              		.loc 1 2629 5 is_stmt 1 discriminator 2 view .LVU644
 2278 002c FFF7FEFF 		bl	vPortExitCritical
 2279              	.LVL152:
2630:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2280              		.loc 1 2630 5 discriminator 2 view .LVU645
2630:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2281              		.loc 1 2630 22 is_stmt 0 discriminator 2 view .LVU646
 2282 0030 FFF7FEFF 		bl	xTaskResumeAll
 2283              	.LVL153:
2632:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 2284              		.loc 1 2632 5 is_stmt 1 discriminator 2 view .LVU647
2633:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 2285              		.loc 1 2633 1 is_stmt 0 discriminator 2 view .LVU648
 2286 0034 10BD     		pop	{r4, pc}
 2287              	.LVL154:
 2288              	.L167:
2633:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 2289              		.loc 1 2633 1 discriminator 2 view .LVU649
 2290 0036 00BF     		.align	2
 2291              	.L166:
 2292 0038 00000000 		.word	.LANCHOR15
 2293 003c 00000000 		.word	.LANCHOR18
 2294              		.cfi_endproc
 2295              	.LFE18:
 2297              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2298              		.align	1
 2299              		.global	vTaskSwitchContext
 2300              		.syntax unified
 2301              		.thumb
 2302              		.thumb_func
ARM GAS  /tmp/ccjYyDGQ.s 			page 149


 2304              	vTaskSwitchContext:
 2305              	.LFB20:
3002:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2306              		.loc 1 3002 1 is_stmt 1 view -0
 2307              		.cfi_startproc
 2308              		@ args = 0, pretend = 0, frame = 0
 2309              		@ frame_needed = 0, uses_anonymous_args = 0
 2310              		@ link register save eliminated.
3003:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 2311              		.loc 1 3003 5 view .LVU651
3003:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 2312              		.loc 1 3003 30 is_stmt 0 view .LVU652
 2313 0000 1F4B     		ldr	r3, .L179
 2314 0002 1B68     		ldr	r3, [r3]
3003:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 2315              		.loc 1 3003 7 view .LVU653
 2316 0004 1BB1     		cbz	r3, .L169
3007:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2317              		.loc 1 3007 9 is_stmt 1 view .LVU654
3007:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2318              		.loc 1 3007 23 is_stmt 0 view .LVU655
 2319 0006 1F4B     		ldr	r3, .L179+4
 2320 0008 0122     		movs	r2, #1
 2321 000a 1A60     		str	r2, [r3]
 2322 000c 7047     		bx	lr
 2323              	.L169:
3011:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_OUT();
 2324              		.loc 1 3011 9 is_stmt 1 view .LVU656
3011:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_OUT();
 2325              		.loc 1 3011 23 is_stmt 0 view .LVU657
 2326 000e 1D4B     		ldr	r3, .L179+4
 2327 0010 0022     		movs	r2, #0
 2328 0012 1A60     		str	r2, [r3]
3012:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2329              		.loc 1 3012 33 is_stmt 1 view .LVU658
3043:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2330              		.loc 1 3043 39 view .LVU659
 2331              	.LBB158:
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2332              		.loc 1 3054 9 view .LVU660
 2333 0014 1C4B     		ldr	r3, .L179+8
 2334 0016 1B68     		ldr	r3, [r3]
 2335              	.LVL155:
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2336              		.loc 1 3054 9 view .LVU661
 2337              	.L171:
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2338              		.loc 1 3054 9 discriminator 5 view .LVU662
 2339 0018 03EB8301 		add	r1, r3, r3, lsl #2
 2340 001c 8A00     		lsls	r2, r1, #2
 2341 001e 1B49     		ldr	r1, .L179+12
 2342 0020 8A58     		ldr	r2, [r1, r2]
 2343 0022 5AB9     		cbnz	r2, .L176
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2344              		.loc 1 3054 9 discriminator 6 view .LVU663
 2345 0024 0BB1     		cbz	r3, .L177
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
ARM GAS  /tmp/ccjYyDGQ.s 			page 150


 2346              		.loc 1 3054 9 discriminator 3 view .LVU664
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2347              		.loc 1 3054 9 discriminator 3 view .LVU665
 2348 0026 013B     		subs	r3, r3, #1
 2349              	.LVL156:
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2350              		.loc 1 3054 9 is_stmt 0 discriminator 3 view .LVU666
 2351 0028 F6E7     		b	.L171
 2352              	.L177:
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2353              		.loc 1 3054 9 is_stmt 1 view .LVU667
 2354              	.LBB159:
 2355              	.LBI159:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2356              		.loc 2 194 34 view .LVU668
 2357              	.LBB160:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2358              		.loc 2 196 9 view .LVU669
 2359              		.loc 2 198 9 view .LVU670
 2360              		.syntax unified
 2361              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2362 002a 4FF05003 			mov r3, #80												
 2363 002e 83F31188 		msr basepri, r3											
 2364 0032 BFF36F8F 		isb														
 2365 0036 BFF34F8F 		dsb														
 2366              	
 2367              	@ 0 "" 2
 2368              	.LVL157:
 2369              		.thumb
 2370              		.syntax unified
 2371              	.L173:
 2372              		.loc 2 198 9 is_stmt 0 view .LVU671
 2373              	.LBE160:
 2374              	.LBE159:
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2375              		.loc 1 3054 9 is_stmt 1 discriminator 1 view .LVU672
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2376              		.loc 1 3054 9 discriminator 1 view .LVU673
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2377              		.loc 1 3054 9 discriminator 1 view .LVU674
 2378 003a FEE7     		b	.L173
 2379              	.LVL158:
 2380              	.L176:
 2381              	.LBB161:
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2382              		.loc 1 3054 9 discriminator 7 view .LVU675
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2383              		.loc 1 3054 9 discriminator 7 view .LVU676
 2384 003c 03EB8300 		add	r0, r3, r3, lsl #2
 2385 0040 8200     		lsls	r2, r0, #2
 2386 0042 0A44     		add	r2, r2, r1
 2387 0044 5068     		ldr	r0, [r2, #4]
 2388 0046 4068     		ldr	r0, [r0, #4]
 2389 0048 5060     		str	r0, [r2, #4]
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2390              		.loc 1 3054 9 discriminator 7 view .LVU677
 2391 004a 03EB830C 		add	ip, r3, r3, lsl #2
ARM GAS  /tmp/ccjYyDGQ.s 			page 151


 2392 004e 4FEA8C02 		lsl	r2, ip, #2
 2393 0052 0832     		adds	r2, r2, #8
 2394 0054 1144     		add	r1, r1, r2
 2395 0056 8842     		cmp	r0, r1
 2396 0058 0BD0     		beq	.L178
 2397              	.L175:
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2398              		.loc 1 3054 9 discriminator 10 view .LVU678
 2399 005a 03EB8302 		add	r2, r3, r3, lsl #2
 2400 005e 9100     		lsls	r1, r2, #2
 2401 0060 0A4A     		ldr	r2, .L179+12
 2402 0062 0A44     		add	r2, r2, r1
 2403 0064 5268     		ldr	r2, [r2, #4]
 2404 0066 D168     		ldr	r1, [r2, #12]
 2405 0068 094A     		ldr	r2, .L179+16
 2406 006a 1160     		str	r1, [r2]
 2407              	.LBE161:
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2408              		.loc 1 3054 9 discriminator 10 view .LVU679
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2409              		.loc 1 3054 9 discriminator 10 view .LVU680
 2410 006c 064A     		ldr	r2, .L179+8
 2411 006e 1360     		str	r3, [r2]
 2412              	.LBE158:
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2413              		.loc 1 3054 43 discriminator 10 view .LVU681
3055:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2414              		.loc 1 3055 32 discriminator 10 view .LVU682
3072:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2415              		.loc 1 3072 1 is_stmt 0 discriminator 10 view .LVU683
 2416 0070 7047     		bx	lr
 2417              	.L178:
 2418              	.LBB163:
 2419              	.LBB162:
3054:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 2420              		.loc 1 3054 9 is_stmt 1 discriminator 8 view .LVU684
 2421 0072 4068     		ldr	r0, [r0, #4]
 2422 0074 6246     		mov	r2, ip
 2423 0076 9100     		lsls	r1, r2, #2
 2424 0078 044A     		ldr	r2, .L179+12
 2425 007a 0A44     		add	r2, r2, r1
 2426 007c 5060     		str	r0, [r2, #4]
 2427 007e ECE7     		b	.L175
 2428              	.L180:
 2429              		.align	2
 2430              	.L179:
 2431 0080 00000000 		.word	.LANCHOR15
 2432 0084 00000000 		.word	.LANCHOR17
 2433 0088 00000000 		.word	.LANCHOR11
 2434 008c 00000000 		.word	.LANCHOR0
 2435 0090 00000000 		.word	.LANCHOR8
 2436              	.LBE162:
 2437              	.LBE163:
 2438              		.cfi_endproc
 2439              	.LFE20:
 2441              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2442              		.align	1
ARM GAS  /tmp/ccjYyDGQ.s 			page 152


 2443              		.global	vTaskPlaceOnEventList
 2444              		.syntax unified
 2445              		.thumb
 2446              		.thumb_func
 2448              	vTaskPlaceOnEventList:
 2449              	.LVL159:
 2450              	.LFB21:
3077:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 2451              		.loc 1 3077 1 view -0
 2452              		.cfi_startproc
 2453              		@ args = 0, pretend = 0, frame = 0
 2454              		@ frame_needed = 0, uses_anonymous_args = 0
3078:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2455              		.loc 1 3078 5 view .LVU686
 2456 0000 58B1     		cbz	r0, .L186
3077:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 2457              		.loc 1 3077 1 is_stmt 0 discriminator 2 view .LVU687
 2458 0002 10B5     		push	{r4, lr}
 2459              	.LCFI23:
 2460              		.cfi_def_cfa_offset 8
 2461              		.cfi_offset 4, -8
 2462              		.cfi_offset 14, -4
 2463 0004 0C46     		mov	r4, r1
3078:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2464              		.loc 1 3078 32 is_stmt 1 discriminator 2 view .LVU688
3094:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2465              		.loc 1 3094 5 discriminator 2 view .LVU689
3094:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2466              		.loc 1 3094 46 is_stmt 0 discriminator 2 view .LVU690
 2467 0006 094A     		ldr	r2, .L187
 2468 0008 1168     		ldr	r1, [r2]
 2469              	.LVL160:
3094:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2470              		.loc 1 3094 5 discriminator 2 view .LVU691
 2471 000a 1831     		adds	r1, r1, #24
 2472 000c FFF7FEFF 		bl	vListInsert
 2473              	.LVL161:
3096:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 2474              		.loc 1 3096 5 is_stmt 1 discriminator 2 view .LVU692
 2475 0010 0121     		movs	r1, #1
 2476 0012 2046     		mov	r0, r4
 2477 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2478              	.LVL162:
3097:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2479              		.loc 1 3097 1 is_stmt 0 discriminator 2 view .LVU693
 2480 0018 10BD     		pop	{r4, pc}
 2481              	.LVL163:
 2482              	.L186:
 2483              	.LCFI24:
 2484              		.cfi_def_cfa_offset 0
 2485              		.cfi_restore 4
 2486              		.cfi_restore 14
3078:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2487              		.loc 1 3078 5 is_stmt 1 view .LVU694
 2488              	.LBB164:
 2489              	.LBI164:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
ARM GAS  /tmp/ccjYyDGQ.s 			page 153


 2490              		.loc 2 194 34 view .LVU695
 2491              	.LBB165:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2492              		.loc 2 196 9 view .LVU696
 2493              		.loc 2 198 9 view .LVU697
 2494              		.syntax unified
 2495              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2496 001a 4FF05003 			mov r3, #80												
 2497 001e 83F31188 		msr basepri, r3											
 2498 0022 BFF36F8F 		isb														
 2499 0026 BFF34F8F 		dsb														
 2500              	
 2501              	@ 0 "" 2
 2502              	.LVL164:
 2503              		.thumb
 2504              		.syntax unified
 2505              	.L183:
 2506              		.loc 2 198 9 is_stmt 0 view .LVU698
 2507              	.LBE165:
 2508              	.LBE164:
3078:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2509              		.loc 1 3078 5 is_stmt 1 discriminator 1 view .LVU699
3078:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2510              		.loc 1 3078 5 discriminator 1 view .LVU700
3078:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2511              		.loc 1 3078 5 discriminator 1 view .LVU701
 2512 002a FEE7     		b	.L183
 2513              	.L188:
 2514              		.align	2
 2515              	.L187:
 2516 002c 00000000 		.word	.LANCHOR8
 2517              		.cfi_endproc
 2518              	.LFE21:
 2520              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2521              		.align	1
 2522              		.global	vTaskPlaceOnUnorderedEventList
 2523              		.syntax unified
 2524              		.thumb
 2525              		.thumb_func
 2527              	vTaskPlaceOnUnorderedEventList:
 2528              	.LVL165:
 2529              	.LFB22:
3103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 2530              		.loc 1 3103 1 view -0
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 0
 2533              		@ frame_needed = 0, uses_anonymous_args = 0
3103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 2534              		.loc 1 3103 1 is_stmt 0 view .LVU703
 2535 0000 38B5     		push	{r3, r4, r5, lr}
 2536              	.LCFI25:
 2537              		.cfi_def_cfa_offset 16
 2538              		.cfi_offset 3, -16
 2539              		.cfi_offset 4, -12
 2540              		.cfi_offset 5, -8
 2541              		.cfi_offset 14, -4
3104:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 154


 2542              		.loc 1 3104 5 is_stmt 1 view .LVU704
 2543 0002 60B1     		cbz	r0, .L195
 2544 0004 0346     		mov	r3, r0
3104:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2545              		.loc 1 3104 32 discriminator 2 view .LVU705
3108:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2546              		.loc 1 3108 5 discriminator 2 view .LVU706
 2547 0006 1848     		ldr	r0, .L196
 2548              	.LVL166:
3108:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2549              		.loc 1 3108 5 is_stmt 0 discriminator 2 view .LVU707
 2550 0008 0068     		ldr	r0, [r0]
 2551 000a 88B9     		cbnz	r0, .L192
3108:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2552              		.loc 1 3108 5 is_stmt 1 view .LVU708
 2553              	.LBB166:
 2554              	.LBI166:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2555              		.loc 2 194 34 view .LVU709
 2556              	.LBB167:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2557              		.loc 2 196 9 view .LVU710
 2558              		.loc 2 198 9 view .LVU711
 2559              		.syntax unified
 2560              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2561 000c 4FF05003 			mov r3, #80												
 2562 0010 83F31188 		msr basepri, r3											
 2563 0014 BFF36F8F 		isb														
 2564 0018 BFF34F8F 		dsb														
 2565              	
 2566              	@ 0 "" 2
 2567              	.LVL167:
 2568              		.thumb
 2569              		.syntax unified
 2570              	.L193:
 2571              		.loc 2 198 9 is_stmt 0 view .LVU712
 2572              	.LBE167:
 2573              	.LBE166:
3108:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2574              		.loc 1 3108 5 is_stmt 1 discriminator 2 view .LVU713
3108:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2575              		.loc 1 3108 5 discriminator 2 view .LVU714
3108:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2576              		.loc 1 3108 5 discriminator 2 view .LVU715
 2577 001c FEE7     		b	.L193
 2578              	.LVL168:
 2579              	.L195:
3104:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2580              		.loc 1 3104 5 view .LVU716
 2581              	.LBB168:
 2582              	.LBI168:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2583              		.loc 2 194 34 view .LVU717
 2584              	.LBB169:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2585              		.loc 2 196 9 view .LVU718
 2586              		.loc 2 198 9 view .LVU719
ARM GAS  /tmp/ccjYyDGQ.s 			page 155


 2587              		.syntax unified
 2588              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2589 001e 4FF05003 			mov r3, #80												
 2590 0022 83F31188 		msr basepri, r3											
 2591 0026 BFF36F8F 		isb														
 2592 002a BFF34F8F 		dsb														
 2593              	
 2594              	@ 0 "" 2
 2595              	.LVL169:
 2596              		.thumb
 2597              		.syntax unified
 2598              	.L191:
 2599              		.loc 2 198 9 is_stmt 0 view .LVU720
 2600              	.LBE169:
 2601              	.LBE168:
3104:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2602              		.loc 1 3104 5 is_stmt 1 discriminator 1 view .LVU721
3104:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2603              		.loc 1 3104 5 discriminator 1 view .LVU722
3104:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2604              		.loc 1 3104 5 discriminator 1 view .LVU723
 2605 002e FEE7     		b	.L191
 2606              	.LVL170:
 2607              	.L192:
3108:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2608              		.loc 1 3108 46 discriminator 2 view .LVU724
3113:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2609              		.loc 1 3113 5 discriminator 2 view .LVU725
 2610 0030 0E48     		ldr	r0, .L196+4
 2611 0032 0468     		ldr	r4, [r0]
 2612 0034 41F00041 		orr	r1, r1, #-2147483648
 2613              	.LVL171:
3113:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2614              		.loc 1 3113 5 is_stmt 0 discriminator 2 view .LVU726
 2615 0038 A161     		str	r1, [r4, #24]
 2616              	.LBB170:
3120:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2617              		.loc 1 3120 5 is_stmt 1 discriminator 2 view .LVU727
 2618 003a 5968     		ldr	r1, [r3, #4]
 2619              	.LVL172:
3120:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2620              		.loc 1 3120 5 discriminator 2 view .LVU728
3120:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2621              		.loc 1 3120 5 discriminator 2 view .LVU729
3120:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2622              		.loc 1 3120 5 discriminator 2 view .LVU730
 2623 003c 0468     		ldr	r4, [r0]
 2624 003e E161     		str	r1, [r4, #28]
3120:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2625              		.loc 1 3120 5 discriminator 2 view .LVU731
 2626 0040 0568     		ldr	r5, [r0]
 2627 0042 8C68     		ldr	r4, [r1, #8]
 2628 0044 2C62     		str	r4, [r5, #32]
3120:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2629              		.loc 1 3120 5 discriminator 2 view .LVU732
 2630 0046 0568     		ldr	r5, [r0]
 2631 0048 1835     		adds	r5, r5, #24
ARM GAS  /tmp/ccjYyDGQ.s 			page 156


 2632 004a 6560     		str	r5, [r4, #4]
3120:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2633              		.loc 1 3120 5 discriminator 2 view .LVU733
 2634 004c 0468     		ldr	r4, [r0]
 2635 004e 1834     		adds	r4, r4, #24
 2636 0050 8C60     		str	r4, [r1, #8]
3120:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2637              		.loc 1 3120 5 discriminator 2 view .LVU734
 2638 0052 0168     		ldr	r1, [r0]
 2639              	.LVL173:
3120:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2640              		.loc 1 3120 5 is_stmt 0 discriminator 2 view .LVU735
 2641 0054 8B62     		str	r3, [r1, #40]
3120:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2642              		.loc 1 3120 5 is_stmt 1 discriminator 2 view .LVU736
 2643 0056 1968     		ldr	r1, [r3]
 2644 0058 0131     		adds	r1, r1, #1
 2645 005a 1960     		str	r1, [r3]
 2646              	.LBE170:
3120:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2647              		.loc 1 3120 69 discriminator 2 view .LVU737
3122:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 2648              		.loc 1 3122 5 discriminator 2 view .LVU738
 2649 005c 0121     		movs	r1, #1
 2650 005e 1046     		mov	r0, r2
 2651 0060 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2652              	.LVL174:
3123:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2653              		.loc 1 3123 1 is_stmt 0 discriminator 2 view .LVU739
 2654 0064 38BD     		pop	{r3, r4, r5, pc}
 2655              	.L197:
 2656 0066 00BF     		.align	2
 2657              	.L196:
 2658 0068 00000000 		.word	.LANCHOR15
 2659 006c 00000000 		.word	.LANCHOR8
 2660              		.cfi_endproc
 2661              	.LFE22:
 2663              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 2664              		.align	1
 2665              		.global	xTaskRemoveFromEventList
 2666              		.syntax unified
 2667              		.thumb
 2668              		.thumb_func
 2670              	xTaskRemoveFromEventList:
 2671              	.LVL175:
 2672              	.LFB23:
3162:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 2673              		.loc 1 3162 1 is_stmt 1 view -0
 2674              		.cfi_startproc
 2675              		@ args = 0, pretend = 0, frame = 0
 2676              		@ frame_needed = 0, uses_anonymous_args = 0
 2677              		@ link register save eliminated.
3163:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 2678              		.loc 1 3163 5 view .LVU741
3164:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2679              		.loc 1 3164 5 view .LVU742
3179:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
ARM GAS  /tmp/ccjYyDGQ.s 			page 157


 2680              		.loc 1 3179 5 view .LVU743
3179:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 2681              		.loc 1 3179 22 is_stmt 0 view .LVU744
 2682 0000 C368     		ldr	r3, [r0, #12]
3179:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 2683              		.loc 1 3179 20 view .LVU745
 2684 0002 DB68     		ldr	r3, [r3, #12]
 2685              	.LVL176:
3180:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 2686              		.loc 1 3180 5 is_stmt 1 view .LVU746
 2687 0004 002B     		cmp	r3, #0
 2688 0006 4BD0     		beq	.L210
3162:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 2689              		.loc 1 3162 1 is_stmt 0 discriminator 2 view .LVU747
 2690 0008 10B4     		push	{r4}
 2691              	.LCFI26:
 2692              		.cfi_def_cfa_offset 4
 2693              		.cfi_offset 4, -4
3180:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 2694              		.loc 1 3180 35 is_stmt 1 discriminator 2 view .LVU748
 2695              	.LBB171:
3181:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2696              		.loc 1 3181 5 discriminator 2 view .LVU749
 2697 000a 9A6A     		ldr	r2, [r3, #40]
 2698              	.LVL177:
3181:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2699              		.loc 1 3181 5 discriminator 2 view .LVU750
 2700 000c D869     		ldr	r0, [r3, #28]
 2701              	.LVL178:
3181:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2702              		.loc 1 3181 5 is_stmt 0 discriminator 2 view .LVU751
 2703 000e 196A     		ldr	r1, [r3, #32]
 2704 0010 8160     		str	r1, [r0, #8]
3181:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2705              		.loc 1 3181 5 is_stmt 1 discriminator 2 view .LVU752
 2706 0012 D869     		ldr	r0, [r3, #28]
 2707 0014 4860     		str	r0, [r1, #4]
3181:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2708              		.loc 1 3181 5 discriminator 2 view .LVU753
 2709 0016 5168     		ldr	r1, [r2, #4]
 2710 0018 03F11800 		add	r0, r3, #24
 2711 001c 8142     		cmp	r1, r0
 2712 001e 48D0     		beq	.L211
 2713              	.L201:
3181:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2714              		.loc 1 3181 5 discriminator 3 view .LVU754
 2715 0020 0021     		movs	r1, #0
 2716 0022 9962     		str	r1, [r3, #40]
3181:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2717              		.loc 1 3181 5 discriminator 3 view .LVU755
 2718 0024 1168     		ldr	r1, [r2]
 2719 0026 0139     		subs	r1, r1, #1
 2720 0028 1160     		str	r1, [r2]
 2721              	.LBE171:
3181:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2722              		.loc 1 3181 59 discriminator 3 view .LVU756
3183:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
ARM GAS  /tmp/ccjYyDGQ.s 			page 158


 2723              		.loc 1 3183 5 discriminator 3 view .LVU757
3183:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 2724              		.loc 1 3183 30 is_stmt 0 discriminator 3 view .LVU758
 2725 002a 2C4A     		ldr	r2, .L213
 2726              	.LVL179:
3183:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 2727              		.loc 1 3183 30 discriminator 3 view .LVU759
 2728 002c 1268     		ldr	r2, [r2]
3183:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 2729              		.loc 1 3183 7 discriminator 3 view .LVU760
 2730 002e 002A     		cmp	r2, #0
 2731 0030 45D1     		bne	.L202
 2732              	.LBB172:
3185:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 2733              		.loc 1 3185 9 is_stmt 1 view .LVU761
 2734 0032 5A69     		ldr	r2, [r3, #20]
 2735              	.LVL180:
3185:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 2736              		.loc 1 3185 9 view .LVU762
 2737 0034 9868     		ldr	r0, [r3, #8]
 2738 0036 D968     		ldr	r1, [r3, #12]
 2739 0038 8160     		str	r1, [r0, #8]
3185:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 2740              		.loc 1 3185 9 view .LVU763
 2741 003a 9868     		ldr	r0, [r3, #8]
 2742 003c 4860     		str	r0, [r1, #4]
3185:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 2743              		.loc 1 3185 9 view .LVU764
 2744 003e 5168     		ldr	r1, [r2, #4]
 2745 0040 181D     		adds	r0, r3, #4
 2746 0042 8142     		cmp	r1, r0
 2747 0044 38D0     		beq	.L212
 2748              	.L203:
3185:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 2749              		.loc 1 3185 9 discriminator 3 view .LVU765
 2750 0046 0021     		movs	r1, #0
 2751 0048 5961     		str	r1, [r3, #20]
3185:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 2752              		.loc 1 3185 9 discriminator 3 view .LVU766
 2753 004a 1168     		ldr	r1, [r2]
 2754 004c 0139     		subs	r1, r1, #1
 2755 004e 1160     		str	r1, [r2]
 2756              	.LBE172:
3185:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 2757              		.loc 1 3185 63 discriminator 3 view .LVU767
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2758              		.loc 1 3186 9 discriminator 3 view .LVU768
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2759              		.loc 1 3186 9 discriminator 3 view .LVU769
 2760 0050 DA6A     		ldr	r2, [r3, #44]
 2761              	.LVL181:
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2762              		.loc 1 3186 9 is_stmt 0 discriminator 3 view .LVU770
 2763 0052 2349     		ldr	r1, .L213+4
 2764 0054 0968     		ldr	r1, [r1]
 2765 0056 8A42     		cmp	r2, r1
 2766 0058 01D9     		bls	.L204
ARM GAS  /tmp/ccjYyDGQ.s 			page 159


3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2767              		.loc 1 3186 9 is_stmt 1 discriminator 1 view .LVU771
 2768 005a 2149     		ldr	r1, .L213+4
 2769 005c 0A60     		str	r2, [r1]
 2770              	.L204:
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2771              		.loc 1 3186 9 discriminator 3 view .LVU772
 2772              	.LBB173:
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2773              		.loc 1 3186 9 discriminator 3 view .LVU773
 2774 005e 2149     		ldr	r1, .L213+8
 2775 0060 02EB8202 		add	r2, r2, r2, lsl #2
 2776 0064 01EB8202 		add	r2, r1, r2, lsl #2
 2777 0068 5268     		ldr	r2, [r2, #4]
 2778              	.LVL182:
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2779              		.loc 1 3186 9 discriminator 3 view .LVU774
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2780              		.loc 1 3186 9 discriminator 3 view .LVU775
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2781              		.loc 1 3186 9 discriminator 3 view .LVU776
 2782 006a 9A60     		str	r2, [r3, #8]
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2783              		.loc 1 3186 9 discriminator 3 view .LVU777
 2784 006c 9468     		ldr	r4, [r2, #8]
 2785 006e DC60     		str	r4, [r3, #12]
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2786              		.loc 1 3186 9 discriminator 3 view .LVU778
 2787 0070 6060     		str	r0, [r4, #4]
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2788              		.loc 1 3186 9 discriminator 3 view .LVU779
 2789 0072 9060     		str	r0, [r2, #8]
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2790              		.loc 1 3186 9 discriminator 3 view .LVU780
 2791 0074 DA6A     		ldr	r2, [r3, #44]
 2792              	.LVL183:
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2793              		.loc 1 3186 9 is_stmt 0 discriminator 3 view .LVU781
 2794 0076 02EB8200 		add	r0, r2, r2, lsl #2
 2795 007a 8400     		lsls	r4, r0, #2
 2796 007c 01EB8000 		add	r0, r1, r0, lsl #2
 2797 0080 5861     		str	r0, [r3, #20]
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2798              		.loc 1 3186 9 is_stmt 1 discriminator 3 view .LVU782
 2799 0082 0859     		ldr	r0, [r1, r4]
 2800 0084 0130     		adds	r0, r0, #1
 2801 0086 0851     		str	r0, [r1, r4]
 2802              	.LBE173:
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2803              		.loc 1 3186 9 discriminator 3 view .LVU783
3186:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2804              		.loc 1 3186 48 discriminator 3 view .LVU784
 2805              	.L205:
3206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2806              		.loc 1 3206 86 discriminator 1 view .LVU785
3209:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 2807              		.loc 1 3209 5 discriminator 1 view .LVU786
ARM GAS  /tmp/ccjYyDGQ.s 			page 160


3209:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 2808              		.loc 1 3209 23 is_stmt 0 discriminator 1 view .LVU787
 2809 0088 DA6A     		ldr	r2, [r3, #44]
3209:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 2810              		.loc 1 3209 50 discriminator 1 view .LVU788
 2811 008a 174B     		ldr	r3, .L213+12
 2812              	.LVL184:
3209:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 2813              		.loc 1 3209 50 discriminator 1 view .LVU789
 2814 008c 1B68     		ldr	r3, [r3]
 2815 008e DB6A     		ldr	r3, [r3, #44]
3209:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 2816              		.loc 1 3209 7 discriminator 1 view .LVU790
 2817 0090 9A42     		cmp	r2, r3
 2818 0092 20D9     		bls	.L207
3214:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2819              		.loc 1 3214 9 is_stmt 1 view .LVU791
 2820              	.LVL185:
3218:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2821              		.loc 1 3218 9 view .LVU792
3218:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2822              		.loc 1 3218 23 is_stmt 0 view .LVU793
 2823 0094 0120     		movs	r0, #1
 2824 0096 154B     		ldr	r3, .L213+16
 2825 0098 1860     		str	r0, [r3]
 2826              	.LVL186:
 2827              	.L198:
3226:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2828              		.loc 1 3226 1 view .LVU794
 2829 009a 5DF8044B 		ldr	r4, [sp], #4
 2830              	.LCFI27:
 2831              		.cfi_restore 4
 2832              		.cfi_def_cfa_offset 0
 2833 009e 7047     		bx	lr
 2834              	.LVL187:
 2835              	.L210:
3180:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 2836              		.loc 1 3180 5 is_stmt 1 view .LVU795
 2837              	.LBB174:
 2838              	.LBI174:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2839              		.loc 2 194 34 view .LVU796
 2840              	.LBB175:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2841              		.loc 2 196 9 view .LVU797
 2842              		.loc 2 198 9 view .LVU798
 2843              		.syntax unified
 2844              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2845 00a0 4FF05003 			mov r3, #80												
 2846 00a4 83F31188 		msr basepri, r3											
 2847 00a8 BFF36F8F 		isb														
 2848 00ac BFF34F8F 		dsb														
 2849              	
 2850              	@ 0 "" 2
 2851              	.LVL188:
 2852              		.thumb
 2853              		.syntax unified
ARM GAS  /tmp/ccjYyDGQ.s 			page 161


 2854              	.L200:
 2855              		.loc 2 198 9 is_stmt 0 view .LVU799
 2856              	.LBE175:
 2857              	.LBE174:
3180:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 2858              		.loc 1 3180 5 is_stmt 1 discriminator 1 view .LVU800
3180:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 2859              		.loc 1 3180 5 discriminator 1 view .LVU801
3180:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 2860              		.loc 1 3180 5 discriminator 1 view .LVU802
 2861 00b0 FEE7     		b	.L200
 2862              	.LVL189:
 2863              	.L211:
 2864              	.LCFI28:
 2865              		.cfi_def_cfa_offset 4
 2866              		.cfi_offset 4, -4
 2867              	.LBB176:
3181:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2868              		.loc 1 3181 5 discriminator 1 view .LVU803
 2869 00b2 196A     		ldr	r1, [r3, #32]
 2870 00b4 5160     		str	r1, [r2, #4]
 2871 00b6 B3E7     		b	.L201
 2872              	.LVL190:
 2873              	.L212:
3181:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2874              		.loc 1 3181 5 is_stmt 0 discriminator 1 view .LVU804
 2875              	.LBE176:
 2876              	.LBB177:
3185:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 2877              		.loc 1 3185 9 is_stmt 1 discriminator 1 view .LVU805
 2878 00b8 D968     		ldr	r1, [r3, #12]
 2879 00ba 5160     		str	r1, [r2, #4]
 2880 00bc C3E7     		b	.L203
 2881              	.LVL191:
 2882              	.L202:
3185:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 2883              		.loc 1 3185 9 is_stmt 0 discriminator 1 view .LVU806
 2884              	.LBE177:
 2885              	.LBB178:
3206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2886              		.loc 1 3206 9 is_stmt 1 view .LVU807
 2887 00be 0C4A     		ldr	r2, .L213+20
 2888 00c0 5168     		ldr	r1, [r2, #4]
 2889              	.LVL192:
3206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2890              		.loc 1 3206 9 view .LVU808
3206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2891              		.loc 1 3206 9 view .LVU809
3206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2892              		.loc 1 3206 9 view .LVU810
 2893 00c2 D961     		str	r1, [r3, #28]
3206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2894              		.loc 1 3206 9 view .LVU811
 2895 00c4 8C68     		ldr	r4, [r1, #8]
 2896 00c6 1C62     		str	r4, [r3, #32]
3206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2897              		.loc 1 3206 9 view .LVU812
ARM GAS  /tmp/ccjYyDGQ.s 			page 162


 2898 00c8 6060     		str	r0, [r4, #4]
3206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2899              		.loc 1 3206 9 view .LVU813
 2900 00ca 8860     		str	r0, [r1, #8]
3206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2901              		.loc 1 3206 9 view .LVU814
 2902 00cc 9A62     		str	r2, [r3, #40]
3206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2903              		.loc 1 3206 9 view .LVU815
 2904 00ce 1168     		ldr	r1, [r2]
 2905              	.LVL193:
3206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2906              		.loc 1 3206 9 is_stmt 0 view .LVU816
 2907 00d0 0131     		adds	r1, r1, #1
 2908 00d2 1160     		str	r1, [r2]
 2909 00d4 D8E7     		b	.L205
 2910              	.LVL194:
 2911              	.L207:
3206:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2912              		.loc 1 3206 9 view .LVU817
 2913              	.LBE178:
3222:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 2914              		.loc 1 3222 17 view .LVU818
 2915 00d6 0020     		movs	r0, #0
 2916              	.LVL195:
3225:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 2917              		.loc 1 3225 5 is_stmt 1 view .LVU819
3225:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 2918              		.loc 1 3225 12 is_stmt 0 view .LVU820
 2919 00d8 DFE7     		b	.L198
 2920              	.L214:
 2921 00da 00BF     		.align	2
 2922              	.L213:
 2923 00dc 00000000 		.word	.LANCHOR15
 2924 00e0 00000000 		.word	.LANCHOR11
 2925 00e4 00000000 		.word	.LANCHOR0
 2926 00e8 00000000 		.word	.LANCHOR8
 2927 00ec 00000000 		.word	.LANCHOR17
 2928 00f0 00000000 		.word	.LANCHOR5
 2929              		.cfi_endproc
 2930              	.LFE23:
 2932              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 2933              		.align	1
 2934              		.global	vTaskRemoveFromUnorderedEventList
 2935              		.syntax unified
 2936              		.thumb
 2937              		.thumb_func
 2939              	vTaskRemoveFromUnorderedEventList:
 2940              	.LVL196:
 2941              	.LFB24:
3231:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 2942              		.loc 1 3231 1 is_stmt 1 view -0
 2943              		.cfi_startproc
 2944              		@ args = 0, pretend = 0, frame = 0
 2945              		@ frame_needed = 0, uses_anonymous_args = 0
 2946              		@ link register save eliminated.
3232:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 163


 2947              		.loc 1 3232 5 view .LVU822
3236:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2948              		.loc 1 3236 5 view .LVU823
 2949 0000 334B     		ldr	r3, .L229
 2950 0002 1B68     		ldr	r3, [r3]
 2951 0004 43B9     		cbnz	r3, .L216
3236:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2952              		.loc 1 3236 5 view .LVU824
 2953              	.LBB179:
 2954              	.LBI179:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2955              		.loc 2 194 34 view .LVU825
 2956              	.LBB180:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2957              		.loc 2 196 9 view .LVU826
 2958              		.loc 2 198 9 view .LVU827
 2959              		.syntax unified
 2960              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2961 0006 4FF05003 			mov r3, #80												
 2962 000a 83F31188 		msr basepri, r3											
 2963 000e BFF36F8F 		isb														
 2964 0012 BFF34F8F 		dsb														
 2965              	
 2966              	@ 0 "" 2
 2967              	.LVL197:
 2968              		.thumb
 2969              		.syntax unified
 2970              	.L217:
 2971              		.loc 2 198 9 is_stmt 0 view .LVU828
 2972              	.LBE180:
 2973              	.LBE179:
3236:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2974              		.loc 1 3236 5 is_stmt 1 discriminator 1 view .LVU829
3236:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2975              		.loc 1 3236 5 discriminator 1 view .LVU830
3236:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2976              		.loc 1 3236 5 discriminator 1 view .LVU831
 2977 0016 FEE7     		b	.L217
 2978              	.L216:
3236:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2979              		.loc 1 3236 52 discriminator 2 view .LVU832
3239:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2980              		.loc 1 3239 5 discriminator 2 view .LVU833
 2981 0018 41F00041 		orr	r1, r1, #-2147483648
 2982              	.LVL198:
3239:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2983              		.loc 1 3239 5 is_stmt 0 discriminator 2 view .LVU834
 2984 001c 0160     		str	r1, [r0]
3243:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 2985              		.loc 1 3243 5 is_stmt 1 discriminator 2 view .LVU835
3243:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 2986              		.loc 1 3243 20 is_stmt 0 discriminator 2 view .LVU836
 2987 001e C268     		ldr	r2, [r0, #12]
 2988              	.LVL199:
3244:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 2989              		.loc 1 3244 5 is_stmt 1 discriminator 2 view .LVU837
 2990 0020 002A     		cmp	r2, #0
ARM GAS  /tmp/ccjYyDGQ.s 			page 164


 2991 0022 46D0     		beq	.L226
3231:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 2992              		.loc 1 3231 1 is_stmt 0 discriminator 2 view .LVU838
 2993 0024 10B4     		push	{r4}
 2994              	.LCFI29:
 2995              		.cfi_def_cfa_offset 4
 2996              		.cfi_offset 4, -4
3244:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 2997              		.loc 1 3244 35 is_stmt 1 discriminator 2 view .LVU839
 2998              	.LBB181:
3245:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 2999              		.loc 1 3245 5 discriminator 2 view .LVU840
 3000 0026 0369     		ldr	r3, [r0, #16]
 3001              	.LVL200:
3245:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3002              		.loc 1 3245 5 discriminator 2 view .LVU841
 3003 0028 4168     		ldr	r1, [r0, #4]
 3004 002a 8468     		ldr	r4, [r0, #8]
 3005 002c 8C60     		str	r4, [r1, #8]
3245:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3006              		.loc 1 3245 5 discriminator 2 view .LVU842
 3007 002e 8168     		ldr	r1, [r0, #8]
 3008 0030 4468     		ldr	r4, [r0, #4]
 3009 0032 4C60     		str	r4, [r1, #4]
3245:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3010              		.loc 1 3245 5 discriminator 2 view .LVU843
 3011 0034 5968     		ldr	r1, [r3, #4]
 3012 0036 8142     		cmp	r1, r0
 3013 0038 44D0     		beq	.L227
 3014              	.L220:
3245:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3015              		.loc 1 3245 5 discriminator 3 view .LVU844
 3016 003a 0021     		movs	r1, #0
 3017 003c 0161     		str	r1, [r0, #16]
3245:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3018              		.loc 1 3245 5 discriminator 3 view .LVU845
 3019 003e 1968     		ldr	r1, [r3]
 3020 0040 0139     		subs	r1, r1, #1
 3021 0042 1960     		str	r1, [r3]
 3022              	.LBE181:
3245:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3023              		.loc 1 3245 39 discriminator 3 view .LVU846
 3024              	.LBB182:
3264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 3025              		.loc 1 3264 5 discriminator 3 view .LVU847
 3026 0044 5369     		ldr	r3, [r2, #20]
 3027              	.LVL201:
3264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 3028              		.loc 1 3264 5 discriminator 3 view .LVU848
 3029 0046 9068     		ldr	r0, [r2, #8]
 3030              	.LVL202:
3264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 3031              		.loc 1 3264 5 is_stmt 0 discriminator 3 view .LVU849
 3032 0048 D168     		ldr	r1, [r2, #12]
 3033 004a 8160     		str	r1, [r0, #8]
3264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 3034              		.loc 1 3264 5 is_stmt 1 discriminator 3 view .LVU850
ARM GAS  /tmp/ccjYyDGQ.s 			page 165


 3035 004c 9068     		ldr	r0, [r2, #8]
 3036 004e 4860     		str	r0, [r1, #4]
3264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 3037              		.loc 1 3264 5 discriminator 3 view .LVU851
 3038 0050 5968     		ldr	r1, [r3, #4]
 3039 0052 101D     		adds	r0, r2, #4
 3040 0054 8142     		cmp	r1, r0
 3041 0056 38D0     		beq	.L228
 3042              	.L221:
3264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 3043              		.loc 1 3264 5 discriminator 3 view .LVU852
 3044 0058 0021     		movs	r1, #0
 3045 005a 5161     		str	r1, [r2, #20]
3264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 3046              		.loc 1 3264 5 discriminator 3 view .LVU853
 3047 005c 1968     		ldr	r1, [r3]
 3048 005e 0139     		subs	r1, r1, #1
 3049 0060 1960     		str	r1, [r3]
 3050              	.LBE182:
3264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 3051              		.loc 1 3264 59 discriminator 3 view .LVU854
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3052              		.loc 1 3265 5 discriminator 3 view .LVU855
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3053              		.loc 1 3265 5 discriminator 3 view .LVU856
 3054 0062 D36A     		ldr	r3, [r2, #44]
 3055              	.LVL203:
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3056              		.loc 1 3265 5 is_stmt 0 discriminator 3 view .LVU857
 3057 0064 1B49     		ldr	r1, .L229+4
 3058 0066 0968     		ldr	r1, [r1]
 3059 0068 8B42     		cmp	r3, r1
 3060 006a 01D9     		bls	.L222
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3061              		.loc 1 3265 5 is_stmt 1 discriminator 1 view .LVU858
 3062 006c 1949     		ldr	r1, .L229+4
 3063 006e 0B60     		str	r3, [r1]
 3064              	.L222:
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3065              		.loc 1 3265 5 discriminator 3 view .LVU859
 3066              	.LBB183:
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3067              		.loc 1 3265 5 discriminator 3 view .LVU860
 3068 0070 1949     		ldr	r1, .L229+8
 3069 0072 03EB8303 		add	r3, r3, r3, lsl #2
 3070 0076 01EB8303 		add	r3, r1, r3, lsl #2
 3071 007a 5B68     		ldr	r3, [r3, #4]
 3072              	.LVL204:
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3073              		.loc 1 3265 5 discriminator 3 view .LVU861
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3074              		.loc 1 3265 5 discriminator 3 view .LVU862
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3075              		.loc 1 3265 5 discriminator 3 view .LVU863
 3076 007c 9360     		str	r3, [r2, #8]
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3077              		.loc 1 3265 5 discriminator 3 view .LVU864
ARM GAS  /tmp/ccjYyDGQ.s 			page 166


 3078 007e 9C68     		ldr	r4, [r3, #8]
 3079 0080 D460     		str	r4, [r2, #12]
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3080              		.loc 1 3265 5 discriminator 3 view .LVU865
 3081 0082 6060     		str	r0, [r4, #4]
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3082              		.loc 1 3265 5 discriminator 3 view .LVU866
 3083 0084 9860     		str	r0, [r3, #8]
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3084              		.loc 1 3265 5 discriminator 3 view .LVU867
 3085 0086 D36A     		ldr	r3, [r2, #44]
 3086              	.LVL205:
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3087              		.loc 1 3265 5 is_stmt 0 discriminator 3 view .LVU868
 3088 0088 03EB8300 		add	r0, r3, r3, lsl #2
 3089 008c 8400     		lsls	r4, r0, #2
 3090 008e 01EB8000 		add	r0, r1, r0, lsl #2
 3091 0092 5061     		str	r0, [r2, #20]
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3092              		.loc 1 3265 5 is_stmt 1 discriminator 3 view .LVU869
 3093 0094 0859     		ldr	r0, [r1, r4]
 3094 0096 0130     		adds	r0, r0, #1
 3095 0098 0851     		str	r0, [r1, r4]
 3096              	.LBE183:
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3097              		.loc 1 3265 5 discriminator 3 view .LVU870
3265:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3098              		.loc 1 3265 44 discriminator 3 view .LVU871
3267:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 3099              		.loc 1 3267 5 discriminator 3 view .LVU872
3267:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 3100              		.loc 1 3267 23 is_stmt 0 discriminator 3 view .LVU873
 3101 009a D26A     		ldr	r2, [r2, #44]
 3102              	.LVL206:
3267:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 3103              		.loc 1 3267 50 discriminator 3 view .LVU874
 3104 009c 0F4B     		ldr	r3, .L229+12
 3105 009e 1B68     		ldr	r3, [r3]
 3106 00a0 DB6A     		ldr	r3, [r3, #44]
3267:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 3107              		.loc 1 3267 7 discriminator 3 view .LVU875
 3108 00a2 9A42     		cmp	r2, r3
 3109 00a4 02D9     		bls	.L215
3273:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 3110              		.loc 1 3273 9 is_stmt 1 view .LVU876
3273:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 3111              		.loc 1 3273 23 is_stmt 0 view .LVU877
 3112 00a6 0E4B     		ldr	r3, .L229+16
 3113 00a8 0122     		movs	r2, #1
 3114 00aa 1A60     		str	r2, [r3]
 3115              	.L215:
3275:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3116              		.loc 1 3275 1 view .LVU878
 3117 00ac 5DF8044B 		ldr	r4, [sp], #4
 3118              	.LCFI30:
 3119              		.cfi_restore 4
 3120              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccjYyDGQ.s 			page 167


 3121 00b0 7047     		bx	lr
 3122              	.LVL207:
 3123              	.L226:
3244:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 3124              		.loc 1 3244 5 is_stmt 1 view .LVU879
 3125              	.LBB184:
 3126              	.LBI184:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3127              		.loc 2 194 34 view .LVU880
 3128              	.LBB185:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3129              		.loc 2 196 9 view .LVU881
 3130              		.loc 2 198 9 view .LVU882
 3131              		.syntax unified
 3132              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3133 00b2 4FF05003 			mov r3, #80												
 3134 00b6 83F31188 		msr basepri, r3											
 3135 00ba BFF36F8F 		isb														
 3136 00be BFF34F8F 		dsb														
 3137              	
 3138              	@ 0 "" 2
 3139              	.LVL208:
 3140              		.thumb
 3141              		.syntax unified
 3142              	.L219:
 3143              		.loc 2 198 9 is_stmt 0 view .LVU883
 3144              	.LBE185:
 3145              	.LBE184:
3244:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 3146              		.loc 1 3244 5 is_stmt 1 discriminator 2 view .LVU884
3244:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 3147              		.loc 1 3244 5 discriminator 2 view .LVU885
3244:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 3148              		.loc 1 3244 5 discriminator 2 view .LVU886
 3149 00c2 FEE7     		b	.L219
 3150              	.LVL209:
 3151              	.L227:
 3152              	.LCFI31:
 3153              		.cfi_def_cfa_offset 4
 3154              		.cfi_offset 4, -4
 3155              	.LBB186:
3245:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3156              		.loc 1 3245 5 discriminator 1 view .LVU887
 3157 00c4 8168     		ldr	r1, [r0, #8]
 3158 00c6 5960     		str	r1, [r3, #4]
 3159 00c8 B7E7     		b	.L220
 3160              	.LVL210:
 3161              	.L228:
3245:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3162              		.loc 1 3245 5 is_stmt 0 discriminator 1 view .LVU888
 3163              	.LBE186:
 3164              	.LBB187:
3264:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 3165              		.loc 1 3264 5 is_stmt 1 discriminator 1 view .LVU889
 3166 00ca D168     		ldr	r1, [r2, #12]
 3167 00cc 5960     		str	r1, [r3, #4]
 3168 00ce C3E7     		b	.L221
ARM GAS  /tmp/ccjYyDGQ.s 			page 168


 3169              	.L230:
 3170              		.align	2
 3171              	.L229:
 3172 00d0 00000000 		.word	.LANCHOR15
 3173 00d4 00000000 		.word	.LANCHOR11
 3174 00d8 00000000 		.word	.LANCHOR0
 3175 00dc 00000000 		.word	.LANCHOR8
 3176 00e0 00000000 		.word	.LANCHOR17
 3177              	.LBE187:
 3178              		.cfi_endproc
 3179              	.LFE24:
 3181              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3182              		.align	1
 3183              		.global	vTaskSetTimeOutState
 3184              		.syntax unified
 3185              		.thumb
 3186              		.thumb_func
 3188              	vTaskSetTimeOutState:
 3189              	.LVL211:
 3190              	.LFB25:
3279:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
 3191              		.loc 1 3279 1 view -0
 3192              		.cfi_startproc
 3193              		@ args = 0, pretend = 0, frame = 0
 3194              		@ frame_needed = 0, uses_anonymous_args = 0
3280:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 3195              		.loc 1 3280 5 view .LVU891
 3196 0000 60B1     		cbz	r0, .L236
3279:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
 3197              		.loc 1 3279 1 is_stmt 0 discriminator 2 view .LVU892
 3198 0002 10B5     		push	{r4, lr}
 3199              	.LCFI32:
 3200              		.cfi_def_cfa_offset 8
 3201              		.cfi_offset 4, -8
 3202              		.cfi_offset 14, -4
 3203 0004 0446     		mov	r4, r0
3280:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 3204              		.loc 1 3280 30 is_stmt 1 discriminator 2 view .LVU893
3281:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 3205              		.loc 1 3281 5 discriminator 2 view .LVU894
 3206 0006 FFF7FEFF 		bl	vPortEnterCritical
 3207              	.LVL212:
3283:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
 3208              		.loc 1 3283 9 discriminator 2 view .LVU895
3283:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
 3209              		.loc 1 3283 35 is_stmt 0 discriminator 2 view .LVU896
 3210 000a 094B     		ldr	r3, .L237
 3211 000c 1B68     		ldr	r3, [r3]
 3212 000e 2360     		str	r3, [r4]
3284:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 3213              		.loc 1 3284 9 is_stmt 1 discriminator 2 view .LVU897
3284:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 3214              		.loc 1 3284 36 is_stmt 0 discriminator 2 view .LVU898
 3215 0010 084B     		ldr	r3, .L237+4
 3216 0012 1B68     		ldr	r3, [r3]
 3217 0014 6360     		str	r3, [r4, #4]
3286:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
ARM GAS  /tmp/ccjYyDGQ.s 			page 169


 3218              		.loc 1 3286 5 is_stmt 1 discriminator 2 view .LVU899
 3219 0016 FFF7FEFF 		bl	vPortExitCritical
 3220              	.LVL213:
3287:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3221              		.loc 1 3287 1 is_stmt 0 discriminator 2 view .LVU900
 3222 001a 10BD     		pop	{r4, pc}
 3223              	.LVL214:
 3224              	.L236:
 3225              	.LCFI33:
 3226              		.cfi_def_cfa_offset 0
 3227              		.cfi_restore 4
 3228              		.cfi_restore 14
3280:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 3229              		.loc 1 3280 5 is_stmt 1 view .LVU901
 3230              	.LBB188:
 3231              	.LBI188:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3232              		.loc 2 194 34 view .LVU902
 3233              	.LBB189:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3234              		.loc 2 196 9 view .LVU903
 3235              		.loc 2 198 9 view .LVU904
 3236              		.syntax unified
 3237              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3238 001c 4FF05003 			mov r3, #80												
 3239 0020 83F31188 		msr basepri, r3											
 3240 0024 BFF36F8F 		isb														
 3241 0028 BFF34F8F 		dsb														
 3242              	
 3243              	@ 0 "" 2
 3244              	.LVL215:
 3245              		.thumb
 3246              		.syntax unified
 3247              	.L233:
 3248              		.loc 2 198 9 is_stmt 0 view .LVU905
 3249              	.LBE189:
 3250              	.LBE188:
3280:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 3251              		.loc 1 3280 5 is_stmt 1 discriminator 1 view .LVU906
3280:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 3252              		.loc 1 3280 5 discriminator 1 view .LVU907
3280:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 3253              		.loc 1 3280 5 discriminator 1 view .LVU908
 3254 002c FEE7     		b	.L233
 3255              	.L238:
 3256 002e 00BF     		.align	2
 3257              	.L237:
 3258 0030 00000000 		.word	.LANCHOR16
 3259 0034 00000000 		.word	.LANCHOR12
 3260              		.cfi_endproc
 3261              	.LFE25:
 3263              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3264              		.align	1
 3265              		.global	vTaskInternalSetTimeOutState
 3266              		.syntax unified
 3267              		.thumb
 3268              		.thumb_func
ARM GAS  /tmp/ccjYyDGQ.s 			page 170


 3270              	vTaskInternalSetTimeOutState:
 3271              	.LVL216:
 3272              	.LFB26:
3291:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     /* For internal use only as it does not use a critical section. */
 3273              		.loc 1 3291 1 view -0
 3274              		.cfi_startproc
 3275              		@ args = 0, pretend = 0, frame = 0
 3276              		@ frame_needed = 0, uses_anonymous_args = 0
 3277              		@ link register save eliminated.
3293:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
 3278              		.loc 1 3293 5 view .LVU910
3293:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
 3279              		.loc 1 3293 31 is_stmt 0 view .LVU911
 3280 0000 034B     		ldr	r3, .L240
 3281 0002 1B68     		ldr	r3, [r3]
 3282 0004 0360     		str	r3, [r0]
3294:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 3283              		.loc 1 3294 5 is_stmt 1 view .LVU912
3294:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 3284              		.loc 1 3294 32 is_stmt 0 view .LVU913
 3285 0006 034B     		ldr	r3, .L240+4
 3286 0008 1B68     		ldr	r3, [r3]
 3287 000a 4360     		str	r3, [r0, #4]
3295:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3288              		.loc 1 3295 1 view .LVU914
 3289 000c 7047     		bx	lr
 3290              	.L241:
 3291 000e 00BF     		.align	2
 3292              	.L240:
 3293 0010 00000000 		.word	.LANCHOR16
 3294 0014 00000000 		.word	.LANCHOR12
 3295              		.cfi_endproc
 3296              	.LFE26:
 3298              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3299              		.align	1
 3300              		.global	xTaskCheckForTimeOut
 3301              		.syntax unified
 3302              		.thumb
 3303              		.thumb_func
 3305              	xTaskCheckForTimeOut:
 3306              	.LVL217:
 3307              	.LFB27:
3300:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 3308              		.loc 1 3300 1 is_stmt 1 view -0
 3309              		.cfi_startproc
 3310              		@ args = 0, pretend = 0, frame = 0
 3311              		@ frame_needed = 0, uses_anonymous_args = 0
3300:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 3312              		.loc 1 3300 1 is_stmt 0 view .LVU916
 3313 0000 38B5     		push	{r3, r4, r5, lr}
 3314              	.LCFI34:
 3315              		.cfi_def_cfa_offset 16
 3316              		.cfi_offset 3, -16
 3317              		.cfi_offset 4, -12
 3318              		.cfi_offset 5, -8
 3319              		.cfi_offset 14, -4
3301:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 171


 3320              		.loc 1 3301 5 is_stmt 1 view .LVU917
3303:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 3321              		.loc 1 3303 5 view .LVU918
 3322 0002 A0B1     		cbz	r0, .L251
 3323 0004 0C46     		mov	r4, r1
 3324 0006 0546     		mov	r5, r0
3303:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 3325              		.loc 1 3303 30 discriminator 2 view .LVU919
3304:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3326              		.loc 1 3304 5 discriminator 2 view .LVU920
 3327 0008 D1B1     		cbz	r1, .L252
3304:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3328              		.loc 1 3304 34 discriminator 2 view .LVU921
3306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     {
 3329              		.loc 1 3306 5 discriminator 2 view .LVU922
 3330 000a FFF7FEFF 		bl	vPortEnterCritical
 3331              	.LVL218:
 3332              	.LBB190:
3309:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3333              		.loc 1 3309 9 discriminator 2 view .LVU923
3309:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3334              		.loc 1 3309 26 is_stmt 0 discriminator 2 view .LVU924
 3335 000e 1A4B     		ldr	r3, .L254
 3336 0010 1A68     		ldr	r2, [r3]
 3337              	.LVL219:
3310:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3338              		.loc 1 3310 9 is_stmt 1 discriminator 2 view .LVU925
3310:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3339              		.loc 1 3310 68 is_stmt 0 discriminator 2 view .LVU926
 3340 0012 6B68     		ldr	r3, [r5, #4]
3310:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3341              		.loc 1 3310 26 discriminator 2 view .LVU927
 3342 0014 A2EB030C 		sub	ip, r2, r3
 3343              	.LVL220:
3334:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3344              		.loc 1 3334 9 is_stmt 1 discriminator 2 view .LVU928
3334:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3345              		.loc 1 3334 43 is_stmt 0 discriminator 2 view .LVU929
 3346 0018 2868     		ldr	r0, [r5]
3334:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3347              		.loc 1 3334 31 discriminator 2 view .LVU930
 3348 001a 1849     		ldr	r1, .L254+4
 3349 001c 0968     		ldr	r1, [r1]
3334:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3350              		.loc 1 3334 11 discriminator 2 view .LVU931
 3351 001e 8842     		cmp	r0, r1
 3352 0020 17D0     		beq	.L247
3334:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3353              		.loc 1 3334 62 discriminator 1 view .LVU932
 3354 0022 9342     		cmp	r3, r2
 3355 0024 15D8     		bhi	.L247
3341:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
 3356              		.loc 1 3341 13 is_stmt 1 view .LVU933
 3357              	.LVL221:
3342:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3358              		.loc 1 3342 13 view .LVU934
3342:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
ARM GAS  /tmp/ccjYyDGQ.s 			page 172


 3359              		.loc 1 3342 28 is_stmt 0 view .LVU935
 3360 0026 0023     		movs	r3, #0
 3361 0028 2360     		str	r3, [r4]
3341:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
 3362              		.loc 1 3341 21 view .LVU936
 3363 002a 0124     		movs	r4, #1
 3364              	.LVL222:
3342:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3365              		.loc 1 3342 28 view .LVU937
 3366 002c 17E0     		b	.L248
 3367              	.LVL223:
 3368              	.L251:
3342:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3369              		.loc 1 3342 28 view .LVU938
 3370              	.LBE190:
3303:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 3371              		.loc 1 3303 5 is_stmt 1 view .LVU939
 3372              	.LBB191:
 3373              	.LBI191:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3374              		.loc 2 194 34 view .LVU940
 3375              	.LBB192:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3376              		.loc 2 196 9 view .LVU941
 3377              		.loc 2 198 9 view .LVU942
 3378              		.syntax unified
 3379              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3380 002e 4FF05003 			mov r3, #80												
 3381 0032 83F31188 		msr basepri, r3											
 3382 0036 BFF36F8F 		isb														
 3383 003a BFF34F8F 		dsb														
 3384              	
 3385              	@ 0 "" 2
 3386              	.LVL224:
 3387              		.thumb
 3388              		.syntax unified
 3389              	.L244:
 3390              		.loc 2 198 9 is_stmt 0 view .LVU943
 3391              	.LBE192:
 3392              	.LBE191:
3303:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 3393              		.loc 1 3303 5 is_stmt 1 discriminator 1 view .LVU944
3303:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 3394              		.loc 1 3303 5 discriminator 1 view .LVU945
3303:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 3395              		.loc 1 3303 5 discriminator 1 view .LVU946
 3396 003e FEE7     		b	.L244
 3397              	.L252:
3304:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3398              		.loc 1 3304 5 view .LVU947
 3399              	.LBB193:
 3400              	.LBI193:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3401              		.loc 2 194 34 view .LVU948
 3402              	.LBB194:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3403              		.loc 2 196 9 view .LVU949
ARM GAS  /tmp/ccjYyDGQ.s 			page 173


 3404              		.loc 2 198 9 view .LVU950
 3405              		.syntax unified
 3406              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3407 0040 4FF05003 			mov r3, #80												
 3408 0044 83F31188 		msr basepri, r3											
 3409 0048 BFF36F8F 		isb														
 3410 004c BFF34F8F 		dsb														
 3411              	
 3412              	@ 0 "" 2
 3413              	.LVL225:
 3414              		.thumb
 3415              		.syntax unified
 3416              	.L246:
 3417              		.loc 2 198 9 is_stmt 0 view .LVU951
 3418              	.LBE194:
 3419              	.LBE193:
3304:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3420              		.loc 1 3304 5 is_stmt 1 discriminator 2 view .LVU952
3304:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3421              		.loc 1 3304 5 discriminator 2 view .LVU953
3304:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3422              		.loc 1 3304 5 discriminator 2 view .LVU954
 3423 0050 FEE7     		b	.L246
 3424              	.LVL226:
 3425              	.L247:
 3426              	.LBB195:
3344:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3427              		.loc 1 3344 14 view .LVU955
3344:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3428              		.loc 1 3344 33 is_stmt 0 view .LVU956
 3429 0052 2168     		ldr	r1, [r4]
3344:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3430              		.loc 1 3344 16 view .LVU957
 3431 0054 6145     		cmp	r1, ip
 3432 0056 06D8     		bhi	.L253
3353:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
 3433              		.loc 1 3353 13 is_stmt 1 view .LVU958
3353:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
 3434              		.loc 1 3353 28 is_stmt 0 view .LVU959
 3435 0058 0023     		movs	r3, #0
 3436 005a 2360     		str	r3, [r4]
3354:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3437              		.loc 1 3354 13 is_stmt 1 view .LVU960
 3438              	.LVL227:
3354:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3439              		.loc 1 3354 21 is_stmt 0 view .LVU961
 3440 005c 0124     		movs	r4, #1
 3441              	.LVL228:
 3442              	.L248:
3354:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3443              		.loc 1 3354 21 view .LVU962
 3444              	.LBE195:
3357:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3445              		.loc 1 3357 5 is_stmt 1 view .LVU963
 3446 005e FFF7FEFF 		bl	vPortExitCritical
 3447              	.LVL229:
3359:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
ARM GAS  /tmp/ccjYyDGQ.s 			page 174


 3448              		.loc 1 3359 5 view .LVU964
3360:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3449              		.loc 1 3360 1 is_stmt 0 view .LVU965
 3450 0062 2046     		mov	r0, r4
 3451 0064 38BD     		pop	{r3, r4, r5, pc}
 3452              	.LVL230:
 3453              	.L253:
 3454              	.LBB196:
3347:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
 3455              		.loc 1 3347 13 is_stmt 1 view .LVU966
3347:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
 3456              		.loc 1 3347 28 is_stmt 0 view .LVU967
 3457 0066 9B1A     		subs	r3, r3, r2
 3458 0068 0B44     		add	r3, r3, r1
 3459 006a 2360     		str	r3, [r4]
3348:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             xReturn = pdFALSE;
 3460              		.loc 1 3348 13 is_stmt 1 view .LVU968
 3461 006c 2846     		mov	r0, r5
 3462 006e FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3463              	.LVL231:
3349:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3464              		.loc 1 3349 13 view .LVU969
3349:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3465              		.loc 1 3349 21 is_stmt 0 view .LVU970
 3466 0072 0024     		movs	r4, #0
 3467              	.LVL232:
3349:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3468              		.loc 1 3349 21 view .LVU971
 3469 0074 F3E7     		b	.L248
 3470              	.L255:
 3471 0076 00BF     		.align	2
 3472              	.L254:
 3473 0078 00000000 		.word	.LANCHOR12
 3474 007c 00000000 		.word	.LANCHOR16
 3475              	.LBE196:
 3476              		.cfi_endproc
 3477              	.LFE27:
 3479              		.section	.text.vTaskMissedYield,"ax",%progbits
 3480              		.align	1
 3481              		.global	vTaskMissedYield
 3482              		.syntax unified
 3483              		.thumb
 3484              		.thumb_func
 3486              	vTaskMissedYield:
 3487              	.LFB28:
3364:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     xYieldPending = pdTRUE;
 3488              		.loc 1 3364 1 is_stmt 1 view -0
 3489              		.cfi_startproc
 3490              		@ args = 0, pretend = 0, frame = 0
 3491              		@ frame_needed = 0, uses_anonymous_args = 0
 3492              		@ link register save eliminated.
3365:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 3493              		.loc 1 3365 5 view .LVU973
3365:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 3494              		.loc 1 3365 19 is_stmt 0 view .LVU974
 3495 0000 014B     		ldr	r3, .L257
 3496 0002 0122     		movs	r2, #1
ARM GAS  /tmp/ccjYyDGQ.s 			page 175


 3497 0004 1A60     		str	r2, [r3]
3366:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3498              		.loc 1 3366 1 view .LVU975
 3499 0006 7047     		bx	lr
 3500              	.L258:
 3501              		.align	2
 3502              	.L257:
 3503 0008 00000000 		.word	.LANCHOR17
 3504              		.cfi_endproc
 3505              	.LFE28:
 3507              		.section	.text.uxTaskGetTaskNumber,"ax",%progbits
 3508              		.align	1
 3509              		.global	uxTaskGetTaskNumber
 3510              		.syntax unified
 3511              		.thumb
 3512              		.thumb_func
 3514              	uxTaskGetTaskNumber:
 3515              	.LVL233:
 3516              	.LFB29:
3372:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
 3517              		.loc 1 3372 5 is_stmt 1 view -0
 3518              		.cfi_startproc
 3519              		@ args = 0, pretend = 0, frame = 0
 3520              		@ frame_needed = 0, uses_anonymous_args = 0
 3521              		@ link register save eliminated.
3373:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 3522              		.loc 1 3373 9 view .LVU977
3374:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3523              		.loc 1 3374 9 view .LVU978
3376:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3524              		.loc 1 3376 9 view .LVU979
3376:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3525              		.loc 1 3376 11 is_stmt 0 view .LVU980
 3526 0000 08B1     		cbz	r0, .L261
3378:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxTaskNumber;
 3527              		.loc 1 3378 13 is_stmt 1 view .LVU981
 3528              	.LVL234:
3379:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3529              		.loc 1 3379 13 view .LVU982
3379:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3530              		.loc 1 3379 22 is_stmt 0 view .LVU983
 3531 0002 006C     		ldr	r0, [r0, #64]
 3532              	.LVL235:
3379:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3533              		.loc 1 3379 22 view .LVU984
 3534 0004 7047     		bx	lr
 3535              	.LVL236:
 3536              	.L261:
3383:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3537              		.loc 1 3383 22 view .LVU985
 3538 0006 0020     		movs	r0, #0
 3539              	.LVL237:
3386:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 3540              		.loc 1 3386 9 is_stmt 1 view .LVU986
3387:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3541              		.loc 1 3387 5 is_stmt 0 view .LVU987
 3542 0008 7047     		bx	lr
ARM GAS  /tmp/ccjYyDGQ.s 			page 176


 3543              		.cfi_endproc
 3544              	.LFE29:
 3546              		.section	.text.vTaskSetTaskNumber,"ax",%progbits
 3547              		.align	1
 3548              		.global	vTaskSetTaskNumber
 3549              		.syntax unified
 3550              		.thumb
 3551              		.thumb_func
 3553              	vTaskSetTaskNumber:
 3554              	.LVL238:
 3555              	.LFB30:
3396:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 3556              		.loc 1 3396 5 is_stmt 1 view -0
 3557              		.cfi_startproc
 3558              		@ args = 0, pretend = 0, frame = 0
 3559              		@ frame_needed = 0, uses_anonymous_args = 0
 3560              		@ link register save eliminated.
3397:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3561              		.loc 1 3397 9 view .LVU989
3399:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3562              		.loc 1 3399 9 view .LVU990
3399:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3563              		.loc 1 3399 11 is_stmt 0 view .LVU991
 3564 0000 00B1     		cbz	r0, .L262
3401:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB->uxTaskNumber = uxHandle;
 3565              		.loc 1 3401 13 is_stmt 1 view .LVU992
 3566              	.LVL239:
3402:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3567              		.loc 1 3402 13 view .LVU993
3402:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3568              		.loc 1 3402 33 is_stmt 0 view .LVU994
 3569 0002 0164     		str	r1, [r0, #64]
 3570              	.LVL240:
 3571              	.L262:
3404:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3572              		.loc 1 3404 5 view .LVU995
 3573 0004 7047     		bx	lr
 3574              		.cfi_endproc
 3575              	.LFE30:
 3577              		.section	.text.vTaskGetInfo,"ax",%progbits
 3578              		.align	1
 3579              		.global	vTaskGetInfo
 3580              		.syntax unified
 3581              		.thumb
 3582              		.thumb_func
 3584              	vTaskGetInfo:
 3585              	.LVL241:
 3586              	.LFB34:
3715:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 3587              		.loc 1 3715 5 is_stmt 1 view -0
 3588              		.cfi_startproc
 3589              		@ args = 0, pretend = 0, frame = 0
 3590              		@ frame_needed = 0, uses_anonymous_args = 0
3715:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 3591              		.loc 1 3715 5 is_stmt 0 view .LVU997
 3592 0000 70B5     		push	{r4, r5, r6, lr}
 3593              	.LCFI35:
ARM GAS  /tmp/ccjYyDGQ.s 			page 177


 3594              		.cfi_def_cfa_offset 16
 3595              		.cfi_offset 4, -16
 3596              		.cfi_offset 5, -12
 3597              		.cfi_offset 6, -8
 3598              		.cfi_offset 14, -4
 3599 0002 0C46     		mov	r4, r1
 3600 0004 1646     		mov	r6, r2
3716:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3601              		.loc 1 3716 9 is_stmt 1 view .LVU998
3719:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3602              		.loc 1 3719 9 view .LVU999
3719:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3603              		.loc 1 3719 17 is_stmt 0 view .LVU1000
 3604 0006 0546     		mov	r5, r0
 3605 0008 C0B1     		cbz	r0, .L272
 3606              	.LVL242:
 3607              	.L265:
3721:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
 3608              		.loc 1 3721 9 is_stmt 1 discriminator 4 view .LVU1001
3721:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
 3609              		.loc 1 3721 31 is_stmt 0 discriminator 4 view .LVU1002
 3610 000a 2560     		str	r5, [r4]
3722:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 3611              		.loc 1 3722 9 is_stmt 1 discriminator 4 view .LVU1003
3722:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 3612              		.loc 1 3722 53 is_stmt 0 discriminator 4 view .LVU1004
 3613 000c 05F13402 		add	r2, r5, #52
3722:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 3614              		.loc 1 3722 34 discriminator 4 view .LVU1005
 3615 0010 6260     		str	r2, [r4, #4]
3723:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
 3616              		.loc 1 3723 9 is_stmt 1 discriminator 4 view .LVU1006
3723:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
 3617              		.loc 1 3723 48 is_stmt 0 discriminator 4 view .LVU1007
 3618 0012 EA6A     		ldr	r2, [r5, #44]
3723:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
 3619              		.loc 1 3723 41 discriminator 4 view .LVU1008
 3620 0014 2261     		str	r2, [r4, #16]
3724:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( ( portSTACK_GROWTH > 0 ) && ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 3621              		.loc 1 3724 9 is_stmt 1 discriminator 4 view .LVU1009
3724:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( ( portSTACK_GROWTH > 0 ) && ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 3622              		.loc 1 3724 42 is_stmt 0 discriminator 4 view .LVU1010
 3623 0016 2A6B     		ldr	r2, [r5, #48]
3724:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         #if ( ( portSTACK_GROWTH > 0 ) && ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 3624              		.loc 1 3724 35 discriminator 4 view .LVU1011
 3625 0018 E261     		str	r2, [r4, #28]
3729:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3626              		.loc 1 3729 9 is_stmt 1 discriminator 4 view .LVU1012
3729:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3627              		.loc 1 3729 42 is_stmt 0 discriminator 4 view .LVU1013
 3628 001a EA6B     		ldr	r2, [r5, #60]
3729:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3629              		.loc 1 3729 35 discriminator 4 view .LVU1014
 3630 001c A260     		str	r2, [r4, #8]
3733:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3631              		.loc 1 3733 13 is_stmt 1 discriminator 4 view .LVU1015
3733:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
ARM GAS  /tmp/ccjYyDGQ.s 			page 178


 3632              		.loc 1 3733 49 is_stmt 0 discriminator 4 view .LVU1016
 3633 001e 6A6C     		ldr	r2, [r5, #68]
3733:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3634              		.loc 1 3733 42 discriminator 4 view .LVU1017
 3635 0020 6261     		str	r2, [r4, #20]
3747:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3636              		.loc 1 3747 13 is_stmt 1 discriminator 4 view .LVU1018
3747:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3637              		.loc 1 3747 44 is_stmt 0 discriminator 4 view .LVU1019
 3638 0022 0022     		movs	r2, #0
 3639 0024 A261     		str	r2, [r4, #24]
3754:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3640              		.loc 1 3754 9 is_stmt 1 discriminator 4 view .LVU1020
3754:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3641              		.loc 1 3754 11 is_stmt 0 discriminator 4 view .LVU1021
 3642 0026 052B     		cmp	r3, #5
 3643 0028 0ED0     		beq	.L266
3756:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 3644              		.loc 1 3756 13 is_stmt 1 view .LVU1022
3756:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 3645              		.loc 1 3756 23 is_stmt 0 view .LVU1023
 3646 002a 0C4A     		ldr	r2, .L275
 3647 002c 1268     		ldr	r2, [r2]
3756:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 3648              		.loc 1 3756 15 view .LVU1024
 3649 002e AA42     		cmp	r2, r5
 3650 0030 07D0     		beq	.L273
3762:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3651              		.loc 1 3762 17 is_stmt 1 view .LVU1025
3762:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3652              		.loc 1 3762 45 is_stmt 0 view .LVU1026
 3653 0032 2373     		strb	r3, [r4, #12]
 3654              	.LVL243:
 3655              	.L268:
3791:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3656              		.loc 1 3791 9 is_stmt 1 view .LVU1027
3791:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3657              		.loc 1 3791 11 is_stmt 0 view .LVU1028
 3658 0034 6EB9     		cbnz	r6, .L274
3805:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3659              		.loc 1 3805 13 is_stmt 1 view .LVU1029
3805:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3660              		.loc 1 3805 48 is_stmt 0 view .LVU1030
 3661 0036 0023     		movs	r3, #0
 3662 0038 2384     		strh	r3, [r4, #32]	@ movhi
 3663              	.L264:
3807:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3664              		.loc 1 3807 5 view .LVU1031
 3665 003a 70BD     		pop	{r4, r5, r6, pc}
 3666              	.LVL244:
 3667              	.L272:
3719:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3668              		.loc 1 3719 17 discriminator 1 view .LVU1032
 3669 003c 074A     		ldr	r2, .L275
 3670              	.LVL245:
3719:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3671              		.loc 1 3719 17 discriminator 1 view .LVU1033
ARM GAS  /tmp/ccjYyDGQ.s 			page 179


 3672 003e 1568     		ldr	r5, [r2]
 3673              	.LVL246:
3719:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3674              		.loc 1 3719 17 discriminator 1 view .LVU1034
 3675 0040 E3E7     		b	.L265
 3676              	.LVL247:
 3677              	.L273:
3758:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 3678              		.loc 1 3758 17 is_stmt 1 view .LVU1035
3758:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 3679              		.loc 1 3758 45 is_stmt 0 view .LVU1036
 3680 0042 0023     		movs	r3, #0
 3681              	.LVL248:
3758:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 3682              		.loc 1 3758 45 view .LVU1037
 3683 0044 2373     		strb	r3, [r4, #12]
 3684 0046 F5E7     		b	.L268
 3685              	.LVL249:
 3686              	.L266:
3786:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3687              		.loc 1 3786 13 is_stmt 1 view .LVU1038
3786:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3688              		.loc 1 3786 43 is_stmt 0 view .LVU1039
 3689 0048 2846     		mov	r0, r5
 3690 004a FFF7FEFF 		bl	eTaskGetState
 3691              	.LVL250:
3786:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3692              		.loc 1 3786 41 view .LVU1040
 3693 004e 2073     		strb	r0, [r4, #12]
 3694 0050 F0E7     		b	.L268
 3695              	.L274:
3799:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 3696              		.loc 1 3799 17 is_stmt 1 view .LVU1041
3799:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 3697              		.loc 1 3799 54 is_stmt 0 view .LVU1042
 3698 0052 286B     		ldr	r0, [r5, #48]
 3699 0054 FFF7FEFF 		bl	prvTaskCheckFreeStackSpace
 3700              	.LVL251:
3799:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 3701              		.loc 1 3799 52 view .LVU1043
 3702 0058 2084     		strh	r0, [r4, #32]	@ movhi
 3703 005a EEE7     		b	.L264
 3704              	.L276:
 3705              		.align	2
 3706              	.L275:
 3707 005c 00000000 		.word	.LANCHOR8
 3708              		.cfi_endproc
 3709              	.LFE34:
 3711              		.section	.text.prvListTasksWithinSingleList,"ax",%progbits
 3712              		.align	1
 3713              		.syntax unified
 3714              		.thumb
 3715              		.thumb_func
 3717              	prvListTasksWithinSingleList:
 3718              	.LVL252:
 3719              	.LFB35:
3817:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxNextTCB, * pxFirstTCB;
ARM GAS  /tmp/ccjYyDGQ.s 			page 180


 3720              		.loc 1 3817 5 is_stmt 1 view -0
 3721              		.cfi_startproc
 3722              		@ args = 0, pretend = 0, frame = 0
 3723              		@ frame_needed = 0, uses_anonymous_args = 0
3817:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxNextTCB, * pxFirstTCB;
 3724              		.loc 1 3817 5 is_stmt 0 view .LVU1045
 3725 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3726              	.LCFI36:
 3727              		.cfi_def_cfa_offset 32
 3728              		.cfi_offset 4, -32
 3729              		.cfi_offset 5, -28
 3730              		.cfi_offset 6, -24
 3731              		.cfi_offset 7, -20
 3732              		.cfi_offset 8, -16
 3733              		.cfi_offset 9, -12
 3734              		.cfi_offset 10, -8
 3735              		.cfi_offset 14, -4
3818:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0;
 3736              		.loc 1 3818 29 is_stmt 1 view .LVU1046
3819:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3737              		.loc 1 3819 9 view .LVU1047
 3738              	.LVL253:
3821:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3739              		.loc 1 3821 9 view .LVU1048
3821:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3740              		.loc 1 3821 13 is_stmt 0 view .LVU1049
 3741 0004 0C68     		ldr	r4, [r1]
3821:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3742              		.loc 1 3821 11 view .LVU1050
 3743 0006 3CB3     		cbz	r4, .L277
 3744 0008 0746     		mov	r7, r0
 3745 000a 0D46     		mov	r5, r1
 3746 000c 9046     		mov	r8, r2
 3747              	.LBB197:
3823:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3748              		.loc 1 3823 13 is_stmt 1 view .LVU1051
 3749              	.LVL254:
3823:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3750              		.loc 1 3823 13 view .LVU1052
 3751 000e 4B68     		ldr	r3, [r1, #4]
 3752 0010 5B68     		ldr	r3, [r3, #4]
 3753 0012 4B60     		str	r3, [r1, #4]
3823:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3754              		.loc 1 3823 13 view .LVU1053
 3755 0014 01F10809 		add	r9, r1, #8
 3756 0018 4B45     		cmp	r3, r9
 3757 001a 04D0     		beq	.L283
 3758              	.L279:
3823:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3759              		.loc 1 3823 13 discriminator 3 view .LVU1054
 3760 001c 6B68     		ldr	r3, [r5, #4]
 3761 001e D3F80CA0 		ldr	r10, [r3, #12]
 3762              	.LVL255:
3823:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3763              		.loc 1 3823 13 is_stmt 0 discriminator 3 view .LVU1055
 3764              	.LBE197:
3819:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 181


 3765              		.loc 1 3819 21 discriminator 3 view .LVU1056
 3766 0022 0024     		movs	r4, #0
 3767 0024 10E0     		b	.L281
 3768              	.LVL256:
 3769              	.L283:
 3770              	.LBB198:
3823:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3771              		.loc 1 3823 13 is_stmt 1 discriminator 1 view .LVU1057
 3772 0026 5B68     		ldr	r3, [r3, #4]
 3773 0028 4B60     		str	r3, [r1, #4]
 3774 002a F7E7     		b	.L279
 3775              	.LVL257:
 3776              	.L280:
3823:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3777              		.loc 1 3823 13 is_stmt 0 discriminator 1 view .LVU1058
 3778              	.LBE198:
 3779              	.LBB199:
3831:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 3780              		.loc 1 3831 17 is_stmt 1 discriminator 3 view .LVU1059
 3781 002c 6B68     		ldr	r3, [r5, #4]
 3782 002e DE68     		ldr	r6, [r3, #12]
 3783              	.LVL258:
3831:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 3784              		.loc 1 3831 17 is_stmt 0 discriminator 3 view .LVU1060
 3785              	.LBE199:
3831:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 3786              		.loc 1 3831 65 is_stmt 1 discriminator 3 view .LVU1061
3832:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxTask++;
 3787              		.loc 1 3832 17 discriminator 3 view .LVU1062
3832:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxTask++;
 3788              		.loc 1 3832 79 is_stmt 0 discriminator 3 view .LVU1063
 3789 0030 04EBC401 		add	r1, r4, r4, lsl #3
3832:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxTask++;
 3790              		.loc 1 3832 17 discriminator 3 view .LVU1064
 3791 0034 4346     		mov	r3, r8
 3792 0036 0122     		movs	r2, #1
 3793 0038 07EB8101 		add	r1, r7, r1, lsl #2
 3794 003c 3046     		mov	r0, r6
 3795 003e FFF7FEFF 		bl	vTaskGetInfo
 3796              	.LVL259:
3833:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
 3797              		.loc 1 3833 17 is_stmt 1 discriminator 3 view .LVU1065
3833:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
 3798              		.loc 1 3833 23 is_stmt 0 discriminator 3 view .LVU1066
 3799 0042 0134     		adds	r4, r4, #1
 3800              	.LVL260:
3834:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3801              		.loc 1 3834 20 is_stmt 1 discriminator 3 view .LVU1067
3834:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 3802              		.loc 1 3834 13 is_stmt 0 discriminator 3 view .LVU1068
 3803 0044 B245     		cmp	r10, r6
 3804 0046 07D0     		beq	.L277
 3805              	.LVL261:
 3806              	.L281:
3823:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3807              		.loc 1 3823 62 is_stmt 1 discriminator 4 view .LVU1069
3829:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
ARM GAS  /tmp/ccjYyDGQ.s 			page 182


 3808              		.loc 1 3829 13 discriminator 4 view .LVU1070
 3809              	.LBB200:
3831:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 3810              		.loc 1 3831 17 discriminator 4 view .LVU1071
3831:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 3811              		.loc 1 3831 17 discriminator 4 view .LVU1072
 3812 0048 6B68     		ldr	r3, [r5, #4]
 3813 004a 5968     		ldr	r1, [r3, #4]
 3814 004c 6960     		str	r1, [r5, #4]
3831:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 3815              		.loc 1 3831 17 discriminator 4 view .LVU1073
 3816 004e 8945     		cmp	r9, r1
 3817 0050 ECD1     		bne	.L280
3831:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 3818              		.loc 1 3831 17 discriminator 1 view .LVU1074
 3819 0052 4B68     		ldr	r3, [r1, #4]
 3820 0054 6B60     		str	r3, [r5, #4]
 3821 0056 E9E7     		b	.L280
 3822              	.LVL262:
 3823              	.L277:
3831:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 3824              		.loc 1 3831 17 is_stmt 0 discriminator 1 view .LVU1075
 3825              	.LBE200:
3842:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3826              		.loc 1 3842 5 view .LVU1076
 3827 0058 2046     		mov	r0, r4
 3828 005a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3829              		.cfi_endproc
 3830              	.LFE35:
 3832              		.section	.text.uxTaskGetSystemState,"ax",%progbits
 3833              		.align	1
 3834              		.global	uxTaskGetSystemState
 3835              		.syntax unified
 3836              		.thumb
 3837              		.thumb_func
 3839              	uxTaskGetSystemState:
 3840              	.LVL263:
 3841              	.LFB17:
2488:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 3842              		.loc 1 2488 5 is_stmt 1 view -0
 3843              		.cfi_startproc
 3844              		@ args = 0, pretend = 0, frame = 0
 3845              		@ frame_needed = 0, uses_anonymous_args = 0
2488:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 3846              		.loc 1 2488 5 is_stmt 0 view .LVU1078
 3847 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3848              	.LCFI37:
 3849              		.cfi_def_cfa_offset 24
 3850              		.cfi_offset 3, -24
 3851              		.cfi_offset 4, -20
 3852              		.cfi_offset 5, -16
 3853              		.cfi_offset 6, -12
 3854              		.cfi_offset 7, -8
 3855              		.cfi_offset 14, -4
 3856 0002 0646     		mov	r6, r0
 3857 0004 0C46     		mov	r4, r1
 3858 0006 1746     		mov	r7, r2
ARM GAS  /tmp/ccjYyDGQ.s 			page 183


2489:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3859              		.loc 1 2489 9 is_stmt 1 view .LVU1079
 3860              	.LVL264:
2491:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 3861              		.loc 1 2491 9 view .LVU1080
 3862 0008 FFF7FEFF 		bl	vTaskSuspendAll
 3863              	.LVL265:
2494:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 3864              		.loc 1 2494 13 view .LVU1081
2494:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 3865              		.loc 1 2494 29 is_stmt 0 view .LVU1082
 3866 000c 194B     		ldr	r3, .L289
 3867 000e 1B68     		ldr	r3, [r3]
2494:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 3868              		.loc 1 2494 15 view .LVU1083
 3869 0010 A342     		cmp	r3, r4
 3870 0012 29D8     		bhi	.L287
2489:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3871              		.loc 1 2489 33 view .LVU1084
 3872 0014 0525     		movs	r5, #5
2489:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3873              		.loc 1 2489 21 view .LVU1085
 3874 0016 0024     		movs	r4, #0
 3875              	.LVL266:
 3876              	.L286:
2498:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 3877              		.loc 1 2498 17 is_stmt 1 discriminator 1 view .LVU1086
2500:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( px
 3878              		.loc 1 2500 21 discriminator 1 view .LVU1087
2500:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( px
 3879              		.loc 1 2500 28 is_stmt 0 discriminator 1 view .LVU1088
 3880 0018 013D     		subs	r5, r5, #1
 3881              	.LVL267:
2501:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
 3882              		.loc 1 2501 21 is_stmt 1 discriminator 1 view .LVU1089
2501:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
 3883              		.loc 1 2501 81 is_stmt 0 discriminator 1 view .LVU1090
 3884 001a 04EBC400 		add	r0, r4, r4, lsl #3
2501:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
 3885              		.loc 1 2501 31 discriminator 1 view .LVU1091
 3886 001e 05EB8501 		add	r1, r5, r5, lsl #2
 3887 0022 0122     		movs	r2, #1
 3888 0024 144B     		ldr	r3, .L289+4
 3889 0026 03EB8101 		add	r1, r3, r1, lsl #2
 3890 002a 06EB8000 		add	r0, r6, r0, lsl #2
 3891 002e FFF7FEFF 		bl	prvListTasksWithinSingleList
 3892              	.LVL268:
2501:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
 3893              		.loc 1 2501 28 discriminator 1 view .LVU1092
 3894 0032 0444     		add	r4, r4, r0
 3895              	.LVL269:
2502:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3896              		.loc 1 2502 24 is_stmt 1 discriminator 1 view .LVU1093
2502:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3897              		.loc 1 2502 17 is_stmt 0 discriminator 1 view .LVU1094
 3898 0034 002D     		cmp	r5, #0
 3899 0036 EFD1     		bne	.L286
ARM GAS  /tmp/ccjYyDGQ.s 			page 184


2506:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
 3900              		.loc 1 2506 17 is_stmt 1 view .LVU1095
2506:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
 3901              		.loc 1 2506 77 is_stmt 0 view .LVU1096
 3902 0038 04EBC400 		add	r0, r4, r4, lsl #3
2506:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
 3903              		.loc 1 2506 27 view .LVU1097
 3904 003c 0F4B     		ldr	r3, .L289+8
 3905 003e 1968     		ldr	r1, [r3]
 3906 0040 0222     		movs	r2, #2
 3907 0042 06EB8000 		add	r0, r6, r0, lsl #2
 3908 0046 FFF7FEFF 		bl	prvListTasksWithinSingleList
 3909              	.LVL270:
2506:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
 3910              		.loc 1 2506 24 view .LVU1098
 3911 004a 0444     		add	r4, r4, r0
 3912              	.LVL271:
2507:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3913              		.loc 1 2507 17 is_stmt 1 view .LVU1099
2507:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3914              		.loc 1 2507 77 is_stmt 0 view .LVU1100
 3915 004c 04EBC400 		add	r0, r4, r4, lsl #3
2507:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3916              		.loc 1 2507 27 view .LVU1101
 3917 0050 0B4B     		ldr	r3, .L289+12
 3918 0052 1968     		ldr	r1, [r3]
 3919 0054 0222     		movs	r2, #2
 3920 0056 06EB8000 		add	r0, r6, r0, lsl #2
 3921 005a FFF7FEFF 		bl	prvListTasksWithinSingleList
 3922              	.LVL272:
2507:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3923              		.loc 1 2507 24 view .LVU1102
 3924 005e 0444     		add	r4, r4, r0
 3925              	.LVL273:
2538:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 3926              		.loc 1 2538 21 is_stmt 1 view .LVU1103
2538:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 3927              		.loc 1 2538 23 is_stmt 0 view .LVU1104
 3928 0060 1FB1     		cbz	r7, .L285
2540:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 3929              		.loc 1 2540 25 is_stmt 1 view .LVU1105
2540:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 3930              		.loc 1 2540 42 is_stmt 0 view .LVU1106
 3931 0062 0023     		movs	r3, #0
 3932 0064 3B60     		str	r3, [r7]
 3933 0066 00E0     		b	.L285
 3934              	.LVL274:
 3935              	.L287:
2489:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3936              		.loc 1 2489 21 view .LVU1107
 3937 0068 0024     		movs	r4, #0
 3938              	.LVL275:
 3939              	.L285:
2547:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 3940              		.loc 1 2547 41 is_stmt 1 view .LVU1108
2550:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3941              		.loc 1 2550 9 view .LVU1109
ARM GAS  /tmp/ccjYyDGQ.s 			page 185


2550:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3942              		.loc 1 2550 18 is_stmt 0 view .LVU1110
 3943 006a FFF7FEFF 		bl	xTaskResumeAll
 3944              	.LVL276:
2552:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 3945              		.loc 1 2552 9 is_stmt 1 view .LVU1111
2553:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3946              		.loc 1 2553 5 is_stmt 0 view .LVU1112
 3947 006e 2046     		mov	r0, r4
 3948 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3949              	.LVL277:
 3950              	.L290:
2553:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3951              		.loc 1 2553 5 view .LVU1113
 3952 0072 00BF     		.align	2
 3953              	.L289:
 3954 0074 00000000 		.word	.LANCHOR7
 3955 0078 00000000 		.word	.LANCHOR0
 3956 007c 00000000 		.word	.LANCHOR1
 3957 0080 00000000 		.word	.LANCHOR6
 3958              		.cfi_endproc
 3959              	.LFE17:
 3961              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3962              		.align	1
 3963              		.global	xTaskGetCurrentTaskHandle
 3964              		.syntax unified
 3965              		.thumb
 3966              		.thumb_func
 3968              	xTaskGetCurrentTaskHandle:
 3969              	.LFB38:
4014:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TaskHandle_t xReturn;
 3970              		.loc 1 4014 5 is_stmt 1 view -0
 3971              		.cfi_startproc
 3972              		@ args = 0, pretend = 0, frame = 0
 3973              		@ frame_needed = 0, uses_anonymous_args = 0
 3974              		@ link register save eliminated.
4015:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3975              		.loc 1 4015 9 view .LVU1115
4020:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3976              		.loc 1 4020 9 view .LVU1116
4020:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3977              		.loc 1 4020 17 is_stmt 0 view .LVU1117
 3978 0000 014B     		ldr	r3, .L292
 3979 0002 1868     		ldr	r0, [r3]
 3980              	.LVL278:
4022:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 3981              		.loc 1 4022 9 is_stmt 1 view .LVU1118
4023:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 3982              		.loc 1 4023 5 is_stmt 0 view .LVU1119
 3983 0004 7047     		bx	lr
 3984              	.L293:
 3985 0006 00BF     		.align	2
 3986              	.L292:
 3987 0008 00000000 		.word	.LANCHOR8
 3988              		.cfi_endproc
 3989              	.LFE38:
 3991              		.section	.text.xTaskPriorityInherit,"ax",%progbits
ARM GAS  /tmp/ccjYyDGQ.s 			page 186


 3992              		.align	1
 3993              		.global	xTaskPriorityInherit
 3994              		.syntax unified
 3995              		.thumb
 3996              		.thumb_func
 3998              	xTaskPriorityInherit:
 3999              	.LVL279:
 4000              	.LFB39:
4059:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4001              		.loc 1 4059 5 is_stmt 1 view -0
 4002              		.cfi_startproc
 4003              		@ args = 0, pretend = 0, frame = 0
 4004              		@ frame_needed = 0, uses_anonymous_args = 0
4060:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
 4005              		.loc 1 4060 9 view .LVU1121
4061:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4006              		.loc 1 4061 9 view .LVU1122
4066:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 4007              		.loc 1 4066 9 view .LVU1123
4066:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 4008              		.loc 1 4066 11 is_stmt 0 view .LVU1124
 4009 0000 0028     		cmp	r0, #0
 4010 0002 4BD0     		beq	.L300
4059:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4011              		.loc 1 4059 5 view .LVU1125
 4012 0004 38B5     		push	{r3, r4, r5, lr}
 4013              	.LCFI38:
 4014              		.cfi_def_cfa_offset 16
 4015              		.cfi_offset 3, -16
 4016              		.cfi_offset 4, -12
 4017              		.cfi_offset 5, -8
 4018              		.cfi_offset 14, -4
 4019 0006 0446     		mov	r4, r0
4071:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4020              		.loc 1 4071 13 is_stmt 1 view .LVU1126
4071:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4021              		.loc 1 4071 33 is_stmt 0 view .LVU1127
 4022 0008 C36A     		ldr	r3, [r0, #44]
4071:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4023              		.loc 1 4071 60 view .LVU1128
 4024 000a 264A     		ldr	r2, .L307
 4025 000c 1268     		ldr	r2, [r2]
 4026 000e D26A     		ldr	r2, [r2, #44]
4071:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4027              		.loc 1 4071 15 view .LVU1129
 4028 0010 9342     		cmp	r3, r2
 4029 0012 3BD2     		bcs	.L296
4076:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4030              		.loc 1 4076 17 is_stmt 1 view .LVU1130
4076:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4031              		.loc 1 4076 23 is_stmt 0 view .LVU1131
 4032 0014 8269     		ldr	r2, [r0, #24]
4076:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4033              		.loc 1 4076 19 view .LVU1132
 4034 0016 002A     		cmp	r2, #0
 4035 0018 05DB     		blt	.L297
4078:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
ARM GAS  /tmp/ccjYyDGQ.s 			page 187


 4036              		.loc 1 4078 21 is_stmt 1 view .LVU1133
 4037 001a 224A     		ldr	r2, .L307
 4038 001c 1268     		ldr	r2, [r2]
 4039 001e D26A     		ldr	r2, [r2, #44]
 4040 0020 C2F10502 		rsb	r2, r2, #5
 4041 0024 8261     		str	r2, [r0, #24]
 4042              	.L297:
4082:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4043              		.loc 1 4082 45 view .LVU1134
4087:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4044              		.loc 1 4087 17 view .LVU1135
4087:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4045              		.loc 1 4087 21 is_stmt 0 view .LVU1136
 4046 0026 6169     		ldr	r1, [r4, #20]
 4047 0028 03EB8303 		add	r3, r3, r3, lsl #2
 4048 002c 1E4A     		ldr	r2, .L307+4
 4049 002e 02EB8303 		add	r3, r2, r3, lsl #2
4087:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4050              		.loc 1 4087 19 view .LVU1137
 4051 0032 9942     		cmp	r1, r3
 4052 0034 05D0     		beq	.L306
4108:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4053              		.loc 1 4108 21 is_stmt 1 view .LVU1138
4108:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4054              		.loc 1 4108 64 is_stmt 0 view .LVU1139
 4055 0036 1B4B     		ldr	r3, .L307
 4056 0038 1B68     		ldr	r3, [r3]
 4057 003a DB6A     		ldr	r3, [r3, #44]
4108:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4058              		.loc 1 4108 50 view .LVU1140
 4059 003c E362     		str	r3, [r4, #44]
4114:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 4060              		.loc 1 4114 25 view .LVU1141
 4061 003e 0120     		movs	r0, #1
 4062              	.LVL280:
 4063              	.L294:
4141:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4064              		.loc 1 4141 5 view .LVU1142
 4065 0040 38BD     		pop	{r3, r4, r5, pc}
 4066              	.LVL281:
 4067              	.L306:
4089:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 4068              		.loc 1 4089 21 is_stmt 1 view .LVU1143
4089:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 4069              		.loc 1 4089 25 is_stmt 0 view .LVU1144
 4070 0042 251D     		adds	r5, r4, #4
 4071 0044 2846     		mov	r0, r5
 4072              	.LVL282:
4089:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 4073              		.loc 1 4089 25 view .LVU1145
 4074 0046 FFF7FEFF 		bl	uxListRemove
 4075              	.LVL283:
4098:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4076              		.loc 1 4098 49 is_stmt 1 view .LVU1146
4102:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
 4077              		.loc 1 4102 21 view .LVU1147
4102:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
ARM GAS  /tmp/ccjYyDGQ.s 			page 188


 4078              		.loc 1 4102 64 is_stmt 0 view .LVU1148
 4079 004a 164B     		ldr	r3, .L307
 4080 004c 1B68     		ldr	r3, [r3]
 4081 004e DB6A     		ldr	r3, [r3, #44]
4102:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
 4082              		.loc 1 4102 50 view .LVU1149
 4083 0050 E362     		str	r3, [r4, #44]
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4084              		.loc 1 4103 21 is_stmt 1 view .LVU1150
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4085              		.loc 1 4103 21 view .LVU1151
 4086 0052 164A     		ldr	r2, .L307+8
 4087 0054 1268     		ldr	r2, [r2]
 4088 0056 9342     		cmp	r3, r2
 4089 0058 01D9     		bls	.L299
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4090              		.loc 1 4103 21 discriminator 1 view .LVU1152
 4091 005a 144A     		ldr	r2, .L307+8
 4092 005c 1360     		str	r3, [r2]
 4093              	.L299:
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4094              		.loc 1 4103 21 discriminator 3 view .LVU1153
 4095              	.LBB201:
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4096              		.loc 1 4103 21 discriminator 3 view .LVU1154
 4097 005e 124A     		ldr	r2, .L307+4
 4098 0060 03EB8303 		add	r3, r3, r3, lsl #2
 4099 0064 02EB8303 		add	r3, r2, r3, lsl #2
 4100 0068 5B68     		ldr	r3, [r3, #4]
 4101              	.LVL284:
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4102              		.loc 1 4103 21 discriminator 3 view .LVU1155
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4103              		.loc 1 4103 21 discriminator 3 view .LVU1156
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4104              		.loc 1 4103 21 discriminator 3 view .LVU1157
 4105 006a A360     		str	r3, [r4, #8]
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4106              		.loc 1 4103 21 discriminator 3 view .LVU1158
 4107 006c 9968     		ldr	r1, [r3, #8]
 4108 006e E160     		str	r1, [r4, #12]
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4109              		.loc 1 4103 21 discriminator 3 view .LVU1159
 4110 0070 4D60     		str	r5, [r1, #4]
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4111              		.loc 1 4103 21 discriminator 3 view .LVU1160
 4112 0072 9D60     		str	r5, [r3, #8]
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4113              		.loc 1 4103 21 discriminator 3 view .LVU1161
 4114 0074 E36A     		ldr	r3, [r4, #44]
 4115              	.LVL285:
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4116              		.loc 1 4103 21 is_stmt 0 discriminator 3 view .LVU1162
 4117 0076 03EB8301 		add	r1, r3, r3, lsl #2
 4118 007a 8800     		lsls	r0, r1, #2
 4119 007c 02EB8101 		add	r1, r2, r1, lsl #2
 4120 0080 6161     		str	r1, [r4, #20]
ARM GAS  /tmp/ccjYyDGQ.s 			page 189


4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4121              		.loc 1 4103 21 is_stmt 1 discriminator 3 view .LVU1163
 4122 0082 1158     		ldr	r1, [r2, r0]
 4123 0084 0131     		adds	r1, r1, #1
 4124 0086 1150     		str	r1, [r2, r0]
 4125              	.LBE201:
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4126              		.loc 1 4103 21 discriminator 3 view .LVU1164
4103:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4127              		.loc 1 4103 62 discriminator 3 view .LVU1165
4114:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 4128              		.loc 1 4114 25 is_stmt 0 discriminator 3 view .LVU1166
 4129 0088 0120     		movs	r0, #1
 4130 008a D9E7     		b	.L294
 4131              	.LVL286:
 4132              	.L296:
4118:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4133              		.loc 1 4118 17 is_stmt 1 view .LVU1167
4118:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4134              		.loc 1 4118 37 is_stmt 0 view .LVU1168
 4135 008c 426C     		ldr	r2, [r0, #68]
4118:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4136              		.loc 1 4118 68 view .LVU1169
 4137 008e 054B     		ldr	r3, .L307
 4138 0090 1B68     		ldr	r3, [r3]
 4139 0092 DB6A     		ldr	r3, [r3, #44]
4118:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4140              		.loc 1 4118 19 view .LVU1170
 4141 0094 9A42     		cmp	r2, r3
 4142 0096 03D3     		bcc	.L301
4061:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4143              		.loc 1 4061 20 view .LVU1171
 4144 0098 0020     		movs	r0, #0
 4145              	.LVL287:
4061:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4146              		.loc 1 4061 20 view .LVU1172
 4147 009a D1E7     		b	.L294
 4148              	.LVL288:
 4149              	.L300:
 4150              	.LCFI39:
 4151              		.cfi_def_cfa_offset 0
 4152              		.cfi_restore 3
 4153              		.cfi_restore 4
 4154              		.cfi_restore 5
 4155              		.cfi_restore 14
4061:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4156              		.loc 1 4061 20 view .LVU1173
 4157 009c 0020     		movs	r0, #0
 4158              	.LVL289:
4141:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4159              		.loc 1 4141 5 view .LVU1174
 4160 009e 7047     		bx	lr
 4161              	.LVL290:
 4162              	.L301:
 4163              	.LCFI40:
 4164              		.cfi_def_cfa_offset 16
 4165              		.cfi_offset 3, -16
ARM GAS  /tmp/ccjYyDGQ.s 			page 190


 4166              		.cfi_offset 4, -12
 4167              		.cfi_offset 5, -8
 4168              		.cfi_offset 14, -4
4127:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4169              		.loc 1 4127 29 view .LVU1175
 4170 00a0 0120     		movs	r0, #1
 4171              	.LVL291:
4137:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 4172              		.loc 1 4137 37 is_stmt 1 view .LVU1176
4140:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 4173              		.loc 1 4140 9 view .LVU1177
4140:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 4174              		.loc 1 4140 16 is_stmt 0 view .LVU1178
 4175 00a2 CDE7     		b	.L294
 4176              	.L308:
 4177              		.align	2
 4178              	.L307:
 4179 00a4 00000000 		.word	.LANCHOR8
 4180 00a8 00000000 		.word	.LANCHOR0
 4181 00ac 00000000 		.word	.LANCHOR11
 4182              		.cfi_endproc
 4183              	.LFE39:
 4185              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 4186              		.align	1
 4187              		.global	xTaskPriorityDisinherit
 4188              		.syntax unified
 4189              		.thumb
 4190              		.thumb_func
 4192              	xTaskPriorityDisinherit:
 4193              	.LVL292:
 4194              	.LFB40:
4149:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 4195              		.loc 1 4149 5 is_stmt 1 view -0
 4196              		.cfi_startproc
 4197              		@ args = 0, pretend = 0, frame = 0
 4198              		@ frame_needed = 0, uses_anonymous_args = 0
4150:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
 4199              		.loc 1 4150 9 view .LVU1180
4151:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4200              		.loc 1 4151 9 view .LVU1181
4153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 4201              		.loc 1 4153 9 view .LVU1182
4153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 4202              		.loc 1 4153 11 is_stmt 0 view .LVU1183
 4203 0000 0028     		cmp	r0, #0
 4204 0002 48D0     		beq	.L316
4149:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 4205              		.loc 1 4149 5 view .LVU1184
 4206 0004 38B5     		push	{r3, r4, r5, lr}
 4207              	.LCFI41:
 4208              		.cfi_def_cfa_offset 16
 4209              		.cfi_offset 3, -16
 4210              		.cfi_offset 4, -12
 4211              		.cfi_offset 5, -8
 4212              		.cfi_offset 14, -4
 4213 0006 0446     		mov	r4, r0
4159:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
ARM GAS  /tmp/ccjYyDGQ.s 			page 191


 4214              		.loc 1 4159 13 is_stmt 1 view .LVU1185
 4215 0008 254B     		ldr	r3, .L324
 4216 000a 1B68     		ldr	r3, [r3]
 4217 000c 8342     		cmp	r3, r0
 4218 000e 08D0     		beq	.L311
4159:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 4219              		.loc 1 4159 13 view .LVU1186
 4220              	.LBB202:
 4221              	.LBI202:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4222              		.loc 2 194 34 view .LVU1187
 4223              	.LBB203:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4224              		.loc 2 196 9 view .LVU1188
 4225              		.loc 2 198 9 view .LVU1189
 4226              		.syntax unified
 4227              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4228 0010 4FF05003 			mov r3, #80												
 4229 0014 83F31188 		msr basepri, r3											
 4230 0018 BFF36F8F 		isb														
 4231 001c BFF34F8F 		dsb														
 4232              	
 4233              	@ 0 "" 2
 4234              	.LVL293:
 4235              		.thumb
 4236              		.syntax unified
 4237              	.L312:
 4238              		.loc 2 198 9 is_stmt 0 view .LVU1190
 4239              	.LBE203:
 4240              	.LBE202:
4159:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 4241              		.loc 1 4159 13 is_stmt 1 discriminator 1 view .LVU1191
4159:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 4242              		.loc 1 4159 13 discriminator 1 view .LVU1192
4159:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 4243              		.loc 1 4159 13 discriminator 1 view .LVU1193
 4244 0020 FEE7     		b	.L312
 4245              	.L311:
4159:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 4246              		.loc 1 4159 50 discriminator 2 view .LVU1194
4160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 4247              		.loc 1 4160 13 discriminator 2 view .LVU1195
 4248 0022 836C     		ldr	r3, [r0, #72]
 4249 0024 43B9     		cbnz	r3, .L313
4160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 4250              		.loc 1 4160 13 view .LVU1196
 4251              	.LBB204:
 4252              	.LBI204:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4253              		.loc 2 194 34 view .LVU1197
 4254              	.LBB205:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4255              		.loc 2 196 9 view .LVU1198
 4256              		.loc 2 198 9 view .LVU1199
 4257              		.syntax unified
 4258              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4259 0026 4FF05003 			mov r3, #80												
ARM GAS  /tmp/ccjYyDGQ.s 			page 192


 4260 002a 83F31188 		msr basepri, r3											
 4261 002e BFF36F8F 		isb														
 4262 0032 BFF34F8F 		dsb														
 4263              	
 4264              	@ 0 "" 2
 4265              	.LVL294:
 4266              		.thumb
 4267              		.syntax unified
 4268              	.L314:
 4269              		.loc 2 198 9 is_stmt 0 view .LVU1200
 4270              	.LBE205:
 4271              	.LBE204:
4160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 4272              		.loc 1 4160 13 is_stmt 1 discriminator 2 view .LVU1201
4160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 4273              		.loc 1 4160 13 discriminator 2 view .LVU1202
4160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 4274              		.loc 1 4160 13 discriminator 2 view .LVU1203
 4275 0036 FEE7     		b	.L314
 4276              	.L313:
4160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 4277              		.loc 1 4160 49 discriminator 2 view .LVU1204
4161:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4278              		.loc 1 4161 13 discriminator 2 view .LVU1205
4161:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4279              		.loc 1 4161 37 is_stmt 0 discriminator 2 view .LVU1206
 4280 0038 013B     		subs	r3, r3, #1
 4281 003a 8364     		str	r3, [r0, #72]
4165:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4282              		.loc 1 4165 13 is_stmt 1 discriminator 2 view .LVU1207
4165:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4283              		.loc 1 4165 22 is_stmt 0 discriminator 2 view .LVU1208
 4284 003c C16A     		ldr	r1, [r0, #44]
4165:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4285              		.loc 1 4165 43 discriminator 2 view .LVU1209
 4286 003e 426C     		ldr	r2, [r0, #68]
4165:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4287              		.loc 1 4165 15 discriminator 2 view .LVU1210
 4288 0040 9142     		cmp	r1, r2
 4289 0042 2AD0     		beq	.L317
4168:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4290              		.loc 1 4168 17 is_stmt 1 view .LVU1211
4168:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4291              		.loc 1 4168 19 is_stmt 0 view .LVU1212
 4292 0044 0BB1     		cbz	r3, .L323
4151:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4293              		.loc 1 4151 20 view .LVU1213
 4294 0046 0020     		movs	r0, #0
 4295              	.LVL295:
4217:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 4296              		.loc 1 4217 37 is_stmt 1 view .LVU1214
4220:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 4297              		.loc 1 4220 9 view .LVU1215
 4298              	.L309:
4221:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4299              		.loc 1 4221 5 is_stmt 0 view .LVU1216
 4300 0048 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccjYyDGQ.s 			page 193


 4301              	.LVL296:
 4302              	.L323:
4175:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 4303              		.loc 1 4175 21 is_stmt 1 view .LVU1217
4175:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 4304              		.loc 1 4175 25 is_stmt 0 view .LVU1218
 4305 004a 051D     		adds	r5, r0, #4
 4306 004c 2846     		mov	r0, r5
 4307              	.LVL297:
4175:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 4308              		.loc 1 4175 25 view .LVU1219
 4309 004e FFF7FEFF 		bl	uxListRemove
 4310              	.LVL298:
4181:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4311              		.loc 1 4181 49 is_stmt 1 view .LVU1220
4186:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = pxTCB->uxBasePriority;
 4312              		.loc 1 4186 82 view .LVU1221
4187:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4313              		.loc 1 4187 21 view .LVU1222
4187:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4314              		.loc 1 4187 46 is_stmt 0 view .LVU1223
 4315 0052 636C     		ldr	r3, [r4, #68]
4187:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4316              		.loc 1 4187 39 view .LVU1224
 4317 0054 E362     		str	r3, [r4, #44]
4192:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 4318              		.loc 1 4192 21 is_stmt 1 view .LVU1225
 4319 0056 C3F10502 		rsb	r2, r3, #5
 4320 005a A261     		str	r2, [r4, #24]
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4321              		.loc 1 4193 21 view .LVU1226
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4322              		.loc 1 4193 21 view .LVU1227
 4323 005c 114A     		ldr	r2, .L324+4
 4324 005e 1268     		ldr	r2, [r2]
 4325 0060 9342     		cmp	r3, r2
 4326 0062 01D9     		bls	.L315
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4327              		.loc 1 4193 21 discriminator 1 view .LVU1228
 4328 0064 0F4A     		ldr	r2, .L324+4
 4329 0066 1360     		str	r3, [r2]
 4330              	.L315:
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4331              		.loc 1 4193 21 discriminator 3 view .LVU1229
 4332              	.LBB206:
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4333              		.loc 1 4193 21 discriminator 3 view .LVU1230
 4334 0068 0F4A     		ldr	r2, .L324+8
 4335 006a 03EB8303 		add	r3, r3, r3, lsl #2
 4336 006e 02EB8303 		add	r3, r2, r3, lsl #2
 4337 0072 5B68     		ldr	r3, [r3, #4]
 4338              	.LVL299:
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4339              		.loc 1 4193 21 discriminator 3 view .LVU1231
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4340              		.loc 1 4193 21 discriminator 3 view .LVU1232
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 194


 4341              		.loc 1 4193 21 discriminator 3 view .LVU1233
 4342 0074 A360     		str	r3, [r4, #8]
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4343              		.loc 1 4193 21 discriminator 3 view .LVU1234
 4344 0076 9968     		ldr	r1, [r3, #8]
 4345 0078 E160     		str	r1, [r4, #12]
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4346              		.loc 1 4193 21 discriminator 3 view .LVU1235
 4347 007a 4D60     		str	r5, [r1, #4]
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4348              		.loc 1 4193 21 discriminator 3 view .LVU1236
 4349 007c 9D60     		str	r5, [r3, #8]
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4350              		.loc 1 4193 21 discriminator 3 view .LVU1237
 4351 007e E36A     		ldr	r3, [r4, #44]
 4352              	.LVL300:
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4353              		.loc 1 4193 21 is_stmt 0 discriminator 3 view .LVU1238
 4354 0080 03EB8301 		add	r1, r3, r3, lsl #2
 4355 0084 8800     		lsls	r0, r1, #2
 4356 0086 02EB8101 		add	r1, r2, r1, lsl #2
 4357 008a 6161     		str	r1, [r4, #20]
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4358              		.loc 1 4193 21 is_stmt 1 discriminator 3 view .LVU1239
 4359 008c 1158     		ldr	r1, [r2, r0]
 4360 008e 0131     		adds	r1, r1, #1
 4361 0090 1150     		str	r1, [r2, r0]
 4362              	.LBE206:
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4363              		.loc 1 4193 21 discriminator 3 view .LVU1240
4193:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4364              		.loc 1 4193 51 discriminator 3 view .LVU1241
4203:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4365              		.loc 1 4203 21 discriminator 3 view .LVU1242
 4366              	.LVL301:
4203:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4367              		.loc 1 4203 29 is_stmt 0 discriminator 3 view .LVU1243
 4368 0092 0120     		movs	r0, #1
 4369 0094 D8E7     		b	.L309
 4370              	.LVL302:
 4371              	.L316:
 4372              	.LCFI42:
 4373              		.cfi_def_cfa_offset 0
 4374              		.cfi_restore 3
 4375              		.cfi_restore 4
 4376              		.cfi_restore 5
 4377              		.cfi_restore 14
4151:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4378              		.loc 1 4151 20 view .LVU1244
 4379 0096 0020     		movs	r0, #0
 4380              	.LVL303:
4221:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4381              		.loc 1 4221 5 view .LVU1245
 4382 0098 7047     		bx	lr
 4383              	.LVL304:
 4384              	.L317:
 4385              	.LCFI43:
ARM GAS  /tmp/ccjYyDGQ.s 			page 195


 4386              		.cfi_def_cfa_offset 16
 4387              		.cfi_offset 3, -16
 4388              		.cfi_offset 4, -12
 4389              		.cfi_offset 5, -8
 4390              		.cfi_offset 14, -4
4151:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4391              		.loc 1 4151 20 view .LVU1246
 4392 009a 0020     		movs	r0, #0
 4393              	.LVL305:
4151:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4394              		.loc 1 4151 20 view .LVU1247
 4395 009c D4E7     		b	.L309
 4396              	.L325:
 4397 009e 00BF     		.align	2
 4398              	.L324:
 4399 00a0 00000000 		.word	.LANCHOR8
 4400 00a4 00000000 		.word	.LANCHOR11
 4401 00a8 00000000 		.word	.LANCHOR0
 4402              		.cfi_endproc
 4403              	.LFE40:
 4405              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 4406              		.align	1
 4407              		.global	vTaskPriorityDisinheritAfterTimeout
 4408              		.syntax unified
 4409              		.thumb
 4410              		.thumb_func
 4412              	vTaskPriorityDisinheritAfterTimeout:
 4413              	.LVL306:
 4414              	.LFB41:
4230:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 4415              		.loc 1 4230 5 is_stmt 1 view -0
 4416              		.cfi_startproc
 4417              		@ args = 0, pretend = 0, frame = 0
 4418              		@ frame_needed = 0, uses_anonymous_args = 0
4231:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 4419              		.loc 1 4231 9 view .LVU1249
4232:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 4420              		.loc 1 4232 9 view .LVU1250
4233:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4421              		.loc 1 4233 9 view .LVU1251
4235:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 4422              		.loc 1 4235 9 view .LVU1252
4235:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 4423              		.loc 1 4235 11 is_stmt 0 view .LVU1253
 4424 0000 0028     		cmp	r0, #0
 4425 0002 53D0     		beq	.L336
4230:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 4426              		.loc 1 4230 5 view .LVU1254
 4427 0004 38B5     		push	{r3, r4, r5, lr}
 4428              	.LCFI44:
 4429              		.cfi_def_cfa_offset 16
 4430              		.cfi_offset 3, -16
 4431              		.cfi_offset 4, -12
 4432              		.cfi_offset 5, -8
 4433              		.cfi_offset 14, -4
 4434 0006 0446     		mov	r4, r0
4239:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 196


 4435              		.loc 1 4239 13 is_stmt 1 view .LVU1255
 4436 0008 836C     		ldr	r3, [r0, #72]
 4437 000a 43B9     		cbnz	r3, .L328
4239:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4438              		.loc 1 4239 13 view .LVU1256
 4439              	.LBB207:
 4440              	.LBI207:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4441              		.loc 2 194 34 view .LVU1257
 4442              	.LBB208:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4443              		.loc 2 196 9 view .LVU1258
 4444              		.loc 2 198 9 view .LVU1259
 4445              		.syntax unified
 4446              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4447 000c 4FF05003 			mov r3, #80												
 4448 0010 83F31188 		msr basepri, r3											
 4449 0014 BFF36F8F 		isb														
 4450 0018 BFF34F8F 		dsb														
 4451              	
 4452              	@ 0 "" 2
 4453              	.LVL307:
 4454              		.thumb
 4455              		.syntax unified
 4456              	.L329:
 4457              		.loc 2 198 9 is_stmt 0 view .LVU1260
 4458              	.LBE208:
 4459              	.LBE207:
4239:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4460              		.loc 1 4239 13 is_stmt 1 discriminator 1 view .LVU1261
4239:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4461              		.loc 1 4239 13 discriminator 1 view .LVU1262
4239:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4462              		.loc 1 4239 13 discriminator 1 view .LVU1263
 4463 001c FEE7     		b	.L329
 4464              	.L328:
4239:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4465              		.loc 1 4239 49 discriminator 2 view .LVU1264
4245:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4466              		.loc 1 4245 13 discriminator 2 view .LVU1265
4245:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4467              		.loc 1 4245 22 is_stmt 0 discriminator 2 view .LVU1266
 4468 001e 426C     		ldr	r2, [r0, #68]
4245:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4469              		.loc 1 4245 15 discriminator 2 view .LVU1267
 4470 0020 8A42     		cmp	r2, r1
 4471 0022 00D2     		bcs	.L330
4247:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 4472              		.loc 1 4247 33 view .LVU1268
 4473 0024 0A46     		mov	r2, r1
 4474              	.L330:
 4475              	.LVL308:
4255:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4476              		.loc 1 4255 13 is_stmt 1 view .LVU1269
4255:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4477              		.loc 1 4255 22 is_stmt 0 view .LVU1270
 4478 0026 E16A     		ldr	r1, [r4, #44]
ARM GAS  /tmp/ccjYyDGQ.s 			page 197


 4479              	.LVL309:
4255:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4480              		.loc 1 4255 15 view .LVU1271
 4481 0028 9142     		cmp	r1, r2
 4482 002a 01D0     		beq	.L326
4261:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4483              		.loc 1 4261 17 is_stmt 1 view .LVU1272
4261:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4484              		.loc 1 4261 19 is_stmt 0 view .LVU1273
 4485 002c 012B     		cmp	r3, #1
 4486 002e 00D0     		beq	.L339
 4487              	.LVL310:
 4488              	.L326:
4327:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4489              		.loc 1 4327 5 view .LVU1274
 4490 0030 38BD     		pop	{r3, r4, r5, pc}
 4491              	.LVL311:
 4492              	.L339:
4266:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4493              		.loc 1 4266 21 is_stmt 1 view .LVU1275
 4494 0032 1F4B     		ldr	r3, .L341
 4495 0034 1B68     		ldr	r3, [r3]
 4496 0036 A342     		cmp	r3, r4
 4497 0038 2FD0     		beq	.L340
4266:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4498              		.loc 1 4266 58 discriminator 2 view .LVU1276
4271:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     uxPriorityUsedOnEntry = pxTCB->uxPriority;
 4499              		.loc 1 4271 76 discriminator 2 view .LVU1277
4272:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = uxPriorityToUse;
 4500              		.loc 1 4272 21 discriminator 2 view .LVU1278
 4501              	.LVL312:
4273:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4502              		.loc 1 4273 21 discriminator 2 view .LVU1279
4273:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4503              		.loc 1 4273 39 is_stmt 0 discriminator 2 view .LVU1280
 4504 003a E262     		str	r2, [r4, #44]
4277:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 4505              		.loc 1 4277 21 is_stmt 1 discriminator 2 view .LVU1281
4277:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 4506              		.loc 1 4277 27 is_stmt 0 discriminator 2 view .LVU1282
 4507 003c A369     		ldr	r3, [r4, #24]
4277:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 4508              		.loc 1 4277 23 discriminator 2 view .LVU1283
 4509 003e 002B     		cmp	r3, #0
 4510 0040 02DB     		blt	.L333
4279:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4511              		.loc 1 4279 25 is_stmt 1 view .LVU1284
 4512 0042 C2F10502 		rsb	r2, r2, #5
 4513              	.LVL313:
4279:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4514              		.loc 1 4279 25 is_stmt 0 view .LVU1285
 4515 0046 A261     		str	r2, [r4, #24]
 4516              	.L333:
4283:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4517              		.loc 1 4283 49 is_stmt 1 view .LVU1286
4292:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 4518              		.loc 1 4292 21 view .LVU1287
ARM GAS  /tmp/ccjYyDGQ.s 			page 198


4292:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 4519              		.loc 1 4292 25 is_stmt 0 view .LVU1288
 4520 0048 6269     		ldr	r2, [r4, #20]
 4521 004a 01EB8101 		add	r1, r1, r1, lsl #2
 4522              	.LVL314:
4292:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 4523              		.loc 1 4292 25 view .LVU1289
 4524 004e 194B     		ldr	r3, .L341+4
 4525 0050 03EB8101 		add	r1, r3, r1, lsl #2
4292:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 4526              		.loc 1 4292 23 view .LVU1290
 4527 0054 8A42     		cmp	r2, r1
 4528 0056 EBD1     		bne	.L326
4294:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
 4529              		.loc 1 4294 25 is_stmt 1 view .LVU1291
4294:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
 4530              		.loc 1 4294 29 is_stmt 0 view .LVU1292
 4531 0058 251D     		adds	r5, r4, #4
 4532 005a 2846     		mov	r0, r5
 4533              	.LVL315:
4294:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         {
 4534              		.loc 1 4294 29 view .LVU1293
 4535 005c FFF7FEFF 		bl	uxListRemove
 4536              	.LVL316:
4303:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                         }
 4537              		.loc 1 4303 53 is_stmt 1 view .LVU1294
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4538              		.loc 1 4306 25 view .LVU1295
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4539              		.loc 1 4306 25 view .LVU1296
 4540 0060 E36A     		ldr	r3, [r4, #44]
 4541 0062 154A     		ldr	r2, .L341+8
 4542 0064 1268     		ldr	r2, [r2]
 4543 0066 9342     		cmp	r3, r2
 4544 0068 01D9     		bls	.L334
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4545              		.loc 1 4306 25 discriminator 1 view .LVU1297
 4546 006a 134A     		ldr	r2, .L341+8
 4547 006c 1360     		str	r3, [r2]
 4548              	.L334:
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4549              		.loc 1 4306 25 discriminator 3 view .LVU1298
 4550              	.LBB209:
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4551              		.loc 1 4306 25 discriminator 3 view .LVU1299
 4552 006e 114A     		ldr	r2, .L341+4
 4553 0070 03EB8303 		add	r3, r3, r3, lsl #2
 4554 0074 02EB8303 		add	r3, r2, r3, lsl #2
 4555 0078 5B68     		ldr	r3, [r3, #4]
 4556              	.LVL317:
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4557              		.loc 1 4306 25 discriminator 3 view .LVU1300
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4558              		.loc 1 4306 25 discriminator 3 view .LVU1301
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4559              		.loc 1 4306 25 discriminator 3 view .LVU1302
 4560 007a A360     		str	r3, [r4, #8]
ARM GAS  /tmp/ccjYyDGQ.s 			page 199


4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4561              		.loc 1 4306 25 discriminator 3 view .LVU1303
 4562 007c 9968     		ldr	r1, [r3, #8]
 4563 007e E160     		str	r1, [r4, #12]
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4564              		.loc 1 4306 25 discriminator 3 view .LVU1304
 4565 0080 4D60     		str	r5, [r1, #4]
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4566              		.loc 1 4306 25 discriminator 3 view .LVU1305
 4567 0082 9D60     		str	r5, [r3, #8]
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4568              		.loc 1 4306 25 discriminator 3 view .LVU1306
 4569 0084 E36A     		ldr	r3, [r4, #44]
 4570              	.LVL318:
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4571              		.loc 1 4306 25 is_stmt 0 discriminator 3 view .LVU1307
 4572 0086 03EB8301 		add	r1, r3, r3, lsl #2
 4573 008a 8800     		lsls	r0, r1, #2
 4574 008c 02EB8101 		add	r1, r2, r1, lsl #2
 4575 0090 6161     		str	r1, [r4, #20]
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4576              		.loc 1 4306 25 is_stmt 1 discriminator 3 view .LVU1308
 4577 0092 1158     		ldr	r1, [r2, r0]
 4578 0094 0131     		adds	r1, r1, #1
 4579 0096 1150     		str	r1, [r2, r0]
 4580              	.LBE209:
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4581              		.loc 1 4306 25 discriminator 3 view .LVU1309
4306:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 4582              		.loc 1 4306 55 discriminator 3 view .LVU1310
4325:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 4583              		.loc 1 4325 37 discriminator 3 view .LVU1311
4327:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4584              		.loc 1 4327 5 is_stmt 0 discriminator 3 view .LVU1312
 4585 0098 CAE7     		b	.L326
 4586              	.LVL319:
 4587              	.L340:
4266:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4588              		.loc 1 4266 21 is_stmt 1 view .LVU1313
 4589              	.LBB210:
 4590              	.LBI210:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4591              		.loc 2 194 34 view .LVU1314
 4592              	.LBB211:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4593              		.loc 2 196 9 view .LVU1315
 4594              		.loc 2 198 9 view .LVU1316
 4595              		.syntax unified
 4596              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4597 009a 4FF05003 			mov r3, #80												
 4598 009e 83F31188 		msr basepri, r3											
 4599 00a2 BFF36F8F 		isb														
 4600 00a6 BFF34F8F 		dsb														
 4601              	
 4602              	@ 0 "" 2
 4603              	.LVL320:
 4604              		.thumb
ARM GAS  /tmp/ccjYyDGQ.s 			page 200


 4605              		.syntax unified
 4606              	.L332:
 4607              		.loc 2 198 9 is_stmt 0 view .LVU1317
 4608              	.LBE211:
 4609              	.LBE210:
4266:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4610              		.loc 1 4266 21 is_stmt 1 discriminator 2 view .LVU1318
4266:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4611              		.loc 1 4266 21 discriminator 2 view .LVU1319
4266:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4612              		.loc 1 4266 21 discriminator 2 view .LVU1320
 4613 00aa FEE7     		b	.L332
 4614              	.LVL321:
 4615              	.L336:
 4616              	.LCFI45:
 4617              		.cfi_def_cfa_offset 0
 4618              		.cfi_restore 3
 4619              		.cfi_restore 4
 4620              		.cfi_restore 5
 4621              		.cfi_restore 14
4266:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4622              		.loc 1 4266 21 is_stmt 0 discriminator 2 view .LVU1321
 4623 00ac 7047     		bx	lr
 4624              	.L342:
 4625 00ae 00BF     		.align	2
 4626              	.L341:
 4627 00b0 00000000 		.word	.LANCHOR8
 4628 00b4 00000000 		.word	.LANCHOR0
 4629 00b8 00000000 		.word	.LANCHOR11
 4630              		.cfi_endproc
 4631              	.LFE41:
 4633              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 4634              		.align	1
 4635              		.global	uxTaskResetEventItemValue
 4636              		.syntax unified
 4637              		.thumb
 4638              		.thumb_func
 4640              	uxTaskResetEventItemValue:
 4641              	.LFB42:
4650:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     TickType_t uxReturn;
 4642              		.loc 1 4650 1 is_stmt 1 view -0
 4643              		.cfi_startproc
 4644              		@ args = 0, pretend = 0, frame = 0
 4645              		@ frame_needed = 0, uses_anonymous_args = 0
 4646              		@ link register save eliminated.
4651:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4647              		.loc 1 4651 5 view .LVU1323
4653:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4648              		.loc 1 4653 5 view .LVU1324
4653:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4649              		.loc 1 4653 16 is_stmt 0 view .LVU1325
 4650 0000 044A     		ldr	r2, .L344
 4651 0002 1368     		ldr	r3, [r2]
4653:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4652              		.loc 1 4653 14 view .LVU1326
 4653 0004 9869     		ldr	r0, [r3, #24]
 4654              	.LVL322:
ARM GAS  /tmp/ccjYyDGQ.s 			page 201


4657:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4655              		.loc 1 4657 5 is_stmt 1 view .LVU1327
 4656 0006 1368     		ldr	r3, [r2]
 4657 0008 DB6A     		ldr	r3, [r3, #44]
 4658 000a 1268     		ldr	r2, [r2]
 4659 000c C3F10503 		rsb	r3, r3, #5
 4660 0010 9361     		str	r3, [r2, #24]
4659:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** }
 4661              		.loc 1 4659 5 view .LVU1328
4660:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 4662              		.loc 1 4660 1 is_stmt 0 view .LVU1329
 4663 0012 7047     		bx	lr
 4664              	.L345:
 4665              		.align	2
 4666              	.L344:
 4667 0014 00000000 		.word	.LANCHOR8
 4668              		.cfi_endproc
 4669              	.LFE42:
 4671              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 4672              		.align	1
 4673              		.global	pvTaskIncrementMutexHeldCount
 4674              		.syntax unified
 4675              		.thumb
 4676              		.thumb_func
 4678              	pvTaskIncrementMutexHeldCount:
 4679              	.LFB43:
4666:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         /* If xSemaphoreCreateMutex() is called before any tasks have been created
 4680              		.loc 1 4666 5 is_stmt 1 view -0
 4681              		.cfi_startproc
 4682              		@ args = 0, pretend = 0, frame = 0
 4683              		@ frame_needed = 0, uses_anonymous_args = 0
 4684              		@ link register save eliminated.
4669:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 4685              		.loc 1 4669 9 view .LVU1331
4669:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 4686              		.loc 1 4669 26 is_stmt 0 view .LVU1332
 4687 0000 054B     		ldr	r3, .L348
 4688 0002 1B68     		ldr	r3, [r3]
4669:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 4689              		.loc 1 4669 11 view .LVU1333
 4690 0004 23B1     		cbz	r3, .L347
4671:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 4691              		.loc 1 4671 13 is_stmt 1 view .LVU1334
4671:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 4692              		.loc 1 4671 27 is_stmt 0 view .LVU1335
 4693 0006 044B     		ldr	r3, .L348
 4694 0008 1A68     		ldr	r2, [r3]
 4695 000a 936C     		ldr	r3, [r2, #72]
4671:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 4696              		.loc 1 4671 44 view .LVU1336
 4697 000c 0133     		adds	r3, r3, #1
 4698 000e 9364     		str	r3, [r2, #72]
 4699              	.L347:
4674:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 4700              		.loc 1 4674 9 is_stmt 1 view .LVU1337
4674:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 4701              		.loc 1 4674 16 is_stmt 0 view .LVU1338
ARM GAS  /tmp/ccjYyDGQ.s 			page 202


 4702 0010 014B     		ldr	r3, .L348
 4703 0012 1868     		ldr	r0, [r3]
4675:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4704              		.loc 1 4675 5 view .LVU1339
 4705 0014 7047     		bx	lr
 4706              	.L349:
 4707 0016 00BF     		.align	2
 4708              	.L348:
 4709 0018 00000000 		.word	.LANCHOR8
 4710              		.cfi_endproc
 4711              	.LFE43:
 4713              		.section	.text.ulTaskGenericNotifyTake,"ax",%progbits
 4714              		.align	1
 4715              		.global	ulTaskGenericNotifyTake
 4716              		.syntax unified
 4717              		.thumb
 4718              		.thumb_func
 4720              	ulTaskGenericNotifyTake:
 4721              	.LVL323:
 4722              	.LFB44:
4685:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint32_t ulReturn;
 4723              		.loc 1 4685 5 is_stmt 1 view -0
 4724              		.cfi_startproc
 4725              		@ args = 0, pretend = 0, frame = 0
 4726              		@ frame_needed = 0, uses_anonymous_args = 0
4686:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4727              		.loc 1 4686 9 view .LVU1341
4688:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4728              		.loc 1 4688 9 view .LVU1342
 4729 0000 40B1     		cbz	r0, .L351
4688:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4730              		.loc 1 4688 9 view .LVU1343
 4731              	.LBB212:
 4732              	.LBI212:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4733              		.loc 2 194 34 view .LVU1344
 4734              	.LBB213:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4735              		.loc 2 196 9 view .LVU1345
 4736              		.loc 2 198 9 view .LVU1346
 4737              		.syntax unified
 4738              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4739 0002 4FF05003 			mov r3, #80												
 4740 0006 83F31188 		msr basepri, r3											
 4741 000a BFF36F8F 		isb														
 4742 000e BFF34F8F 		dsb														
 4743              	
 4744              	@ 0 "" 2
 4745              	.LVL324:
 4746              		.thumb
 4747              		.syntax unified
 4748              	.L352:
 4749              		.loc 2 198 9 is_stmt 0 view .LVU1347
 4750              	.LBE213:
 4751              	.LBE212:
4688:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4752              		.loc 1 4688 9 is_stmt 1 discriminator 1 view .LVU1348
ARM GAS  /tmp/ccjYyDGQ.s 			page 203


4688:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4753              		.loc 1 4688 9 discriminator 1 view .LVU1349
4688:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4754              		.loc 1 4688 9 discriminator 1 view .LVU1350
 4755 0012 FEE7     		b	.L352
 4756              	.L351:
4685:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint32_t ulReturn;
 4757              		.loc 1 4685 5 is_stmt 0 discriminator 2 view .LVU1351
 4758 0014 70B5     		push	{r4, r5, r6, lr}
 4759              	.LCFI46:
 4760              		.cfi_def_cfa_offset 16
 4761              		.cfi_offset 4, -16
 4762              		.cfi_offset 5, -12
 4763              		.cfi_offset 6, -8
 4764              		.cfi_offset 14, -4
 4765 0016 0E46     		mov	r6, r1
 4766 0018 1446     		mov	r4, r2
 4767 001a 0546     		mov	r5, r0
4688:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4768              		.loc 1 4688 78 is_stmt 1 discriminator 2 view .LVU1352
4690:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 4769              		.loc 1 4690 9 discriminator 2 view .LVU1353
 4770 001c FFF7FEFF 		bl	vPortEnterCritical
 4771              	.LVL325:
4693:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4772              		.loc 1 4693 13 discriminator 2 view .LVU1354
4693:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4773              		.loc 1 4693 29 is_stmt 0 discriminator 2 view .LVU1355
 4774 0020 214B     		ldr	r3, .L359
 4775 0022 1B68     		ldr	r3, [r3]
4693:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4776              		.loc 1 4693 46 discriminator 2 view .LVU1356
 4777 0024 05F11202 		add	r2, r5, #18
 4778 0028 03EB8203 		add	r3, r3, r2, lsl #2
 4779 002c 5B68     		ldr	r3, [r3, #4]
4693:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4780              		.loc 1 4693 15 discriminator 2 view .LVU1357
 4781 002e 33B9     		cbnz	r3, .L353
4696:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4782              		.loc 1 4696 17 is_stmt 1 view .LVU1358
4696:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4783              		.loc 1 4696 29 is_stmt 0 view .LVU1359
 4784 0030 1D4B     		ldr	r3, .L359
 4785 0032 1B68     		ldr	r3, [r3]
4696:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4786              		.loc 1 4696 62 view .LVU1360
 4787 0034 2B44     		add	r3, r3, r5
 4788 0036 0122     		movs	r2, #1
 4789 0038 83F85020 		strb	r2, [r3, #80]
4698:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4790              		.loc 1 4698 17 is_stmt 1 view .LVU1361
4698:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4791              		.loc 1 4698 19 is_stmt 0 view .LVU1362
 4792 003c E4B9     		cbnz	r4, .L358
 4793              	.L353:
4716:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 4794              		.loc 1 4716 41 is_stmt 1 view .LVU1363
ARM GAS  /tmp/ccjYyDGQ.s 			page 204


4719:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4795              		.loc 1 4719 9 view .LVU1364
 4796 003e FFF7FEFF 		bl	vPortExitCritical
 4797              	.LVL326:
4721:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 4798              		.loc 1 4721 9 view .LVU1365
 4799 0042 FFF7FEFF 		bl	vPortEnterCritical
 4800              	.LVL327:
4723:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
 4801              		.loc 1 4723 51 view .LVU1366
4724:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4802              		.loc 1 4724 13 view .LVU1367
4724:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4803              		.loc 1 4724 36 is_stmt 0 view .LVU1368
 4804 0046 184B     		ldr	r3, .L359
 4805 0048 1B68     		ldr	r3, [r3]
4724:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4806              		.loc 1 4724 22 view .LVU1369
 4807 004a 05F11202 		add	r2, r5, #18
 4808 004e 03EB8203 		add	r3, r3, r2, lsl #2
 4809 0052 5C68     		ldr	r4, [r3, #4]
 4810              	.LVL328:
4726:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4811              		.loc 1 4726 13 is_stmt 1 view .LVU1370
4726:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4812              		.loc 1 4726 15 is_stmt 0 view .LVU1371
 4813 0054 34B1     		cbz	r4, .L354
4728:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4814              		.loc 1 4728 17 is_stmt 1 view .LVU1372
4728:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4815              		.loc 1 4728 19 is_stmt 0 view .LVU1373
 4816 0056 F6B1     		cbz	r6, .L355
4730:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4817              		.loc 1 4730 21 is_stmt 1 view .LVU1374
4730:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4818              		.loc 1 4730 33 is_stmt 0 view .LVU1375
 4819 0058 134B     		ldr	r3, .L359
 4820 005a 1B68     		ldr	r3, [r3]
4730:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4821              		.loc 1 4730 68 view .LVU1376
 4822 005c 03EB8203 		add	r3, r3, r2, lsl #2
 4823 0060 0022     		movs	r2, #0
 4824 0062 5A60     		str	r2, [r3, #4]
 4825              	.L354:
4739:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 4826              		.loc 1 4739 41 is_stmt 1 view .LVU1377
4742:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 4827              		.loc 1 4742 13 view .LVU1378
4742:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 4828              		.loc 1 4742 25 is_stmt 0 view .LVU1379
 4829 0064 104B     		ldr	r3, .L359
 4830 0066 1B68     		ldr	r3, [r3]
4742:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 4831              		.loc 1 4742 58 view .LVU1380
 4832 0068 1D44     		add	r5, r5, r3
 4833              	.LVL329:
4742:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
ARM GAS  /tmp/ccjYyDGQ.s 			page 205


 4834              		.loc 1 4742 58 view .LVU1381
 4835 006a 0023     		movs	r3, #0
 4836 006c 85F85030 		strb	r3, [r5, #80]
4744:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4837              		.loc 1 4744 9 is_stmt 1 view .LVU1382
 4838 0070 FFF7FEFF 		bl	vPortExitCritical
 4839              	.LVL330:
4746:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 4840              		.loc 1 4746 9 view .LVU1383
4747:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4841              		.loc 1 4747 5 is_stmt 0 view .LVU1384
 4842 0074 2046     		mov	r0, r4
 4843 0076 70BD     		pop	{r4, r5, r6, pc}
 4844              	.LVL331:
 4845              	.L358:
4700:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_TAKE_BLOCK( uxIndexToWait );
 4846              		.loc 1 4700 21 is_stmt 1 view .LVU1385
 4847 0078 1146     		mov	r1, r2
 4848 007a 2046     		mov	r0, r4
 4849 007c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4850              	.LVL332:
4701:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4851              		.loc 1 4701 65 view .LVU1386
4707:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4852              		.loc 1 4707 21 view .LVU1387
 4853 0080 4FF0E023 		mov	r3, #-536813568
 4854 0084 4FF08052 		mov	r2, #268435456
 4855 0088 C3F8042D 		str	r2, [r3, #3332]
4707:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4856              		.loc 1 4707 21 view .LVU1388
 4857              		.syntax unified
 4858              	@ 4707 "../../Middlewares/Third_Party/FreeRTOS/tasks.c" 1
 4859 008c BFF34F8F 		dsb
 4860              	@ 0 "" 2
4707:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4861              		.loc 1 4707 21 view .LVU1389
 4862              	@ 4707 "../../Middlewares/Third_Party/FreeRTOS/tasks.c" 1
 4863 0090 BFF36F8F 		isb
 4864              	@ 0 "" 2
4707:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4865              		.loc 1 4707 43 view .LVU1390
 4866              		.thumb
 4867              		.syntax unified
 4868 0094 D3E7     		b	.L353
 4869              	.LVL333:
 4870              	.L355:
4734:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4871              		.loc 1 4734 21 view .LVU1391
4734:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4872              		.loc 1 4734 33 is_stmt 0 view .LVU1392
 4873 0096 044B     		ldr	r3, .L359
 4874 0098 1B68     		ldr	r3, [r3]
4734:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4875              		.loc 1 4734 79 view .LVU1393
 4876 009a 621E     		subs	r2, r4, #1
4734:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 4877              		.loc 1 4734 68 view .LVU1394
ARM GAS  /tmp/ccjYyDGQ.s 			page 206


 4878 009c 05F11201 		add	r1, r5, #18
 4879 00a0 03EB8103 		add	r3, r3, r1, lsl #2
 4880 00a4 5A60     		str	r2, [r3, #4]
 4881 00a6 DDE7     		b	.L354
 4882              	.L360:
 4883              		.align	2
 4884              	.L359:
 4885 00a8 00000000 		.word	.LANCHOR8
 4886              		.cfi_endproc
 4887              	.LFE44:
 4889              		.section	.text.xTaskGenericNotifyWait,"ax",%progbits
 4890              		.align	1
 4891              		.global	xTaskGenericNotifyWait
 4892              		.syntax unified
 4893              		.thumb
 4894              		.thumb_func
 4896              	xTaskGenericNotifyWait:
 4897              	.LVL334:
 4898              	.LFB45:
4759:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 4899              		.loc 1 4759 5 is_stmt 1 view -0
 4900              		.cfi_startproc
 4901              		@ args = 4, pretend = 0, frame = 0
 4902              		@ frame_needed = 0, uses_anonymous_args = 0
4759:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 4903              		.loc 1 4759 5 is_stmt 0 view .LVU1396
 4904 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4905              	.LCFI47:
 4906              		.cfi_def_cfa_offset 24
 4907              		.cfi_offset 3, -24
 4908              		.cfi_offset 4, -20
 4909              		.cfi_offset 5, -16
 4910              		.cfi_offset 6, -12
 4911              		.cfi_offset 7, -8
 4912              		.cfi_offset 14, -4
4760:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4913              		.loc 1 4760 9 is_stmt 1 view .LVU1397
4762:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4914              		.loc 1 4762 9 view .LVU1398
 4915 0002 40B1     		cbz	r0, .L362
4762:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4916              		.loc 1 4762 9 view .LVU1399
 4917              	.LBB214:
 4918              	.LBI214:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4919              		.loc 2 194 34 view .LVU1400
 4920              	.LBB215:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4921              		.loc 2 196 9 view .LVU1401
 4922              		.loc 2 198 9 view .LVU1402
 4923              		.syntax unified
 4924              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4925 0004 4FF05003 			mov r3, #80												
 4926 0008 83F31188 		msr basepri, r3											
 4927 000c BFF36F8F 		isb														
 4928 0010 BFF34F8F 		dsb														
 4929              	
ARM GAS  /tmp/ccjYyDGQ.s 			page 207


 4930              	@ 0 "" 2
 4931              	.LVL335:
 4932              		.thumb
 4933              		.syntax unified
 4934              	.L363:
 4935              		.loc 2 198 9 is_stmt 0 view .LVU1403
 4936              	.LBE215:
 4937              	.LBE214:
4762:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4938              		.loc 1 4762 9 is_stmt 1 discriminator 1 view .LVU1404
4762:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4939              		.loc 1 4762 9 discriminator 1 view .LVU1405
4762:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4940              		.loc 1 4762 9 discriminator 1 view .LVU1406
 4941 0014 FEE7     		b	.L363
 4942              	.LVL336:
 4943              	.L362:
4762:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4944              		.loc 1 4762 9 is_stmt 0 discriminator 1 view .LVU1407
 4945 0016 0D46     		mov	r5, r1
 4946 0018 1646     		mov	r6, r2
 4947 001a 1C46     		mov	r4, r3
 4948 001c 0746     		mov	r7, r0
4762:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4949              		.loc 1 4762 78 is_stmt 1 discriminator 2 view .LVU1408
4764:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 4950              		.loc 1 4764 9 discriminator 2 view .LVU1409
 4951 001e FFF7FEFF 		bl	vPortEnterCritical
 4952              	.LVL337:
4767:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4953              		.loc 1 4767 13 discriminator 2 view .LVU1410
4767:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4954              		.loc 1 4767 29 is_stmt 0 discriminator 2 view .LVU1411
 4955 0022 2A4B     		ldr	r3, .L371
 4956 0024 1B68     		ldr	r3, [r3]
4767:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4957              		.loc 1 4767 44 discriminator 2 view .LVU1412
 4958 0026 3B44     		add	r3, r3, r7
 4959 0028 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 4960 002c DBB2     		uxtb	r3, r3
4767:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4961              		.loc 1 4767 15 discriminator 2 view .LVU1413
 4962 002e 022B     		cmp	r3, #2
 4963 0030 10D0     		beq	.L364
4772:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4964              		.loc 1 4772 17 is_stmt 1 view .LVU1414
4772:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4965              		.loc 1 4772 64 is_stmt 0 view .LVU1415
 4966 0032 264A     		ldr	r2, .L371
 4967 0034 1368     		ldr	r3, [r2]
 4968 0036 07F11201 		add	r1, r7, #18
 4969 003a 03EB8103 		add	r3, r3, r1, lsl #2
 4970 003e 5968     		ldr	r1, [r3, #4]
 4971 0040 21EA0501 		bic	r1, r1, r5
 4972 0044 5960     		str	r1, [r3, #4]
4775:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4973              		.loc 1 4775 17 is_stmt 1 view .LVU1416
ARM GAS  /tmp/ccjYyDGQ.s 			page 208


4775:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4974              		.loc 1 4775 29 is_stmt 0 view .LVU1417
 4975 0046 1368     		ldr	r3, [r2]
4775:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4976              		.loc 1 4775 62 view .LVU1418
 4977 0048 3B44     		add	r3, r3, r7
 4978 004a 0122     		movs	r2, #1
 4979 004c 83F85020 		strb	r2, [r3, #80]
4777:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4980              		.loc 1 4777 17 is_stmt 1 view .LVU1419
4777:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 4981              		.loc 1 4777 19 is_stmt 0 view .LVU1420
 4982 0050 069B     		ldr	r3, [sp, #24]
 4983 0052 FBB9     		cbnz	r3, .L369
 4984              	.LVL338:
 4985              	.L364:
4795:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 4986              		.loc 1 4795 41 is_stmt 1 view .LVU1421
4798:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4987              		.loc 1 4798 9 view .LVU1422
 4988 0054 FFF7FEFF 		bl	vPortExitCritical
 4989              	.LVL339:
4800:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 4990              		.loc 1 4800 9 view .LVU1423
 4991 0058 FFF7FEFF 		bl	vPortEnterCritical
 4992              	.LVL340:
4802:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 4993              		.loc 1 4802 51 view .LVU1424
4804:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4994              		.loc 1 4804 13 view .LVU1425
4804:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 4995              		.loc 1 4804 15 is_stmt 0 view .LVU1426
 4996 005c 3CB1     		cbz	r4, .L365
4808:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 4997              		.loc 1 4808 17 is_stmt 1 view .LVU1427
4808:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 4998              		.loc 1 4808 53 is_stmt 0 view .LVU1428
 4999 005e 1B4B     		ldr	r3, .L371
 5000 0060 1B68     		ldr	r3, [r3]
4808:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 5001              		.loc 1 4808 70 view .LVU1429
 5002 0062 07F11202 		add	r2, r7, #18
 5003 0066 03EB8203 		add	r3, r3, r2, lsl #2
 5004 006a 5B68     		ldr	r3, [r3, #4]
4808:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 5005              		.loc 1 4808 39 view .LVU1430
 5006 006c 2360     		str	r3, [r4]
 5007              	.L365:
4815:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5008              		.loc 1 4815 13 is_stmt 1 view .LVU1431
4815:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5009              		.loc 1 4815 29 is_stmt 0 view .LVU1432
 5010 006e 174B     		ldr	r3, .L371
 5011 0070 1B68     		ldr	r3, [r3]
4815:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5012              		.loc 1 4815 44 view .LVU1433
 5013 0072 3B44     		add	r3, r3, r7
ARM GAS  /tmp/ccjYyDGQ.s 			page 209


 5014 0074 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 5015 0078 DBB2     		uxtb	r3, r3
4815:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5016              		.loc 1 4815 15 view .LVU1434
 5017 007a 022B     		cmp	r3, #2
 5018 007c 19D0     		beq	.L370
4818:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 5019              		.loc 1 4818 25 view .LVU1435
 5020 007e 0024     		movs	r4, #0
 5021              	.LVL341:
 5022              	.L366:
4828:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 5023              		.loc 1 4828 13 is_stmt 1 view .LVU1436
4828:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 5024              		.loc 1 4828 25 is_stmt 0 view .LVU1437
 5025 0080 124B     		ldr	r3, .L371
 5026 0082 1B68     		ldr	r3, [r3]
4828:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 5027              		.loc 1 4828 58 view .LVU1438
 5028 0084 1F44     		add	r7, r7, r3
 5029              	.LVL342:
4828:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 5030              		.loc 1 4828 58 view .LVU1439
 5031 0086 0023     		movs	r3, #0
 5032 0088 87F85030 		strb	r3, [r7, #80]
4830:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5033              		.loc 1 4830 9 is_stmt 1 view .LVU1440
 5034 008c FFF7FEFF 		bl	vPortExitCritical
 5035              	.LVL343:
4832:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 5036              		.loc 1 4832 9 view .LVU1441
4833:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5037              		.loc 1 4833 5 is_stmt 0 view .LVU1442
 5038 0090 2046     		mov	r0, r4
 5039 0092 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5040              	.LVL344:
 5041              	.L369:
4779:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_WAIT_BLOCK( uxIndexToWait );
 5042              		.loc 1 4779 21 is_stmt 1 view .LVU1443
 5043 0094 1146     		mov	r1, r2
 5044 0096 1846     		mov	r0, r3
 5045 0098 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5046              	.LVL345:
4780:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5047              		.loc 1 4780 65 view .LVU1444
4786:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5048              		.loc 1 4786 21 view .LVU1445
 5049 009c 4FF0E023 		mov	r3, #-536813568
 5050 00a0 4FF08052 		mov	r2, #268435456
 5051 00a4 C3F8042D 		str	r2, [r3, #3332]
 5052              	.LVL346:
4786:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5053              		.loc 1 4786 21 view .LVU1446
 5054              		.syntax unified
 5055              	@ 4786 "../../Middlewares/Third_Party/FreeRTOS/tasks.c" 1
 5056 00a8 BFF34F8F 		dsb
 5057              	@ 0 "" 2
ARM GAS  /tmp/ccjYyDGQ.s 			page 210


4786:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5058              		.loc 1 4786 21 view .LVU1447
 5059              	@ 4786 "../../Middlewares/Third_Party/FreeRTOS/tasks.c" 1
 5060 00ac BFF36F8F 		isb
 5061              	@ 0 "" 2
4786:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5062              		.loc 1 4786 43 view .LVU1448
 5063              		.thumb
 5064              		.syntax unified
 5065 00b0 D0E7     		b	.L364
 5066              	.L370:
4824:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
 5067              		.loc 1 4824 17 view .LVU1449
4824:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
 5068              		.loc 1 4824 64 is_stmt 0 view .LVU1450
 5069 00b2 064B     		ldr	r3, .L371
 5070 00b4 1B68     		ldr	r3, [r3]
 5071 00b6 07F11202 		add	r2, r7, #18
 5072 00ba 03EB8203 		add	r3, r3, r2, lsl #2
 5073 00be 5A68     		ldr	r2, [r3, #4]
 5074 00c0 22EA0602 		bic	r2, r2, r6
 5075 00c4 5A60     		str	r2, [r3, #4]
4825:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 5076              		.loc 1 4825 17 is_stmt 1 view .LVU1451
 5077              	.LVL347:
4825:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 5078              		.loc 1 4825 25 is_stmt 0 view .LVU1452
 5079 00c6 0124     		movs	r4, #1
 5080              	.LVL348:
4825:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 5081              		.loc 1 4825 25 view .LVU1453
 5082 00c8 DAE7     		b	.L366
 5083              	.L372:
 5084 00ca 00BF     		.align	2
 5085              	.L371:
 5086 00cc 00000000 		.word	.LANCHOR8
 5087              		.cfi_endproc
 5088              	.LFE45:
 5090              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5091              		.align	1
 5092              		.global	xTaskGenericNotify
 5093              		.syntax unified
 5094              		.thumb
 5095              		.thumb_func
 5097              	xTaskGenericNotify:
 5098              	.LVL349:
 5099              	.LFB46:
4845:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 5100              		.loc 1 4845 5 is_stmt 1 view -0
 5101              		.cfi_startproc
 5102              		@ args = 4, pretend = 0, frame = 0
 5103              		@ frame_needed = 0, uses_anonymous_args = 0
4845:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 5104              		.loc 1 4845 5 is_stmt 0 view .LVU1455
 5105 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5106              	.LCFI48:
 5107              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccjYyDGQ.s 			page 211


 5108              		.cfi_offset 3, -24
 5109              		.cfi_offset 4, -20
 5110              		.cfi_offset 5, -16
 5111              		.cfi_offset 6, -12
 5112              		.cfi_offset 7, -8
 5113              		.cfi_offset 14, -4
4846:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
 5114              		.loc 1 4846 9 is_stmt 1 view .LVU1456
4847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 5115              		.loc 1 4847 9 view .LVU1457
 5116              	.LVL350:
4848:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5117              		.loc 1 4848 9 view .LVU1458
4850:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 5118              		.loc 1 4850 9 view .LVU1459
 5119 0002 41B1     		cbz	r1, .L374
4850:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 5120              		.loc 1 4850 9 view .LVU1460
 5121              	.LBB216:
 5122              	.LBI216:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5123              		.loc 2 194 34 view .LVU1461
 5124              	.LBB217:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5125              		.loc 2 196 9 view .LVU1462
 5126              		.loc 2 198 9 view .LVU1463
 5127              		.syntax unified
 5128              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5129 0004 4FF05003 			mov r3, #80												
 5130 0008 83F31188 		msr basepri, r3											
 5131 000c BFF36F8F 		isb														
 5132 0010 BFF34F8F 		dsb														
 5133              	
 5134              	@ 0 "" 2
 5135              	.LVL351:
 5136              		.thumb
 5137              		.syntax unified
 5138              	.L375:
 5139              		.loc 2 198 9 is_stmt 0 view .LVU1464
 5140              	.LBE217:
 5141              	.LBE216:
4850:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 5142              		.loc 1 4850 9 is_stmt 1 discriminator 1 view .LVU1465
4850:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 5143              		.loc 1 4850 9 discriminator 1 view .LVU1466
4850:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 5144              		.loc 1 4850 9 discriminator 1 view .LVU1467
 5145 0014 FEE7     		b	.L375
 5146              	.LVL352:
 5147              	.L374:
4850:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 5148              		.loc 1 4850 9 is_stmt 0 discriminator 1 view .LVU1468
 5149 0016 0446     		mov	r4, r0
 5150 0018 1746     		mov	r7, r2
 5151 001a 1E46     		mov	r6, r3
 5152 001c 0D46     		mov	r5, r1
4850:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
ARM GAS  /tmp/ccjYyDGQ.s 			page 212


 5153              		.loc 1 4850 80 is_stmt 1 discriminator 2 view .LVU1469
4851:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 5154              		.loc 1 4851 9 discriminator 2 view .LVU1470
 5155 001e C0B1     		cbz	r0, .L396
4851:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 5156              		.loc 1 4851 38 discriminator 2 view .LVU1471
4852:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5157              		.loc 1 4852 9 discriminator 2 view .LVU1472
 5158              	.LVL353:
4854:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 5159              		.loc 1 4854 9 discriminator 2 view .LVU1473
 5160 0020 FFF7FEFF 		bl	vPortEnterCritical
 5161              	.LVL354:
4856:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5162              		.loc 1 4856 13 discriminator 2 view .LVU1474
4856:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5163              		.loc 1 4856 15 is_stmt 0 discriminator 2 view .LVU1475
 5164 0024 069B     		ldr	r3, [sp, #24]
 5165 0026 33B1     		cbz	r3, .L378
4858:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 5166              		.loc 1 4858 17 is_stmt 1 view .LVU1476
4858:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 5167              		.loc 1 4858 71 is_stmt 0 view .LVU1477
 5168 0028 05F11203 		add	r3, r5, #18
 5169 002c 04EB8303 		add	r3, r4, r3, lsl #2
 5170 0030 5B68     		ldr	r3, [r3, #4]
4858:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 5171              		.loc 1 4858 47 view .LVU1478
 5172 0032 069A     		ldr	r2, [sp, #24]
 5173 0034 1360     		str	r3, [r2]
 5174              	.L378:
4861:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5175              		.loc 1 4861 13 is_stmt 1 view .LVU1479
4861:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5176              		.loc 1 4861 35 is_stmt 0 view .LVU1480
 5177 0036 6319     		adds	r3, r4, r5
 5178 0038 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 5179 003c D2B2     		uxtb	r2, r2
 5180              	.LVL355:
4863:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5181              		.loc 1 4863 13 is_stmt 1 view .LVU1481
4863:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5182              		.loc 1 4863 53 is_stmt 0 view .LVU1482
 5183 003e 0221     		movs	r1, #2
 5184 0040 83F85010 		strb	r1, [r3, #80]
4865:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5185              		.loc 1 4865 13 is_stmt 1 view .LVU1483
 5186 0044 042E     		cmp	r6, #4
 5187 0046 2FD8     		bhi	.L379
 5188 0048 DFE806F0 		tbb	[pc, r6]
 5189              	.L381:
 5190 004c 3B       		.byte	(.L392-.L381)/2
 5191 004d 0C       		.byte	(.L384-.L381)/2
 5192 004e 15       		.byte	(.L383-.L381)/2
 5193 004f 1E       		.byte	(.L382-.L381)/2
 5194 0050 25       		.byte	(.L380-.L381)/2
 5195              	.LVL356:
ARM GAS  /tmp/ccjYyDGQ.s 			page 213


 5196 0051 00       		.p2align 1
 5197              	.L396:
4851:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 5198              		.loc 1 4851 9 view .LVU1484
 5199              	.LBB218:
 5200              	.LBI218:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5201              		.loc 2 194 34 view .LVU1485
 5202              	.LBB219:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5203              		.loc 2 196 9 view .LVU1486
 5204              		.loc 2 198 9 view .LVU1487
 5205              		.syntax unified
 5206              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5207 0052 4FF05003 			mov r3, #80												
 5208 0056 83F31188 		msr basepri, r3											
 5209 005a BFF36F8F 		isb														
 5210 005e BFF34F8F 		dsb														
 5211              	
 5212              	@ 0 "" 2
 5213              	.LVL357:
 5214              		.thumb
 5215              		.syntax unified
 5216              	.L377:
 5217              		.loc 2 198 9 is_stmt 0 view .LVU1488
 5218              	.LBE219:
 5219              	.LBE218:
4851:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 5220              		.loc 1 4851 9 is_stmt 1 discriminator 2 view .LVU1489
4851:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 5221              		.loc 1 4851 9 discriminator 2 view .LVU1490
4851:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 5222              		.loc 1 4851 9 discriminator 2 view .LVU1491
 5223 0062 FEE7     		b	.L377
 5224              	.LVL358:
 5225              	.L384:
4868:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5226              		.loc 1 4868 21 view .LVU1492
4868:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5227              		.loc 1 4868 63 is_stmt 0 view .LVU1493
 5228 0064 05F11203 		add	r3, r5, #18
 5229 0068 04EB8303 		add	r3, r4, r3, lsl #2
 5230 006c 5968     		ldr	r1, [r3, #4]
 5231 006e 0F43     		orrs	r7, r7, r1
 5232              	.LVL359:
4868:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5233              		.loc 1 4868 63 view .LVU1494
 5234 0070 5F60     		str	r7, [r3, #4]
4869:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5235              		.loc 1 4869 21 is_stmt 1 view .LVU1495
4847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 5236              		.loc 1 4847 20 is_stmt 0 view .LVU1496
 5237 0072 0125     		movs	r5, #1
 5238              	.LVL360:
4869:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5239              		.loc 1 4869 21 view .LVU1497
 5240 0074 26E0     		b	.L385
ARM GAS  /tmp/ccjYyDGQ.s 			page 214


 5241              	.LVL361:
 5242              	.L383:
4872:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5243              		.loc 1 4872 21 is_stmt 1 view .LVU1498
4872:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5244              		.loc 1 4872 45 is_stmt 0 view .LVU1499
 5245 0076 05F11203 		add	r3, r5, #18
 5246 007a 04EB8303 		add	r3, r4, r3, lsl #2
 5247 007e 5968     		ldr	r1, [r3, #4]
4872:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5248              		.loc 1 4872 66 view .LVU1500
 5249 0080 0131     		adds	r1, r1, #1
 5250 0082 5960     		str	r1, [r3, #4]
4873:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5251              		.loc 1 4873 21 is_stmt 1 view .LVU1501
4847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 5252              		.loc 1 4847 20 is_stmt 0 view .LVU1502
 5253 0084 0125     		movs	r5, #1
 5254              	.LVL362:
4873:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5255              		.loc 1 4873 21 view .LVU1503
 5256 0086 1DE0     		b	.L385
 5257              	.LVL363:
 5258              	.L382:
4876:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5259              		.loc 1 4876 21 is_stmt 1 view .LVU1504
4876:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5260              		.loc 1 4876 63 is_stmt 0 view .LVU1505
 5261 0088 05F11203 		add	r3, r5, #18
 5262 008c 04EB8303 		add	r3, r4, r3, lsl #2
 5263 0090 5F60     		str	r7, [r3, #4]
4877:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5264              		.loc 1 4877 21 is_stmt 1 view .LVU1506
4847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 5265              		.loc 1 4847 20 is_stmt 0 view .LVU1507
 5266 0092 0125     		movs	r5, #1
 5267              	.LVL364:
4877:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5268              		.loc 1 4877 21 view .LVU1508
 5269 0094 16E0     		b	.L385
 5270              	.LVL365:
 5271              	.L380:
4881:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 5272              		.loc 1 4881 21 is_stmt 1 view .LVU1509
4881:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 5273              		.loc 1 4881 23 is_stmt 0 view .LVU1510
 5274 0096 022A     		cmp	r2, #2
 5275 0098 4DD0     		beq	.L393
4883:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 5276              		.loc 1 4883 25 is_stmt 1 view .LVU1511
4883:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 5277              		.loc 1 4883 67 is_stmt 0 view .LVU1512
 5278 009a 05F11203 		add	r3, r5, #18
 5279 009e 04EB8303 		add	r3, r4, r3, lsl #2
 5280 00a2 5F60     		str	r7, [r3, #4]
4847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 5281              		.loc 1 4847 20 view .LVU1513
ARM GAS  /tmp/ccjYyDGQ.s 			page 215


 5282 00a4 0125     		movs	r5, #1
 5283              	.LVL366:
4847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 5284              		.loc 1 4847 20 view .LVU1514
 5285 00a6 0DE0     		b	.L385
 5286              	.LVL367:
 5287              	.L379:
4904:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5288              		.loc 1 4904 21 is_stmt 1 view .LVU1515
 5289 00a8 304B     		ldr	r3, .L398
 5290 00aa 1B68     		ldr	r3, [r3]
 5291 00ac 002B     		cmp	r3, #0
 5292 00ae 44D0     		beq	.L394
4904:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5293              		.loc 1 4904 21 view .LVU1516
 5294              	.LBB220:
 5295              	.LBI220:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5296              		.loc 2 194 34 view .LVU1517
 5297              	.LBB221:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5298              		.loc 2 196 9 view .LVU1518
 5299              		.loc 2 198 9 view .LVU1519
 5300              		.syntax unified
 5301              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5302 00b0 4FF05003 			mov r3, #80												
 5303 00b4 83F31188 		msr basepri, r3											
 5304 00b8 BFF36F8F 		isb														
 5305 00bc BFF34F8F 		dsb														
 5306              	
 5307              	@ 0 "" 2
 5308              	.LVL368:
 5309              		.thumb
 5310              		.syntax unified
 5311              	.L386:
 5312              		.loc 2 198 9 is_stmt 0 view .LVU1520
 5313              	.LBE221:
 5314              	.LBE220:
4904:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5315              		.loc 1 4904 21 is_stmt 1 discriminator 3 view .LVU1521
4904:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5316              		.loc 1 4904 21 discriminator 3 view .LVU1522
4904:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5317              		.loc 1 4904 21 discriminator 3 view .LVU1523
 5318 00c0 FEE7     		b	.L386
 5319              	.L392:
4865:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5320              		.loc 1 4865 13 is_stmt 0 view .LVU1524
 5321 00c2 0125     		movs	r5, #1
 5322              	.LVL369:
 5323              	.L385:
4909:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5324              		.loc 1 4909 48 is_stmt 1 view .LVU1525
4913:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5325              		.loc 1 4913 13 view .LVU1526
4913:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5326              		.loc 1 4913 15 is_stmt 0 view .LVU1527
ARM GAS  /tmp/ccjYyDGQ.s 			page 216


 5327 00c4 012A     		cmp	r2, #1
 5328 00c6 4DD1     		bne	.L387
 5329              	.LBB222:
4915:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 5330              		.loc 1 4915 17 is_stmt 1 view .LVU1528
 5331 00c8 6369     		ldr	r3, [r4, #20]
 5332              	.LVL370:
4915:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 5333              		.loc 1 4915 17 view .LVU1529
 5334 00ca A268     		ldr	r2, [r4, #8]
 5335              	.LVL371:
4915:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 5336              		.loc 1 4915 17 is_stmt 0 view .LVU1530
 5337 00cc E168     		ldr	r1, [r4, #12]
 5338 00ce 9160     		str	r1, [r2, #8]
4915:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 5339              		.loc 1 4915 17 is_stmt 1 view .LVU1531
 5340 00d0 E268     		ldr	r2, [r4, #12]
 5341 00d2 A168     		ldr	r1, [r4, #8]
 5342 00d4 5160     		str	r1, [r2, #4]
4915:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 5343              		.loc 1 4915 17 view .LVU1532
 5344 00d6 5968     		ldr	r1, [r3, #4]
 5345 00d8 221D     		adds	r2, r4, #4
 5346 00da 9142     		cmp	r1, r2
 5347 00dc 2FD0     		beq	.L397
 5348              	.L388:
4915:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 5349              		.loc 1 4915 17 discriminator 3 view .LVU1533
 5350 00de 0021     		movs	r1, #0
 5351 00e0 6161     		str	r1, [r4, #20]
4915:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 5352              		.loc 1 4915 17 discriminator 3 view .LVU1534
 5353 00e2 1968     		ldr	r1, [r3]
 5354 00e4 0139     		subs	r1, r1, #1
 5355 00e6 1960     		str	r1, [r3]
 5356              	.LBE222:
4915:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 5357              		.loc 1 4915 62 discriminator 3 view .LVU1535
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5358              		.loc 1 4916 17 discriminator 3 view .LVU1536
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5359              		.loc 1 4916 17 discriminator 3 view .LVU1537
 5360 00e8 E36A     		ldr	r3, [r4, #44]
 5361              	.LVL372:
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5362              		.loc 1 4916 17 is_stmt 0 discriminator 3 view .LVU1538
 5363 00ea 2149     		ldr	r1, .L398+4
 5364 00ec 0968     		ldr	r1, [r1]
 5365 00ee 8B42     		cmp	r3, r1
 5366 00f0 01D9     		bls	.L389
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5367              		.loc 1 4916 17 is_stmt 1 discriminator 1 view .LVU1539
 5368 00f2 1F49     		ldr	r1, .L398+4
 5369 00f4 0B60     		str	r3, [r1]
 5370              	.L389:
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 217


 5371              		.loc 1 4916 17 discriminator 3 view .LVU1540
 5372              	.LBB223:
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5373              		.loc 1 4916 17 discriminator 3 view .LVU1541
 5374 00f6 1F49     		ldr	r1, .L398+8
 5375 00f8 03EB8303 		add	r3, r3, r3, lsl #2
 5376 00fc 01EB8303 		add	r3, r1, r3, lsl #2
 5377 0100 5B68     		ldr	r3, [r3, #4]
 5378              	.LVL373:
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5379              		.loc 1 4916 17 discriminator 3 view .LVU1542
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5380              		.loc 1 4916 17 discriminator 3 view .LVU1543
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5381              		.loc 1 4916 17 discriminator 3 view .LVU1544
 5382 0102 A360     		str	r3, [r4, #8]
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5383              		.loc 1 4916 17 discriminator 3 view .LVU1545
 5384 0104 9868     		ldr	r0, [r3, #8]
 5385 0106 E060     		str	r0, [r4, #12]
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5386              		.loc 1 4916 17 discriminator 3 view .LVU1546
 5387 0108 4260     		str	r2, [r0, #4]
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5388              		.loc 1 4916 17 discriminator 3 view .LVU1547
 5389 010a 9A60     		str	r2, [r3, #8]
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5390              		.loc 1 4916 17 discriminator 3 view .LVU1548
 5391 010c E36A     		ldr	r3, [r4, #44]
 5392              	.LVL374:
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5393              		.loc 1 4916 17 is_stmt 0 discriminator 3 view .LVU1549
 5394 010e 03EB8302 		add	r2, r3, r3, lsl #2
 5395 0112 9000     		lsls	r0, r2, #2
 5396 0114 01EB8202 		add	r2, r1, r2, lsl #2
 5397 0118 6261     		str	r2, [r4, #20]
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5398              		.loc 1 4916 17 is_stmt 1 discriminator 3 view .LVU1550
 5399 011a 0A58     		ldr	r2, [r1, r0]
 5400 011c 0132     		adds	r2, r2, #1
 5401 011e 0A50     		str	r2, [r1, r0]
 5402              	.LBE223:
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5403              		.loc 1 4916 17 discriminator 3 view .LVU1551
4916:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5404              		.loc 1 4916 47 discriminator 3 view .LVU1552
4919:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5405              		.loc 1 4919 17 discriminator 3 view .LVU1553
 5406 0120 A36A     		ldr	r3, [r4, #40]
 5407 0122 7BB1     		cbz	r3, .L390
4919:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5408              		.loc 1 4919 17 view .LVU1554
 5409              	.LBB224:
 5410              	.LBI224:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5411              		.loc 2 194 34 view .LVU1555
 5412              	.LBB225:
ARM GAS  /tmp/ccjYyDGQ.s 			page 218


 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5413              		.loc 2 196 9 view .LVU1556
 5414              		.loc 2 198 9 view .LVU1557
 5415              		.syntax unified
 5416              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5417 0124 4FF05003 			mov r3, #80												
 5418 0128 83F31188 		msr basepri, r3											
 5419 012c BFF36F8F 		isb														
 5420 0130 BFF34F8F 		dsb														
 5421              	
 5422              	@ 0 "" 2
 5423              	.LVL375:
 5424              		.thumb
 5425              		.syntax unified
 5426              	.L391:
 5427              		.loc 2 198 9 is_stmt 0 view .LVU1558
 5428              	.LBE225:
 5429              	.LBE224:
4919:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5430              		.loc 1 4919 17 is_stmt 1 discriminator 4 view .LVU1559
4919:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5431              		.loc 1 4919 17 discriminator 4 view .LVU1560
4919:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5432              		.loc 1 4919 17 discriminator 4 view .LVU1561
 5433 0134 FEE7     		b	.L391
 5434              	.LVL376:
 5435              	.L393:
4888:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 5436              		.loc 1 4888 33 is_stmt 0 view .LVU1562
 5437 0136 0025     		movs	r5, #0
 5438              	.LVL377:
4888:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 5439              		.loc 1 4888 33 view .LVU1563
 5440 0138 C4E7     		b	.L385
 5441              	.LVL378:
 5442              	.L394:
4847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 5443              		.loc 1 4847 20 view .LVU1564
 5444 013a 0125     		movs	r5, #1
 5445              	.LVL379:
4847:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 5446              		.loc 1 4847 20 view .LVU1565
 5447 013c C2E7     		b	.L385
 5448              	.LVL380:
 5449              	.L397:
 5450              	.LBB226:
4915:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 5451              		.loc 1 4915 17 is_stmt 1 discriminator 1 view .LVU1566
 5452 013e E168     		ldr	r1, [r4, #12]
 5453 0140 5960     		str	r1, [r3, #4]
 5454 0142 CCE7     		b	.L388
 5455              	.LVL381:
 5456              	.L390:
4915:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 5457              		.loc 1 4915 17 is_stmt 0 discriminator 1 view .LVU1567
 5458              	.LBE226:
4919:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
ARM GAS  /tmp/ccjYyDGQ.s 			page 219


 5459              		.loc 1 4919 94 is_stmt 1 discriminator 2 view .LVU1568
4937:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 5460              		.loc 1 4937 17 discriminator 2 view .LVU1569
4937:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 5461              		.loc 1 4937 26 is_stmt 0 discriminator 2 view .LVU1570
 5462 0144 E26A     		ldr	r2, [r4, #44]
4937:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 5463              		.loc 1 4937 53 discriminator 2 view .LVU1571
 5464 0146 0C4B     		ldr	r3, .L398+12
 5465 0148 1B68     		ldr	r3, [r3]
 5466 014a DB6A     		ldr	r3, [r3, #44]
4937:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 5467              		.loc 1 4937 19 discriminator 2 view .LVU1572
 5468 014c 9A42     		cmp	r2, r3
 5469 014e 09D9     		bls	.L387
4941:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5470              		.loc 1 4941 21 is_stmt 1 view .LVU1573
 5471 0150 4FF0E023 		mov	r3, #-536813568
 5472 0154 4FF08052 		mov	r2, #268435456
 5473 0158 C3F8042D 		str	r2, [r3, #3332]
 5474              	.LVL382:
4941:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5475              		.loc 1 4941 21 view .LVU1574
 5476              		.syntax unified
 5477              	@ 4941 "../../Middlewares/Third_Party/FreeRTOS/tasks.c" 1
 5478 015c BFF34F8F 		dsb
 5479              	@ 0 "" 2
4941:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5480              		.loc 1 4941 21 view .LVU1575
 5481              	@ 4941 "../../Middlewares/Third_Party/FreeRTOS/tasks.c" 1
 5482 0160 BFF36F8F 		isb
 5483              	@ 0 "" 2
4941:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5484              		.loc 1 4941 52 view .LVU1576
 5485              		.thumb
 5486              		.syntax unified
 5487              	.L387:
4950:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 5488              		.loc 1 4950 41 view .LVU1577
4953:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5489              		.loc 1 4953 9 view .LVU1578
 5490 0164 FFF7FEFF 		bl	vPortExitCritical
 5491              	.LVL383:
4955:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 5492              		.loc 1 4955 9 view .LVU1579
4956:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5493              		.loc 1 4956 5 is_stmt 0 view .LVU1580
 5494 0168 2846     		mov	r0, r5
 5495 016a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5496              	.LVL384:
 5497              	.L399:
4956:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5498              		.loc 1 4956 5 view .LVU1581
 5499              		.align	2
 5500              	.L398:
 5501 016c 00000000 		.word	.LANCHOR12
 5502 0170 00000000 		.word	.LANCHOR11
ARM GAS  /tmp/ccjYyDGQ.s 			page 220


 5503 0174 00000000 		.word	.LANCHOR0
 5504 0178 00000000 		.word	.LANCHOR8
 5505              		.cfi_endproc
 5506              	.LFE46:
 5508              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5509              		.align	1
 5510              		.global	xTaskGenericNotifyFromISR
 5511              		.syntax unified
 5512              		.thumb
 5513              		.thumb_func
 5515              	xTaskGenericNotifyFromISR:
 5516              	.LVL385:
 5517              	.LFB47:
4969:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 5518              		.loc 1 4969 5 is_stmt 1 view -0
 5519              		.cfi_startproc
 5520              		@ args = 8, pretend = 0, frame = 0
 5521              		@ frame_needed = 0, uses_anonymous_args = 0
4969:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 5522              		.loc 1 4969 5 is_stmt 0 view .LVU1583
 5523 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5524              	.LCFI49:
 5525              		.cfi_def_cfa_offset 24
 5526              		.cfi_offset 3, -24
 5527              		.cfi_offset 4, -20
 5528              		.cfi_offset 5, -16
 5529              		.cfi_offset 6, -12
 5530              		.cfi_offset 7, -8
 5531              		.cfi_offset 14, -4
4970:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 5532              		.loc 1 4970 9 is_stmt 1 view .LVU1584
4971:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
 5533              		.loc 1 4971 9 view .LVU1585
4972:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 5534              		.loc 1 4972 9 view .LVU1586
 5535              	.LVL386:
4973:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5536              		.loc 1 4973 9 view .LVU1587
4975:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5537              		.loc 1 4975 9 view .LVU1588
 5538 0002 68B1     		cbz	r0, .L426
 5539 0004 0C46     		mov	r4, r1
 5540 0006 1746     		mov	r7, r2
 5541 0008 1D46     		mov	r5, r3
 5542 000a 0646     		mov	r6, r0
4975:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5543              		.loc 1 4975 38 discriminator 2 view .LVU1589
4976:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5544              		.loc 1 4976 9 discriminator 2 view .LVU1590
 5545 000c 89B1     		cbz	r1, .L403
4976:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5546              		.loc 1 4976 9 view .LVU1591
 5547              	.LBB227:
 5548              	.LBI227:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5549              		.loc 2 194 34 view .LVU1592
 5550              	.LBB228:
ARM GAS  /tmp/ccjYyDGQ.s 			page 221


 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5551              		.loc 2 196 9 view .LVU1593
 5552              		.loc 2 198 9 view .LVU1594
 5553              		.syntax unified
 5554              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5555 000e 4FF05003 			mov r3, #80												
 5556 0012 83F31188 		msr basepri, r3											
 5557 0016 BFF36F8F 		isb														
 5558 001a BFF34F8F 		dsb														
 5559              	
 5560              	@ 0 "" 2
 5561              	.LVL387:
 5562              		.thumb
 5563              		.syntax unified
 5564              	.L404:
 5565              		.loc 2 198 9 is_stmt 0 view .LVU1595
 5566              	.LBE228:
 5567              	.LBE227:
4976:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5568              		.loc 1 4976 9 is_stmt 1 discriminator 2 view .LVU1596
4976:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5569              		.loc 1 4976 9 discriminator 2 view .LVU1597
4976:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5570              		.loc 1 4976 9 discriminator 2 view .LVU1598
 5571 001e FEE7     		b	.L404
 5572              	.LVL388:
 5573              	.L426:
4975:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5574              		.loc 1 4975 9 view .LVU1599
 5575              	.LBB229:
 5576              	.LBI229:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5577              		.loc 2 194 34 view .LVU1600
 5578              	.LBB230:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5579              		.loc 2 196 9 view .LVU1601
 5580              		.loc 2 198 9 view .LVU1602
 5581              		.syntax unified
 5582              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5583 0020 4FF05003 			mov r3, #80												
 5584 0024 83F31188 		msr basepri, r3											
 5585 0028 BFF36F8F 		isb														
 5586 002c BFF34F8F 		dsb														
 5587              	
 5588              	@ 0 "" 2
 5589              	.LVL389:
 5590              		.thumb
 5591              		.syntax unified
 5592              	.L402:
 5593              		.loc 2 198 9 is_stmt 0 view .LVU1603
 5594              	.LBE230:
 5595              	.LBE229:
4975:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5596              		.loc 1 4975 9 is_stmt 1 discriminator 1 view .LVU1604
4975:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5597              		.loc 1 4975 9 discriminator 1 view .LVU1605
4975:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
ARM GAS  /tmp/ccjYyDGQ.s 			page 222


 5598              		.loc 1 4975 9 discriminator 1 view .LVU1606
 5599 0030 FEE7     		b	.L402
 5600              	.LVL390:
 5601              	.L403:
4976:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5602              		.loc 1 4976 80 discriminator 2 view .LVU1607
4994:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5603              		.loc 1 4994 9 discriminator 2 view .LVU1608
 5604 0032 FFF7FEFF 		bl	vPortValidateInterruptPriority
 5605              	.LVL391:
4996:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5606              		.loc 1 4996 9 discriminator 2 view .LVU1609
4998:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 5607              		.loc 1 4998 9 discriminator 2 view .LVU1610
 5608              	.LBB231:
 5609              	.LBI231:
 199:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 200:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %0, %1												\n"\
 201:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %0											\n"\
 202:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 203:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 204:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 205:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         );
 206:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 207:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 208:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 209:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 210:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 5610              		.loc 2 210 38 discriminator 2 view .LVU1611
 5611              	.LBB232:
 211:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 212:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 5612              		.loc 2 212 9 discriminator 2 view .LVU1612
 213:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 214:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 5613              		.loc 2 214 9 discriminator 2 view .LVU1613
 5614              		.syntax unified
 5615              	@ 214 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5616 0036 EFF31181 			mrs r1, basepri											
 5617 003a 4FF05003 		mov r3, #80												
 5618 003e 83F31188 		msr basepri, r3											
 5619 0042 BFF36F8F 		isb														
 5620 0046 BFF34F8F 		dsb														
 5621              	
 5622              	@ 0 "" 2
 5623              	.LVL392:
 215:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 216:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mrs %0, basepri											\n"\
 217:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %1, %2												\n"\
 218:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %1											\n"\
 219:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 220:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 221:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 222:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         );
 223:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 224:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 225:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * warnings. */
ARM GAS  /tmp/ccjYyDGQ.s 			page 223


 226:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return ulOriginalBASEPRI;
 5624              		.loc 2 226 9 discriminator 2 view .LVU1614
 5625              		.loc 2 226 9 is_stmt 0 discriminator 2 view .LVU1615
 5626              		.thumb
 5627              		.syntax unified
 5628              	.LBE232:
 5629              	.LBE231:
5000:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5630              		.loc 1 5000 13 is_stmt 1 discriminator 2 view .LVU1616
5000:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5631              		.loc 1 5000 15 is_stmt 0 discriminator 2 view .LVU1617
 5632 004a 069B     		ldr	r3, [sp, #24]
 5633 004c 33B1     		cbz	r3, .L405
5002:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 5634              		.loc 1 5002 17 is_stmt 1 view .LVU1618
5002:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 5635              		.loc 1 5002 71 is_stmt 0 view .LVU1619
 5636 004e 04F11203 		add	r3, r4, #18
 5637 0052 06EB8303 		add	r3, r6, r3, lsl #2
 5638 0056 5B68     		ldr	r3, [r3, #4]
5002:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 5639              		.loc 1 5002 47 view .LVU1620
 5640 0058 069A     		ldr	r2, [sp, #24]
 5641 005a 1360     		str	r3, [r2]
 5642              	.L405:
5005:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 5643              		.loc 1 5005 13 is_stmt 1 view .LVU1621
5005:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 5644              		.loc 1 5005 35 is_stmt 0 view .LVU1622
 5645 005c 3319     		adds	r3, r6, r4
 5646 005e 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 5647 0062 D2B2     		uxtb	r2, r2
 5648              	.LVL393:
5006:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5649              		.loc 1 5006 13 is_stmt 1 view .LVU1623
5006:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5650              		.loc 1 5006 53 is_stmt 0 view .LVU1624
 5651 0064 0220     		movs	r0, #2
 5652 0066 83F85000 		strb	r0, [r3, #80]
5008:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5653              		.loc 1 5008 13 is_stmt 1 view .LVU1625
 5654 006a 042D     		cmp	r5, #4
 5655 006c 26D8     		bhi	.L406
 5656 006e DFE805F0 		tbb	[pc, r5]
 5657              	.L408:
 5658 0072 31       		.byte	(.L422-.L408)/2
 5659 0073 03       		.byte	(.L411-.L408)/2
 5660 0074 0C       		.byte	(.L410-.L408)/2
 5661 0075 15       		.byte	(.L409-.L408)/2
 5662 0076 1C       		.byte	(.L407-.L408)/2
 5663 0077 00       		.p2align 1
 5664              	.L411:
5011:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5665              		.loc 1 5011 21 view .LVU1626
5011:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5666              		.loc 1 5011 63 is_stmt 0 view .LVU1627
 5667 0078 04F11203 		add	r3, r4, #18
ARM GAS  /tmp/ccjYyDGQ.s 			page 224


 5668 007c 06EB8303 		add	r3, r6, r3, lsl #2
 5669 0080 5868     		ldr	r0, [r3, #4]
 5670 0082 0743     		orrs	r7, r7, r0
 5671              	.LVL394:
5011:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5672              		.loc 1 5011 63 view .LVU1628
 5673 0084 5F60     		str	r7, [r3, #4]
5012:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5674              		.loc 1 5012 21 is_stmt 1 view .LVU1629
4972:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 5675              		.loc 1 4972 20 is_stmt 0 view .LVU1630
 5676 0086 0120     		movs	r0, #1
5012:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5677              		.loc 1 5012 21 view .LVU1631
 5678 0088 25E0     		b	.L412
 5679              	.LVL395:
 5680              	.L410:
5015:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5681              		.loc 1 5015 21 is_stmt 1 view .LVU1632
5015:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5682              		.loc 1 5015 45 is_stmt 0 view .LVU1633
 5683 008a 04F11203 		add	r3, r4, #18
 5684 008e 06EB8303 		add	r3, r6, r3, lsl #2
 5685 0092 5868     		ldr	r0, [r3, #4]
5015:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5686              		.loc 1 5015 66 view .LVU1634
 5687 0094 0130     		adds	r0, r0, #1
 5688 0096 5860     		str	r0, [r3, #4]
5016:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5689              		.loc 1 5016 21 is_stmt 1 view .LVU1635
4972:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 5690              		.loc 1 4972 20 is_stmt 0 view .LVU1636
 5691 0098 0120     		movs	r0, #1
5016:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5692              		.loc 1 5016 21 view .LVU1637
 5693 009a 1CE0     		b	.L412
 5694              	.L409:
5019:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5695              		.loc 1 5019 21 is_stmt 1 view .LVU1638
5019:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5696              		.loc 1 5019 63 is_stmt 0 view .LVU1639
 5697 009c 04F11203 		add	r3, r4, #18
 5698 00a0 06EB8303 		add	r3, r6, r3, lsl #2
 5699 00a4 5F60     		str	r7, [r3, #4]
5020:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5700              		.loc 1 5020 21 is_stmt 1 view .LVU1640
4972:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 5701              		.loc 1 4972 20 is_stmt 0 view .LVU1641
 5702 00a6 0120     		movs	r0, #1
5020:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5703              		.loc 1 5020 21 view .LVU1642
 5704 00a8 15E0     		b	.L412
 5705              	.L407:
5024:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 5706              		.loc 1 5024 21 is_stmt 1 view .LVU1643
5024:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 5707              		.loc 1 5024 23 is_stmt 0 view .LVU1644
ARM GAS  /tmp/ccjYyDGQ.s 			page 225


 5708 00aa 022A     		cmp	r2, #2
 5709 00ac 18D0     		beq	.L423
5026:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 5710              		.loc 1 5026 25 is_stmt 1 view .LVU1645
5026:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 5711              		.loc 1 5026 67 is_stmt 0 view .LVU1646
 5712 00ae 04F11203 		add	r3, r4, #18
 5713 00b2 06EB8303 		add	r3, r6, r3, lsl #2
 5714 00b6 5F60     		str	r7, [r3, #4]
4972:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 5715              		.loc 1 4972 20 view .LVU1647
 5716 00b8 0120     		movs	r0, #1
 5717 00ba 0CE0     		b	.L412
 5718              	.L406:
5047:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5719              		.loc 1 5047 21 is_stmt 1 view .LVU1648
 5720 00bc 384B     		ldr	r3, .L429
 5721 00be 1B68     		ldr	r3, [r3]
 5722 00c0 83B1     		cbz	r3, .L424
5047:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5723              		.loc 1 5047 21 view .LVU1649
 5724              	.LBB233:
 5725              	.LBI233:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5726              		.loc 2 194 34 view .LVU1650
 5727              	.LBB234:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5728              		.loc 2 196 9 view .LVU1651
 198:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5729              		.loc 2 198 9 view .LVU1652
 5730              		.syntax unified
 5731              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5732 00c2 4FF05003 			mov r3, #80												
 5733 00c6 83F31188 		msr basepri, r3											
 5734 00ca BFF36F8F 		isb														
 5735 00ce BFF34F8F 		dsb														
 5736              	
 5737              	@ 0 "" 2
 5738              	.LVL396:
 5739              		.thumb
 5740              		.syntax unified
 5741              	.L413:
 198:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5742              		.loc 2 198 9 is_stmt 0 view .LVU1653
 5743              	.LBE234:
 5744              	.LBE233:
5047:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5745              		.loc 1 5047 21 is_stmt 1 discriminator 3 view .LVU1654
5047:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5746              		.loc 1 5047 21 discriminator 3 view .LVU1655
5047:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     break;
 5747              		.loc 1 5047 21 discriminator 3 view .LVU1656
 5748 00d2 FEE7     		b	.L413
 5749              	.L422:
5008:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5750              		.loc 1 5008 13 is_stmt 0 view .LVU1657
 5751 00d4 0120     		movs	r0, #1
ARM GAS  /tmp/ccjYyDGQ.s 			page 226


 5752              	.LVL397:
 5753              	.L412:
5051:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5754              		.loc 1 5051 57 is_stmt 1 view .LVU1658
5055:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5755              		.loc 1 5055 13 view .LVU1659
5055:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 5756              		.loc 1 5055 15 is_stmt 0 view .LVU1660
 5757 00d6 012A     		cmp	r2, #1
 5758 00d8 06D0     		beq	.L427
 5759              	.LVL398:
 5760              	.L414:
5088:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5761              		.loc 1 5088 45 is_stmt 1 view .LVU1661
5092:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5762              		.loc 1 5092 9 view .LVU1662
 5763              	.LBB235:
 5764              	.LBI235:
 227:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 228:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 229:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 230:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 5765              		.loc 2 230 34 view .LVU1663
 5766              	.LBB236:
 231:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 232:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 5767              		.loc 2 232 9 view .LVU1664
 5768              		.syntax unified
 5769              	@ 232 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5770 00da 81F31188 			msr basepri, r1	
 5771              	@ 0 "" 2
 5772              	.LVL399:
 5773              		.loc 2 232 9 is_stmt 0 view .LVU1665
 5774              		.thumb
 5775              		.syntax unified
 5776              	.LBE236:
 5777              	.LBE235:
5094:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 5778              		.loc 1 5094 9 is_stmt 1 view .LVU1666
5095:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5779              		.loc 1 5095 5 is_stmt 0 view .LVU1667
 5780 00de F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5781              	.LVL400:
 5782              	.L423:
5031:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 5783              		.loc 1 5031 33 view .LVU1668
 5784 00e0 0020     		movs	r0, #0
 5785 00e2 F8E7     		b	.L412
 5786              	.L424:
4972:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 5787              		.loc 1 4972 20 view .LVU1669
 5788 00e4 0120     		movs	r0, #1
 5789 00e6 F6E7     		b	.L412
 5790              	.LVL401:
 5791              	.L427:
5058:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5792              		.loc 1 5058 17 is_stmt 1 view .LVU1670
ARM GAS  /tmp/ccjYyDGQ.s 			page 227


 5793 00e8 B36A     		ldr	r3, [r6, #40]
 5794 00ea 43B1     		cbz	r3, .L415
5058:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5795              		.loc 1 5058 17 view .LVU1671
 5796              	.LBB237:
 5797              	.LBI237:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5798              		.loc 2 194 34 view .LVU1672
 5799              	.LBB238:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5800              		.loc 2 196 9 view .LVU1673
 198:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5801              		.loc 2 198 9 view .LVU1674
 5802              		.syntax unified
 5803              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5804 00ec 4FF05003 			mov r3, #80												
 5805 00f0 83F31188 		msr basepri, r3											
 5806 00f4 BFF36F8F 		isb														
 5807 00f8 BFF34F8F 		dsb														
 5808              	
 5809              	@ 0 "" 2
 5810              	.LVL402:
 5811              		.thumb
 5812              		.syntax unified
 5813              	.L416:
 198:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5814              		.loc 2 198 9 is_stmt 0 view .LVU1675
 5815              	.LBE238:
 5816              	.LBE237:
5058:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5817              		.loc 1 5058 17 is_stmt 1 discriminator 4 view .LVU1676
5058:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5818              		.loc 1 5058 17 discriminator 4 view .LVU1677
5058:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5819              		.loc 1 5058 17 discriminator 4 view .LVU1678
 5820 00fc FEE7     		b	.L416
 5821              	.L415:
5058:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 5822              		.loc 1 5058 94 discriminator 2 view .LVU1679
5060:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 5823              		.loc 1 5060 17 discriminator 2 view .LVU1680
5060:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 5824              		.loc 1 5060 42 is_stmt 0 discriminator 2 view .LVU1681
 5825 00fe 294B     		ldr	r3, .L429+4
 5826 0100 1B68     		ldr	r3, [r3]
5060:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 5827              		.loc 1 5060 19 discriminator 2 view .LVU1682
 5828 0102 002B     		cmp	r3, #0
 5829 0104 3DD1     		bne	.L417
 5830              	.LBB239:
5062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5831              		.loc 1 5062 21 is_stmt 1 view .LVU1683
 5832 0106 7369     		ldr	r3, [r6, #20]
 5833              	.LVL403:
5062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5834              		.loc 1 5062 21 view .LVU1684
 5835 0108 B268     		ldr	r2, [r6, #8]
ARM GAS  /tmp/ccjYyDGQ.s 			page 228


 5836              	.LVL404:
5062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5837              		.loc 1 5062 21 is_stmt 0 view .LVU1685
 5838 010a F468     		ldr	r4, [r6, #12]
 5839              	.LVL405:
5062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5840              		.loc 1 5062 21 view .LVU1686
 5841 010c 9460     		str	r4, [r2, #8]
5062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5842              		.loc 1 5062 21 is_stmt 1 view .LVU1687
 5843 010e F268     		ldr	r2, [r6, #12]
 5844 0110 B468     		ldr	r4, [r6, #8]
 5845 0112 5460     		str	r4, [r2, #4]
5062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5846              		.loc 1 5062 21 view .LVU1688
 5847 0114 5A68     		ldr	r2, [r3, #4]
 5848 0116 341D     		adds	r4, r6, #4
 5849 0118 A242     		cmp	r2, r4
 5850 011a 2FD0     		beq	.L428
 5851              	.L418:
5062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5852              		.loc 1 5062 21 discriminator 3 view .LVU1689
 5853 011c 0022     		movs	r2, #0
 5854 011e 7261     		str	r2, [r6, #20]
5062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5855              		.loc 1 5062 21 discriminator 3 view .LVU1690
 5856 0120 1A68     		ldr	r2, [r3]
 5857 0122 013A     		subs	r2, r2, #1
 5858 0124 1A60     		str	r2, [r3]
 5859              	.LBE239:
5062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5860              		.loc 1 5062 66 discriminator 3 view .LVU1691
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5861              		.loc 1 5063 21 discriminator 3 view .LVU1692
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5862              		.loc 1 5063 21 discriminator 3 view .LVU1693
 5863 0126 F36A     		ldr	r3, [r6, #44]
 5864              	.LVL406:
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5865              		.loc 1 5063 21 is_stmt 0 discriminator 3 view .LVU1694
 5866 0128 1F4A     		ldr	r2, .L429+8
 5867 012a 1268     		ldr	r2, [r2]
 5868 012c 9342     		cmp	r3, r2
 5869 012e 01D9     		bls	.L419
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5870              		.loc 1 5063 21 is_stmt 1 discriminator 1 view .LVU1695
 5871 0130 1D4A     		ldr	r2, .L429+8
 5872 0132 1360     		str	r3, [r2]
 5873              	.L419:
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5874              		.loc 1 5063 21 discriminator 3 view .LVU1696
 5875              	.LBB240:
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5876              		.loc 1 5063 21 discriminator 3 view .LVU1697
 5877 0134 1D4A     		ldr	r2, .L429+12
 5878 0136 03EB8303 		add	r3, r3, r3, lsl #2
 5879 013a 02EB8303 		add	r3, r2, r3, lsl #2
ARM GAS  /tmp/ccjYyDGQ.s 			page 229


 5880 013e 5B68     		ldr	r3, [r3, #4]
 5881              	.LVL407:
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5882              		.loc 1 5063 21 discriminator 3 view .LVU1698
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5883              		.loc 1 5063 21 discriminator 3 view .LVU1699
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5884              		.loc 1 5063 21 discriminator 3 view .LVU1700
 5885 0140 B360     		str	r3, [r6, #8]
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5886              		.loc 1 5063 21 discriminator 3 view .LVU1701
 5887 0142 9D68     		ldr	r5, [r3, #8]
 5888 0144 F560     		str	r5, [r6, #12]
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5889              		.loc 1 5063 21 discriminator 3 view .LVU1702
 5890 0146 6C60     		str	r4, [r5, #4]
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5891              		.loc 1 5063 21 discriminator 3 view .LVU1703
 5892 0148 9C60     		str	r4, [r3, #8]
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5893              		.loc 1 5063 21 discriminator 3 view .LVU1704
 5894 014a F36A     		ldr	r3, [r6, #44]
 5895              	.LVL408:
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5896              		.loc 1 5063 21 is_stmt 0 discriminator 3 view .LVU1705
 5897 014c 03EB8304 		add	r4, r3, r3, lsl #2
 5898 0150 A500     		lsls	r5, r4, #2
 5899 0152 02EB8404 		add	r4, r2, r4, lsl #2
 5900 0156 7461     		str	r4, [r6, #20]
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5901              		.loc 1 5063 21 is_stmt 1 discriminator 3 view .LVU1706
 5902 0158 5459     		ldr	r4, [r2, r5]
 5903 015a 0134     		adds	r4, r4, #1
 5904 015c 5451     		str	r4, [r2, r5]
 5905              	.LBE240:
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5906              		.loc 1 5063 21 discriminator 3 view .LVU1707
5063:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5907              		.loc 1 5063 51 discriminator 3 view .LVU1708
 5908              	.L420:
5069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5909              		.loc 1 5069 89 discriminator 1 view .LVU1709
5072:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 5910              		.loc 1 5072 17 discriminator 1 view .LVU1710
5072:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 5911              		.loc 1 5072 26 is_stmt 0 discriminator 1 view .LVU1711
 5912 015e F26A     		ldr	r2, [r6, #44]
5072:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 5913              		.loc 1 5072 53 discriminator 1 view .LVU1712
 5914 0160 134B     		ldr	r3, .L429+16
 5915 0162 1B68     		ldr	r3, [r3]
 5916 0164 DB6A     		ldr	r3, [r3, #44]
5072:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 5917              		.loc 1 5072 19 discriminator 1 view .LVU1713
 5918 0166 9A42     		cmp	r2, r3
 5919 0168 B7D9     		bls	.L414
5076:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
ARM GAS  /tmp/ccjYyDGQ.s 			page 230


 5920              		.loc 1 5076 21 is_stmt 1 view .LVU1714
5076:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 5921              		.loc 1 5076 23 is_stmt 0 view .LVU1715
 5922 016a 079B     		ldr	r3, [sp, #28]
 5923 016c 13B1     		cbz	r3, .L421
5078:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 5924              		.loc 1 5078 25 is_stmt 1 view .LVU1716
5078:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 5925              		.loc 1 5078 52 is_stmt 0 view .LVU1717
 5926 016e 0123     		movs	r3, #1
 5927 0170 079A     		ldr	r2, [sp, #28]
 5928 0172 1360     		str	r3, [r2]
 5929              	.L421:
5084:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5930              		.loc 1 5084 21 is_stmt 1 view .LVU1718
5084:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5931              		.loc 1 5084 35 is_stmt 0 view .LVU1719
 5932 0174 0F4B     		ldr	r3, .L429+20
 5933 0176 0122     		movs	r2, #1
 5934 0178 1A60     		str	r2, [r3]
 5935 017a AEE7     		b	.L414
 5936              	.LVL409:
 5937              	.L428:
 5938              	.LBB241:
5062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5939              		.loc 1 5062 21 is_stmt 1 discriminator 1 view .LVU1720
 5940 017c F268     		ldr	r2, [r6, #12]
 5941 017e 5A60     		str	r2, [r3, #4]
 5942 0180 CCE7     		b	.L418
 5943              	.LVL410:
 5944              	.L417:
5062:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5945              		.loc 1 5062 21 is_stmt 0 discriminator 1 view .LVU1721
 5946              	.LBE241:
 5947              	.LBB242:
5069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5948              		.loc 1 5069 21 is_stmt 1 view .LVU1722
 5949 0182 0D4B     		ldr	r3, .L429+24
 5950 0184 5A68     		ldr	r2, [r3, #4]
 5951              	.LVL411:
5069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5952              		.loc 1 5069 21 view .LVU1723
5069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5953              		.loc 1 5069 21 view .LVU1724
5069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5954              		.loc 1 5069 21 view .LVU1725
 5955 0186 F261     		str	r2, [r6, #28]
5069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5956              		.loc 1 5069 21 view .LVU1726
 5957 0188 9568     		ldr	r5, [r2, #8]
 5958 018a 3562     		str	r5, [r6, #32]
5069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5959              		.loc 1 5069 21 view .LVU1727
 5960 018c 06F11804 		add	r4, r6, #24
 5961              	.LVL412:
5069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5962              		.loc 1 5069 21 is_stmt 0 view .LVU1728
ARM GAS  /tmp/ccjYyDGQ.s 			page 231


 5963 0190 6C60     		str	r4, [r5, #4]
5069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5964              		.loc 1 5069 21 is_stmt 1 view .LVU1729
 5965 0192 9460     		str	r4, [r2, #8]
5069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5966              		.loc 1 5069 21 view .LVU1730
 5967 0194 B362     		str	r3, [r6, #40]
5069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5968              		.loc 1 5069 21 view .LVU1731
 5969 0196 1A68     		ldr	r2, [r3]
 5970              	.LVL413:
5069:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 5971              		.loc 1 5069 21 is_stmt 0 view .LVU1732
 5972 0198 0132     		adds	r2, r2, #1
 5973 019a 1A60     		str	r2, [r3]
 5974 019c DFE7     		b	.L420
 5975              	.L430:
 5976 019e 00BF     		.align	2
 5977              	.L429:
 5978 01a0 00000000 		.word	.LANCHOR12
 5979 01a4 00000000 		.word	.LANCHOR15
 5980 01a8 00000000 		.word	.LANCHOR11
 5981 01ac 00000000 		.word	.LANCHOR0
 5982 01b0 00000000 		.word	.LANCHOR8
 5983 01b4 00000000 		.word	.LANCHOR17
 5984 01b8 00000000 		.word	.LANCHOR5
 5985              	.LBE242:
 5986              		.cfi_endproc
 5987              	.LFE47:
 5989              		.section	.text.vTaskGenericNotifyGiveFromISR,"ax",%progbits
 5990              		.align	1
 5991              		.global	vTaskGenericNotifyGiveFromISR
 5992              		.syntax unified
 5993              		.thumb
 5994              		.thumb_func
 5996              	vTaskGenericNotifyGiveFromISR:
 5997              	.LVL414:
 5998              	.LFB48:
5105:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 5999              		.loc 1 5105 5 is_stmt 1 view -0
 6000              		.cfi_startproc
 6001              		@ args = 0, pretend = 0, frame = 0
 6002              		@ frame_needed = 0, uses_anonymous_args = 0
5106:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 6003              		.loc 1 5106 9 view .LVU1734
5107:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 6004              		.loc 1 5107 9 view .LVU1735
5108:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6005              		.loc 1 5108 9 view .LVU1736
5110:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 6006              		.loc 1 5110 9 view .LVU1737
 6007 0000 68B1     		cbz	r0, .L446
5105:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 6008              		.loc 1 5105 5 is_stmt 0 discriminator 2 view .LVU1738
 6009 0002 70B5     		push	{r4, r5, r6, lr}
 6010              	.LCFI50:
 6011              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccjYyDGQ.s 			page 232


 6012              		.cfi_offset 4, -16
 6013              		.cfi_offset 5, -12
 6014              		.cfi_offset 6, -8
 6015              		.cfi_offset 14, -4
 6016 0004 0C46     		mov	r4, r1
 6017 0006 1546     		mov	r5, r2
 6018 0008 0646     		mov	r6, r0
5110:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 6019              		.loc 1 5110 38 is_stmt 1 discriminator 2 view .LVU1739
5111:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6020              		.loc 1 5111 9 discriminator 2 view .LVU1740
 6021 000a 89B1     		cbz	r1, .L434
5111:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6022              		.loc 1 5111 9 view .LVU1741
 6023              	.LBB243:
 6024              	.LBI243:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6025              		.loc 2 194 34 view .LVU1742
 6026              	.LBB244:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6027              		.loc 2 196 9 view .LVU1743
 198:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6028              		.loc 2 198 9 view .LVU1744
 6029              		.syntax unified
 6030              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6031 000c 4FF05003 			mov r3, #80												
 6032 0010 83F31188 		msr basepri, r3											
 6033 0014 BFF36F8F 		isb														
 6034 0018 BFF34F8F 		dsb														
 6035              	
 6036              	@ 0 "" 2
 6037              	.LVL415:
 6038              		.thumb
 6039              		.syntax unified
 6040              	.L435:
 198:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6041              		.loc 2 198 9 is_stmt 0 view .LVU1745
 6042              	.LBE244:
 6043              	.LBE243:
5111:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6044              		.loc 1 5111 9 is_stmt 1 discriminator 2 view .LVU1746
5111:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6045              		.loc 1 5111 9 discriminator 2 view .LVU1747
5111:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6046              		.loc 1 5111 9 discriminator 2 view .LVU1748
 6047 001c FEE7     		b	.L435
 6048              	.L446:
 6049              	.LCFI51:
 6050              		.cfi_def_cfa_offset 0
 6051              		.cfi_restore 4
 6052              		.cfi_restore 5
 6053              		.cfi_restore 6
 6054              		.cfi_restore 14
5110:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 6055              		.loc 1 5110 9 view .LVU1749
 6056              	.LBB245:
 6057              	.LBI245:
ARM GAS  /tmp/ccjYyDGQ.s 			page 233


 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6058              		.loc 2 194 34 view .LVU1750
 6059              	.LBB246:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6060              		.loc 2 196 9 view .LVU1751
 198:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6061              		.loc 2 198 9 view .LVU1752
 6062              		.syntax unified
 6063              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6064 001e 4FF05003 			mov r3, #80												
 6065 0022 83F31188 		msr basepri, r3											
 6066 0026 BFF36F8F 		isb														
 6067 002a BFF34F8F 		dsb														
 6068              	
 6069              	@ 0 "" 2
 6070              	.LVL416:
 6071              		.thumb
 6072              		.syntax unified
 6073              	.L433:
 198:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6074              		.loc 2 198 9 is_stmt 0 view .LVU1753
 6075              	.LBE246:
 6076              	.LBE245:
5110:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 6077              		.loc 1 5110 9 is_stmt 1 discriminator 1 view .LVU1754
5110:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 6078              		.loc 1 5110 9 discriminator 1 view .LVU1755
5110:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 6079              		.loc 1 5110 9 discriminator 1 view .LVU1756
 6080 002e FEE7     		b	.L433
 6081              	.L434:
 6082              	.LCFI52:
 6083              		.cfi_def_cfa_offset 16
 6084              		.cfi_offset 4, -16
 6085              		.cfi_offset 5, -12
 6086              		.cfi_offset 6, -8
 6087              		.cfi_offset 14, -4
5111:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6088              		.loc 1 5111 80 discriminator 2 view .LVU1757
5129:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6089              		.loc 1 5129 9 discriminator 2 view .LVU1758
 6090 0030 FFF7FEFF 		bl	vPortValidateInterruptPriority
 6091              	.LVL417:
5131:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6092              		.loc 1 5131 9 discriminator 2 view .LVU1759
5133:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 6093              		.loc 1 5133 9 discriminator 2 view .LVU1760
 6094              	.LBB247:
 6095              	.LBI247:
 210:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6096              		.loc 2 210 38 discriminator 2 view .LVU1761
 6097              	.LBB248:
 212:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6098              		.loc 2 212 9 discriminator 2 view .LVU1762
 214:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6099              		.loc 2 214 9 discriminator 2 view .LVU1763
 6100              		.syntax unified
ARM GAS  /tmp/ccjYyDGQ.s 			page 234


 6101              	@ 214 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6102 0034 EFF31180 			mrs r0, basepri											
 6103 0038 4FF05003 		mov r3, #80												
 6104 003c 83F31188 		msr basepri, r3											
 6105 0040 BFF36F8F 		isb														
 6106 0044 BFF34F8F 		dsb														
 6107              	
 6108              	@ 0 "" 2
 6109              	.LVL418:
 226:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 6110              		.loc 2 226 9 discriminator 2 view .LVU1764
 226:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 6111              		.loc 2 226 9 is_stmt 0 discriminator 2 view .LVU1765
 6112              		.thumb
 6113              		.syntax unified
 6114              	.LBE248:
 6115              	.LBE247:
5135:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 6116              		.loc 1 5135 13 is_stmt 1 discriminator 2 view .LVU1766
5135:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 6117              		.loc 1 5135 35 is_stmt 0 discriminator 2 view .LVU1767
 6118 0048 3319     		adds	r3, r6, r4
 6119 004a 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 6120 004e D2B2     		uxtb	r2, r2
 6121              	.LVL419:
5136:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6122              		.loc 1 5136 13 is_stmt 1 discriminator 2 view .LVU1768
5136:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6123              		.loc 1 5136 53 is_stmt 0 discriminator 2 view .LVU1769
 6124 0050 0221     		movs	r1, #2
 6125 0052 83F85010 		strb	r1, [r3, #80]
5140:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6126              		.loc 1 5140 13 is_stmt 1 discriminator 2 view .LVU1770
5140:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6127              		.loc 1 5140 37 is_stmt 0 discriminator 2 view .LVU1771
 6128 0056 04F11203 		add	r3, r4, #18
 6129 005a 06EB8303 		add	r3, r6, r3, lsl #2
 6130 005e 5968     		ldr	r1, [r3, #4]
5140:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6131              		.loc 1 5140 58 discriminator 2 view .LVU1772
 6132 0060 0131     		adds	r1, r1, #1
 6133 0062 5960     		str	r1, [r3, #4]
5142:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6134              		.loc 1 5142 62 is_stmt 1 discriminator 2 view .LVU1773
5146:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 6135              		.loc 1 5146 13 discriminator 2 view .LVU1774
5146:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 6136              		.loc 1 5146 15 is_stmt 0 discriminator 2 view .LVU1775
 6137 0064 012A     		cmp	r2, #1
 6138 0066 02D0     		beq	.L447
 6139              	.LVL420:
 6140              	.L436:
5179:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6141              		.loc 1 5179 45 is_stmt 1 view .LVU1776
5183:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 6142              		.loc 1 5183 9 view .LVU1777
 6143              	.LBB249:
ARM GAS  /tmp/ccjYyDGQ.s 			page 235


 6144              	.LBI249:
 230:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6145              		.loc 2 230 34 view .LVU1778
 6146              	.LBB250:
 6147              		.loc 2 232 9 view .LVU1779
 6148              		.syntax unified
 6149              	@ 232 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6150 0068 80F31188 			msr basepri, r0	
 6151              	@ 0 "" 2
 6152              	.LVL421:
 6153              		.loc 2 232 9 is_stmt 0 view .LVU1780
 6154              		.thumb
 6155              		.syntax unified
 6156              	.LBE250:
 6157              	.LBE249:
5184:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6158              		.loc 1 5184 5 view .LVU1781
 6159 006c 70BD     		pop	{r4, r5, r6, pc}
 6160              	.LVL422:
 6161              	.L447:
5149:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6162              		.loc 1 5149 17 is_stmt 1 view .LVU1782
 6163 006e B36A     		ldr	r3, [r6, #40]
 6164 0070 43B1     		cbz	r3, .L437
5149:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6165              		.loc 1 5149 17 view .LVU1783
 6166              	.LBB251:
 6167              	.LBI251:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6168              		.loc 2 194 34 view .LVU1784
 6169              	.LBB252:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6170              		.loc 2 196 9 view .LVU1785
 198:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6171              		.loc 2 198 9 view .LVU1786
 6172              		.syntax unified
 6173              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6174 0072 4FF05003 			mov r3, #80												
 6175 0076 83F31188 		msr basepri, r3											
 6176 007a BFF36F8F 		isb														
 6177 007e BFF34F8F 		dsb														
 6178              	
 6179              	@ 0 "" 2
 6180              	.LVL423:
 6181              		.thumb
 6182              		.syntax unified
 6183              	.L438:
 198:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6184              		.loc 2 198 9 is_stmt 0 view .LVU1787
 6185              	.LBE252:
 6186              	.LBE251:
5149:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6187              		.loc 1 5149 17 is_stmt 1 discriminator 3 view .LVU1788
5149:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6188              		.loc 1 5149 17 discriminator 3 view .LVU1789
5149:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6189              		.loc 1 5149 17 discriminator 3 view .LVU1790
ARM GAS  /tmp/ccjYyDGQ.s 			page 236


 6190 0082 FEE7     		b	.L438
 6191              	.L437:
5149:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6192              		.loc 1 5149 94 discriminator 2 view .LVU1791
5151:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 6193              		.loc 1 5151 17 discriminator 2 view .LVU1792
5151:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 6194              		.loc 1 5151 42 is_stmt 0 discriminator 2 view .LVU1793
 6195 0084 264B     		ldr	r3, .L449
 6196 0086 1B68     		ldr	r3, [r3]
5151:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 6197              		.loc 1 5151 19 discriminator 2 view .LVU1794
 6198 0088 002B     		cmp	r3, #0
 6199 008a 3BD1     		bne	.L439
 6200              	.LBB253:
5153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6201              		.loc 1 5153 21 is_stmt 1 view .LVU1795
 6202 008c 7369     		ldr	r3, [r6, #20]
 6203              	.LVL424:
5153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6204              		.loc 1 5153 21 view .LVU1796
 6205 008e B268     		ldr	r2, [r6, #8]
 6206              	.LVL425:
5153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6207              		.loc 1 5153 21 is_stmt 0 view .LVU1797
 6208 0090 F168     		ldr	r1, [r6, #12]
 6209 0092 9160     		str	r1, [r2, #8]
5153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6210              		.loc 1 5153 21 is_stmt 1 view .LVU1798
 6211 0094 F268     		ldr	r2, [r6, #12]
 6212 0096 B168     		ldr	r1, [r6, #8]
 6213 0098 5160     		str	r1, [r2, #4]
5153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6214              		.loc 1 5153 21 view .LVU1799
 6215 009a 5A68     		ldr	r2, [r3, #4]
 6216 009c 311D     		adds	r1, r6, #4
 6217 009e 8A42     		cmp	r2, r1
 6218 00a0 2DD0     		beq	.L448
 6219              	.L440:
5153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6220              		.loc 1 5153 21 discriminator 3 view .LVU1800
 6221 00a2 0022     		movs	r2, #0
 6222 00a4 7261     		str	r2, [r6, #20]
5153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6223              		.loc 1 5153 21 discriminator 3 view .LVU1801
 6224 00a6 1A68     		ldr	r2, [r3]
 6225 00a8 013A     		subs	r2, r2, #1
 6226 00aa 1A60     		str	r2, [r3]
 6227              	.LBE253:
5153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6228              		.loc 1 5153 66 discriminator 3 view .LVU1802
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6229              		.loc 1 5154 21 discriminator 3 view .LVU1803
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6230              		.loc 1 5154 21 discriminator 3 view .LVU1804
 6231 00ac F36A     		ldr	r3, [r6, #44]
 6232              	.LVL426:
ARM GAS  /tmp/ccjYyDGQ.s 			page 237


5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6233              		.loc 1 5154 21 is_stmt 0 discriminator 3 view .LVU1805
 6234 00ae 1D4A     		ldr	r2, .L449+4
 6235 00b0 1268     		ldr	r2, [r2]
 6236 00b2 9342     		cmp	r3, r2
 6237 00b4 01D9     		bls	.L441
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6238              		.loc 1 5154 21 is_stmt 1 discriminator 1 view .LVU1806
 6239 00b6 1B4A     		ldr	r2, .L449+4
 6240 00b8 1360     		str	r3, [r2]
 6241              	.L441:
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6242              		.loc 1 5154 21 discriminator 3 view .LVU1807
 6243              	.LBB254:
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6244              		.loc 1 5154 21 discriminator 3 view .LVU1808
 6245 00ba 1B4A     		ldr	r2, .L449+8
 6246 00bc 03EB8303 		add	r3, r3, r3, lsl #2
 6247 00c0 02EB8303 		add	r3, r2, r3, lsl #2
 6248 00c4 5B68     		ldr	r3, [r3, #4]
 6249              	.LVL427:
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6250              		.loc 1 5154 21 discriminator 3 view .LVU1809
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6251              		.loc 1 5154 21 discriminator 3 view .LVU1810
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6252              		.loc 1 5154 21 discriminator 3 view .LVU1811
 6253 00c6 B360     		str	r3, [r6, #8]
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6254              		.loc 1 5154 21 discriminator 3 view .LVU1812
 6255 00c8 9C68     		ldr	r4, [r3, #8]
 6256              	.LVL428:
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6257              		.loc 1 5154 21 is_stmt 0 discriminator 3 view .LVU1813
 6258 00ca F460     		str	r4, [r6, #12]
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6259              		.loc 1 5154 21 is_stmt 1 discriminator 3 view .LVU1814
 6260 00cc 6160     		str	r1, [r4, #4]
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6261              		.loc 1 5154 21 discriminator 3 view .LVU1815
 6262 00ce 9960     		str	r1, [r3, #8]
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6263              		.loc 1 5154 21 discriminator 3 view .LVU1816
 6264 00d0 F36A     		ldr	r3, [r6, #44]
 6265              	.LVL429:
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6266              		.loc 1 5154 21 is_stmt 0 discriminator 3 view .LVU1817
 6267 00d2 03EB8301 		add	r1, r3, r3, lsl #2
 6268 00d6 8C00     		lsls	r4, r1, #2
 6269 00d8 02EB8101 		add	r1, r2, r1, lsl #2
 6270 00dc 7161     		str	r1, [r6, #20]
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6271              		.loc 1 5154 21 is_stmt 1 discriminator 3 view .LVU1818
 6272 00de 1159     		ldr	r1, [r2, r4]
 6273 00e0 0131     		adds	r1, r1, #1
 6274 00e2 1151     		str	r1, [r2, r4]
 6275              	.LBE254:
ARM GAS  /tmp/ccjYyDGQ.s 			page 238


5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6276              		.loc 1 5154 21 discriminator 3 view .LVU1819
5154:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6277              		.loc 1 5154 51 discriminator 3 view .LVU1820
 6278              	.L442:
5160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6279              		.loc 1 5160 89 discriminator 1 view .LVU1821
5163:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 6280              		.loc 1 5163 17 discriminator 1 view .LVU1822
5163:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 6281              		.loc 1 5163 26 is_stmt 0 discriminator 1 view .LVU1823
 6282 00e4 F26A     		ldr	r2, [r6, #44]
5163:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 6283              		.loc 1 5163 53 discriminator 1 view .LVU1824
 6284 00e6 114B     		ldr	r3, .L449+12
 6285 00e8 1B68     		ldr	r3, [r3]
 6286 00ea DB6A     		ldr	r3, [r3, #44]
5163:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 {
 6287              		.loc 1 5163 19 discriminator 1 view .LVU1825
 6288 00ec 9A42     		cmp	r2, r3
 6289 00ee BBD9     		bls	.L436
5167:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 6290              		.loc 1 5167 21 is_stmt 1 view .LVU1826
5167:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     {
 6291              		.loc 1 5167 23 is_stmt 0 view .LVU1827
 6292 00f0 0DB1     		cbz	r5, .L443
5169:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 6293              		.loc 1 5169 25 is_stmt 1 view .LVU1828
5169:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     }
 6294              		.loc 1 5169 52 is_stmt 0 view .LVU1829
 6295 00f2 0123     		movs	r3, #1
 6296 00f4 2B60     		str	r3, [r5]
 6297              	.L443:
5175:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6298              		.loc 1 5175 21 is_stmt 1 view .LVU1830
5175:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6299              		.loc 1 5175 35 is_stmt 0 view .LVU1831
 6300 00f6 0E4B     		ldr	r3, .L449+16
 6301 00f8 0122     		movs	r2, #1
 6302 00fa 1A60     		str	r2, [r3]
 6303 00fc B4E7     		b	.L436
 6304              	.LVL430:
 6305              	.L448:
 6306              	.LBB255:
5153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6307              		.loc 1 5153 21 is_stmt 1 discriminator 1 view .LVU1832
 6308 00fe F268     		ldr	r2, [r6, #12]
 6309 0100 5A60     		str	r2, [r3, #4]
 6310 0102 CEE7     		b	.L440
 6311              	.LVL431:
 6312              	.L439:
5153:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6313              		.loc 1 5153 21 is_stmt 0 discriminator 1 view .LVU1833
 6314              	.LBE255:
 6315              	.LBB256:
5160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6316              		.loc 1 5160 21 is_stmt 1 view .LVU1834
ARM GAS  /tmp/ccjYyDGQ.s 			page 239


 6317 0104 0B4B     		ldr	r3, .L449+20
 6318 0106 5A68     		ldr	r2, [r3, #4]
 6319              	.LVL432:
5160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6320              		.loc 1 5160 21 view .LVU1835
5160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6321              		.loc 1 5160 21 view .LVU1836
5160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6322              		.loc 1 5160 21 view .LVU1837
 6323 0108 F261     		str	r2, [r6, #28]
5160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6324              		.loc 1 5160 21 view .LVU1838
 6325 010a 9468     		ldr	r4, [r2, #8]
 6326              	.LVL433:
5160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6327              		.loc 1 5160 21 is_stmt 0 view .LVU1839
 6328 010c 3462     		str	r4, [r6, #32]
5160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6329              		.loc 1 5160 21 is_stmt 1 view .LVU1840
 6330 010e 06F11801 		add	r1, r6, #24
 6331 0112 6160     		str	r1, [r4, #4]
5160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6332              		.loc 1 5160 21 view .LVU1841
 6333 0114 9160     		str	r1, [r2, #8]
5160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6334              		.loc 1 5160 21 view .LVU1842
 6335 0116 B362     		str	r3, [r6, #40]
5160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6336              		.loc 1 5160 21 view .LVU1843
 6337 0118 1A68     		ldr	r2, [r3]
 6338              	.LVL434:
5160:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 }
 6339              		.loc 1 5160 21 is_stmt 0 view .LVU1844
 6340 011a 0132     		adds	r2, r2, #1
 6341 011c 1A60     		str	r2, [r3]
 6342 011e E1E7     		b	.L442
 6343              	.L450:
 6344              		.align	2
 6345              	.L449:
 6346 0120 00000000 		.word	.LANCHOR15
 6347 0124 00000000 		.word	.LANCHOR11
 6348 0128 00000000 		.word	.LANCHOR0
 6349 012c 00000000 		.word	.LANCHOR8
 6350 0130 00000000 		.word	.LANCHOR17
 6351 0134 00000000 		.word	.LANCHOR5
 6352              	.LBE256:
 6353              		.cfi_endproc
 6354              	.LFE48:
 6356              		.section	.text.xTaskGenericNotifyStateClear,"ax",%progbits
 6357              		.align	1
 6358              		.global	xTaskGenericNotifyStateClear
 6359              		.syntax unified
 6360              		.thumb
 6361              		.thumb_func
 6363              	xTaskGenericNotifyStateClear:
 6364              	.LVL435:
 6365              	.LFB49:
ARM GAS  /tmp/ccjYyDGQ.s 			page 240


5193:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 6366              		.loc 1 5193 5 is_stmt 1 view -0
 6367              		.cfi_startproc
 6368              		@ args = 0, pretend = 0, frame = 0
 6369              		@ frame_needed = 0, uses_anonymous_args = 0
5193:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 6370              		.loc 1 5193 5 is_stmt 0 view .LVU1846
 6371 0000 38B5     		push	{r3, r4, r5, lr}
 6372              	.LCFI53:
 6373              		.cfi_def_cfa_offset 16
 6374              		.cfi_offset 3, -16
 6375              		.cfi_offset 4, -12
 6376              		.cfi_offset 5, -8
 6377              		.cfi_offset 14, -4
5194:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 6378              		.loc 1 5194 9 is_stmt 1 view .LVU1847
5195:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6379              		.loc 1 5195 9 view .LVU1848
5197:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6380              		.loc 1 5197 9 view .LVU1849
 6381 0002 41B1     		cbz	r1, .L452
5197:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6382              		.loc 1 5197 9 view .LVU1850
 6383              	.LBB257:
 6384              	.LBI257:
 194:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6385              		.loc 2 194 34 view .LVU1851
 6386              	.LBB258:
 196:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6387              		.loc 2 196 9 view .LVU1852
 198:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6388              		.loc 2 198 9 view .LVU1853
 6389              		.syntax unified
 6390              	@ 198 "../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6391 0004 4FF05003 			mov r3, #80												
 6392 0008 83F31188 		msr basepri, r3											
 6393 000c BFF36F8F 		isb														
 6394 0010 BFF34F8F 		dsb														
 6395              	
 6396              	@ 0 "" 2
 6397              	.LVL436:
 6398              		.thumb
 6399              		.syntax unified
 6400              	.L453:
 198:../../Middlewares/Third_Party/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6401              		.loc 2 198 9 is_stmt 0 view .LVU1854
 6402              	.LBE258:
 6403              	.LBE257:
5197:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6404              		.loc 1 5197 9 is_stmt 1 discriminator 1 view .LVU1855
5197:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6405              		.loc 1 5197 9 discriminator 1 view .LVU1856
5197:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6406              		.loc 1 5197 9 discriminator 1 view .LVU1857
 6407 0014 FEE7     		b	.L453
 6408              	.L452:
 6409 0016 0446     		mov	r4, r0
ARM GAS  /tmp/ccjYyDGQ.s 			page 241


 6410 0018 0D46     		mov	r5, r1
5197:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6411              		.loc 1 5197 79 discriminator 2 view .LVU1858
5201:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6412              		.loc 1 5201 9 discriminator 2 view .LVU1859
5201:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6413              		.loc 1 5201 17 is_stmt 0 discriminator 2 view .LVU1860
 6414 001a 60B1     		cbz	r0, .L458
 6415              	.LVL437:
 6416              	.L454:
5203:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 6417              		.loc 1 5203 9 is_stmt 1 discriminator 4 view .LVU1861
 6418 001c FFF7FEFF 		bl	vPortEnterCritical
 6419              	.LVL438:
5205:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 6420              		.loc 1 5205 13 discriminator 4 view .LVU1862
5205:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 6421              		.loc 1 5205 37 is_stmt 0 discriminator 4 view .LVU1863
 6422 0020 6319     		adds	r3, r4, r5
 6423 0022 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 6424 0026 DBB2     		uxtb	r3, r3
5205:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             {
 6425              		.loc 1 5205 15 discriminator 4 view .LVU1864
 6426 0028 022B     		cmp	r3, #2
 6427 002a 07D0     		beq	.L459
5212:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 6428              		.loc 1 5212 25 view .LVU1865
 6429 002c 0024     		movs	r4, #0
 6430              	.LVL439:
 6431              	.L455:
5215:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6432              		.loc 1 5215 9 is_stmt 1 view .LVU1866
 6433 002e FFF7FEFF 		bl	vPortExitCritical
 6434              	.LVL440:
5217:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 6435              		.loc 1 5217 9 view .LVU1867
5218:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6436              		.loc 1 5218 5 is_stmt 0 view .LVU1868
 6437 0032 2046     		mov	r0, r4
 6438 0034 38BD     		pop	{r3, r4, r5, pc}
 6439              	.LVL441:
 6440              	.L458:
5201:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6441              		.loc 1 5201 17 discriminator 1 view .LVU1869
 6442 0036 044B     		ldr	r3, .L460
 6443 0038 1C68     		ldr	r4, [r3]
 6444              	.LVL442:
5201:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6445              		.loc 1 5201 17 discriminator 1 view .LVU1870
 6446 003a EFE7     		b	.L454
 6447              	.LVL443:
 6448              	.L459:
5207:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 6449              		.loc 1 5207 17 is_stmt 1 view .LVU1871
5207:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 6450              		.loc 1 5207 56 is_stmt 0 view .LVU1872
 6451 003c 2C44     		add	r4, r4, r5
ARM GAS  /tmp/ccjYyDGQ.s 			page 242


 6452              	.LVL444:
5207:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 6453              		.loc 1 5207 56 view .LVU1873
 6454 003e 0023     		movs	r3, #0
 6455 0040 84F85030 		strb	r3, [r4, #80]
5208:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 6456              		.loc 1 5208 17 is_stmt 1 view .LVU1874
 6457              	.LVL445:
5208:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             }
 6458              		.loc 1 5208 25 is_stmt 0 view .LVU1875
 6459 0044 0124     		movs	r4, #1
 6460 0046 F2E7     		b	.L455
 6461              	.L461:
 6462              		.align	2
 6463              	.L460:
 6464 0048 00000000 		.word	.LANCHOR8
 6465              		.cfi_endproc
 6466              	.LFE49:
 6468              		.section	.text.ulTaskGenericNotifyValueClear,"ax",%progbits
 6469              		.align	1
 6470              		.global	ulTaskGenericNotifyValueClear
 6471              		.syntax unified
 6472              		.thumb
 6473              		.thumb_func
 6475              	ulTaskGenericNotifyValueClear:
 6476              	.LVL446:
 6477              	.LFB50:
5228:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 6478              		.loc 1 5228 5 is_stmt 1 view -0
 6479              		.cfi_startproc
 6480              		@ args = 0, pretend = 0, frame = 0
 6481              		@ frame_needed = 0, uses_anonymous_args = 0
5228:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 6482              		.loc 1 5228 5 is_stmt 0 view .LVU1877
 6483 0000 70B5     		push	{r4, r5, r6, lr}
 6484              	.LCFI54:
 6485              		.cfi_def_cfa_offset 16
 6486              		.cfi_offset 4, -16
 6487              		.cfi_offset 5, -12
 6488              		.cfi_offset 6, -8
 6489              		.cfi_offset 14, -4
 6490 0002 0D46     		mov	r5, r1
 6491 0004 1646     		mov	r6, r2
5229:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         uint32_t ulReturn;
 6492              		.loc 1 5229 9 is_stmt 1 view .LVU1878
5230:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6493              		.loc 1 5230 9 view .LVU1879
5234:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6494              		.loc 1 5234 9 view .LVU1880
5234:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6495              		.loc 1 5234 17 is_stmt 0 view .LVU1881
 6496 0006 0446     		mov	r4, r0
 6497 0008 70B1     		cbz	r0, .L465
 6498              	.LVL447:
 6499              	.L463:
5236:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         {
 6500              		.loc 1 5236 9 is_stmt 1 discriminator 4 view .LVU1882
ARM GAS  /tmp/ccjYyDGQ.s 			page 243


 6501 000a FFF7FEFF 		bl	vPortEnterCritical
 6502              	.LVL448:
5240:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
 6503              		.loc 1 5240 13 discriminator 4 view .LVU1883
5240:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
 6504              		.loc 1 5240 22 is_stmt 0 discriminator 4 view .LVU1884
 6505 000e 05F11201 		add	r1, r5, #18
 6506 0012 04EB8101 		add	r1, r4, r1, lsl #2
 6507 0016 4C68     		ldr	r4, [r1, #4]
 6508              	.LVL449:
5241:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 6509              		.loc 1 5241 13 is_stmt 1 discriminator 4 view .LVU1885
5241:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****         }
 6510              		.loc 1 5241 54 is_stmt 0 discriminator 4 view .LVU1886
 6511 0018 4B68     		ldr	r3, [r1, #4]
 6512 001a 23EA0603 		bic	r3, r3, r6
 6513 001e 4B60     		str	r3, [r1, #4]
5243:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6514              		.loc 1 5243 9 is_stmt 1 discriminator 4 view .LVU1887
 6515 0020 FFF7FEFF 		bl	vPortExitCritical
 6516              	.LVL450:
5245:../../Middlewares/Third_Party/FreeRTOS/tasks.c ****     }
 6517              		.loc 1 5245 9 discriminator 4 view .LVU1888
5246:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6518              		.loc 1 5246 5 is_stmt 0 discriminator 4 view .LVU1889
 6519 0024 2046     		mov	r0, r4
 6520 0026 70BD     		pop	{r4, r5, r6, pc}
 6521              	.LVL451:
 6522              	.L465:
5234:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6523              		.loc 1 5234 17 discriminator 1 view .LVU1890
 6524 0028 014B     		ldr	r3, .L466
 6525 002a 1C68     		ldr	r4, [r3]
 6526              	.LVL452:
5234:../../Middlewares/Third_Party/FreeRTOS/tasks.c **** 
 6527              		.loc 1 5234 17 discriminator 1 view .LVU1891
 6528 002c EDE7     		b	.L463
 6529              	.L467:
 6530 002e 00BF     		.align	2
 6531              	.L466:
 6532 0030 00000000 		.word	.LANCHOR8
 6533              		.cfi_endproc
 6534              	.LFE50:
 6536              		.global	uxTopUsedPriority
 6537              		.global	pxCurrentTCB
 6538              		.section	.bss.pxCurrentTCB,"aw",%nobits
 6539              		.align	2
 6540              		.set	.LANCHOR8,. + 0
 6543              	pxCurrentTCB:
 6544 0000 00000000 		.space	4
 6545              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 6546              		.align	2
 6547              		.set	.LANCHOR1,. + 0
 6550              	pxDelayedTaskList:
 6551 0000 00000000 		.space	4
 6552              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 6553              		.align	2
ARM GAS  /tmp/ccjYyDGQ.s 			page 244


 6554              		.set	.LANCHOR6,. + 0
 6557              	pxOverflowDelayedTaskList:
 6558 0000 00000000 		.space	4
 6559              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 6560              		.align	2
 6561              		.set	.LANCHOR0,. + 0
 6564              	pxReadyTasksLists:
 6565 0000 00000000 		.space	100
 6565      00000000 
 6565      00000000 
 6565      00000000 
 6565      00000000 
 6566              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 6567              		.align	2
 6568              		.set	.LANCHOR7,. + 0
 6571              	uxCurrentNumberOfTasks:
 6572 0000 00000000 		.space	4
 6573              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 6574              		.align	2
 6575              		.set	.LANCHOR15,. + 0
 6578              	uxSchedulerSuspended:
 6579 0000 00000000 		.space	4
 6580              		.section	.bss.uxTaskNumber,"aw",%nobits
 6581              		.align	2
 6582              		.set	.LANCHOR10,. + 0
 6585              	uxTaskNumber:
 6586 0000 00000000 		.space	4
 6587              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 6588              		.align	2
 6589              		.set	.LANCHOR11,. + 0
 6592              	uxTopReadyPriority:
 6593 0000 00000000 		.space	4
 6594              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 6595              		.align	2
 6596              		.set	.LANCHOR3,. + 0
 6599              	xDelayedTaskList1:
 6600 0000 00000000 		.space	20
 6600      00000000 
 6600      00000000 
 6600      00000000 
 6600      00000000 
 6601              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 6602              		.align	2
 6603              		.set	.LANCHOR4,. + 0
 6606              	xDelayedTaskList2:
 6607 0000 00000000 		.space	20
 6607      00000000 
 6607      00000000 
 6607      00000000 
 6607      00000000 
 6608              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 6609              		.align	2
 6610              		.set	.LANCHOR13,. + 0
 6613              	xIdleTaskHandle:
 6614 0000 00000000 		.space	4
 6615              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 6616              		.align	2
ARM GAS  /tmp/ccjYyDGQ.s 			page 245


 6617              		.set	.LANCHOR2,. + 0
 6620              	xNextTaskUnblockTime:
 6621 0000 00000000 		.space	4
 6622              		.section	.bss.xNumOfOverflows,"aw",%nobits
 6623              		.align	2
 6624              		.set	.LANCHOR16,. + 0
 6627              	xNumOfOverflows:
 6628 0000 00000000 		.space	4
 6629              		.section	.bss.xPendedTicks,"aw",%nobits
 6630              		.align	2
 6631              		.set	.LANCHOR18,. + 0
 6634              	xPendedTicks:
 6635 0000 00000000 		.space	4
 6636              		.section	.bss.xPendingReadyList,"aw",%nobits
 6637              		.align	2
 6638              		.set	.LANCHOR5,. + 0
 6641              	xPendingReadyList:
 6642 0000 00000000 		.space	20
 6642      00000000 
 6642      00000000 
 6642      00000000 
 6642      00000000 
 6643              		.section	.bss.xSchedulerRunning,"aw",%nobits
 6644              		.align	2
 6645              		.set	.LANCHOR9,. + 0
 6648              	xSchedulerRunning:
 6649 0000 00000000 		.space	4
 6650              		.section	.bss.xTickCount,"aw",%nobits
 6651              		.align	2
 6652              		.set	.LANCHOR12,. + 0
 6655              	xTickCount:
 6656 0000 00000000 		.space	4
 6657              		.section	.bss.xYieldPending,"aw",%nobits
 6658              		.align	2
 6659              		.set	.LANCHOR17,. + 0
 6662              	xYieldPending:
 6663 0000 00000000 		.space	4
 6664              		.section	.data.uxTopUsedPriority,"aw"
 6665              		.align	2
 6666              		.set	.LANCHOR14,. + 0
 6669              	uxTopUsedPriority:
 6670 0000 04000000 		.word	4
 6671              		.text
 6672              	.Letext0:
 6673              		.file 3 "/home/joseluiz/Programs/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux/lib/gcc/arm-none-eabi
 6674              		.file 4 "/home/joseluiz/Programs/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux/arm-none-eabi/include
 6675              		.file 5 "/home/joseluiz/Programs/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux/arm-none-eabi/include
 6676              		.file 6 "../../Middlewares/Third_Party/FreeRTOS/include/projdefs.h"
 6677              		.file 7 "../../Middlewares/Third_Party/FreeRTOS/include/list.h"
 6678              		.file 8 "../../Middlewares/Third_Party/FreeRTOS/include/task.h"
 6679              		.file 9 "../../Middlewares/Third_Party/FreeRTOS/include/portable.h"
 6680              		.file 10 "/home/joseluiz/Programs/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux/arm-none-eabi/includ
 6681              		.file 11 "<built-in>"
ARM GAS  /tmp/ccjYyDGQ.s 			page 246


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/ccjYyDGQ.s:19     .text.prvIdleTask:0000000000000000 $t
     /tmp/ccjYyDGQ.s:24     .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/ccjYyDGQ.s:66     .text.prvIdleTask:0000000000000020 $d
     /tmp/ccjYyDGQ.s:71     .text.prvTaskCheckFreeStackSpace:0000000000000000 $t
     /tmp/ccjYyDGQ.s:76     .text.prvTaskCheckFreeStackSpace:0000000000000000 prvTaskCheckFreeStackSpace
     /tmp/ccjYyDGQ.s:119    .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/ccjYyDGQ.s:124    .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/ccjYyDGQ.s:159    .text.prvResetNextTaskUnblockTime:0000000000000020 $d
     /tmp/ccjYyDGQ.s:165    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/ccjYyDGQ.s:170    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/ccjYyDGQ.s:346    .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/ccjYyDGQ.s:351    .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/ccjYyDGQ.s:418    .text.prvInitialiseTaskLists:000000000000003c $d
     /tmp/ccjYyDGQ.s:428    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/ccjYyDGQ.s:433    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/ccjYyDGQ.s:601    .text.prvAddNewTaskToReadyList:00000000000000b0 $d
     /tmp/ccjYyDGQ.s:611    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/ccjYyDGQ.s:616    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/ccjYyDGQ.s:701    .text.prvAddCurrentTaskToDelayedList:0000000000000048 $d
     /tmp/ccjYyDGQ.s:710    .text.xTaskCreate:0000000000000000 $t
     /tmp/ccjYyDGQ.s:716    .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/ccjYyDGQ.s:842    .text.eTaskGetState:0000000000000000 $t
     /tmp/ccjYyDGQ.s:848    .text.eTaskGetState:0000000000000000 eTaskGetState
     /tmp/ccjYyDGQ.s:963    .text.eTaskGetState:0000000000000048 $d
     /tmp/ccjYyDGQ.s:970    .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d
     /tmp/ccjYyDGQ.s:974    .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/ccjYyDGQ.s:980    .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/ccjYyDGQ.s:1102   .text.vTaskStartScheduler:0000000000000068 $d
     /tmp/ccjYyDGQ.s:1113   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/ccjYyDGQ.s:1119   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/ccjYyDGQ.s:1162   .text.vTaskEndScheduler:0000000000000020 $d
     /tmp/ccjYyDGQ.s:1167   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/ccjYyDGQ.s:1173   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/ccjYyDGQ.s:1192   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/ccjYyDGQ.s:1197   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/ccjYyDGQ.s:1203   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/ccjYyDGQ.s:1224   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/ccjYyDGQ.s:1229   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/ccjYyDGQ.s:1235   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/ccjYyDGQ.s:1264   .text.xTaskGetTickCountFromISR:000000000000000c $d
     /tmp/ccjYyDGQ.s:1269   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/ccjYyDGQ.s:1275   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/ccjYyDGQ.s:1291   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/ccjYyDGQ.s:1296   .text.pcTaskGetName:0000000000000000 $t
     /tmp/ccjYyDGQ.s:1302   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/ccjYyDGQ.s:1363   .text.pcTaskGetName:0000000000000024 $d
     /tmp/ccjYyDGQ.s:1368   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/ccjYyDGQ.s:1374   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/ccjYyDGQ.s:1746   .text.xTaskIncrementTick:000000000000014c $d
     /tmp/ccjYyDGQ.s:1761   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/ccjYyDGQ.s:1767   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/ccjYyDGQ.s:2096   .text.xTaskResumeAll:000000000000012c $d
     /tmp/ccjYyDGQ.s:2108   .text.vTaskDelay:0000000000000000 $t
     /tmp/ccjYyDGQ.s:2114   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/ccjYyDGQ.s:2207   .text.vTaskDelay:0000000000000048 $d
ARM GAS  /tmp/ccjYyDGQ.s 			page 247


     /tmp/ccjYyDGQ.s:2212   .text.xTaskCatchUpTicks:0000000000000000 $t
     /tmp/ccjYyDGQ.s:2218   .text.xTaskCatchUpTicks:0000000000000000 xTaskCatchUpTicks
     /tmp/ccjYyDGQ.s:2292   .text.xTaskCatchUpTicks:0000000000000038 $d
     /tmp/ccjYyDGQ.s:2298   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/ccjYyDGQ.s:2304   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/ccjYyDGQ.s:2431   .text.vTaskSwitchContext:0000000000000080 $d
     /tmp/ccjYyDGQ.s:2442   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/ccjYyDGQ.s:2448   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/ccjYyDGQ.s:2516   .text.vTaskPlaceOnEventList:000000000000002c $d
     /tmp/ccjYyDGQ.s:2521   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/ccjYyDGQ.s:2527   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/ccjYyDGQ.s:2658   .text.vTaskPlaceOnUnorderedEventList:0000000000000068 $d
     /tmp/ccjYyDGQ.s:2664   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/ccjYyDGQ.s:2670   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/ccjYyDGQ.s:2923   .text.xTaskRemoveFromEventList:00000000000000dc $d
     /tmp/ccjYyDGQ.s:2933   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/ccjYyDGQ.s:2939   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/ccjYyDGQ.s:3172   .text.vTaskRemoveFromUnorderedEventList:00000000000000d0 $d
     /tmp/ccjYyDGQ.s:3182   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/ccjYyDGQ.s:3188   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/ccjYyDGQ.s:3258   .text.vTaskSetTimeOutState:0000000000000030 $d
     /tmp/ccjYyDGQ.s:3264   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/ccjYyDGQ.s:3270   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/ccjYyDGQ.s:3293   .text.vTaskInternalSetTimeOutState:0000000000000010 $d
     /tmp/ccjYyDGQ.s:3299   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/ccjYyDGQ.s:3305   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/ccjYyDGQ.s:3473   .text.xTaskCheckForTimeOut:0000000000000078 $d
     /tmp/ccjYyDGQ.s:3480   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/ccjYyDGQ.s:3486   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/ccjYyDGQ.s:3503   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/ccjYyDGQ.s:3508   .text.uxTaskGetTaskNumber:0000000000000000 $t
     /tmp/ccjYyDGQ.s:3514   .text.uxTaskGetTaskNumber:0000000000000000 uxTaskGetTaskNumber
     /tmp/ccjYyDGQ.s:3547   .text.vTaskSetTaskNumber:0000000000000000 $t
     /tmp/ccjYyDGQ.s:3553   .text.vTaskSetTaskNumber:0000000000000000 vTaskSetTaskNumber
     /tmp/ccjYyDGQ.s:3578   .text.vTaskGetInfo:0000000000000000 $t
     /tmp/ccjYyDGQ.s:3584   .text.vTaskGetInfo:0000000000000000 vTaskGetInfo
     /tmp/ccjYyDGQ.s:3707   .text.vTaskGetInfo:000000000000005c $d
     /tmp/ccjYyDGQ.s:3712   .text.prvListTasksWithinSingleList:0000000000000000 $t
     /tmp/ccjYyDGQ.s:3717   .text.prvListTasksWithinSingleList:0000000000000000 prvListTasksWithinSingleList
     /tmp/ccjYyDGQ.s:3833   .text.uxTaskGetSystemState:0000000000000000 $t
     /tmp/ccjYyDGQ.s:3839   .text.uxTaskGetSystemState:0000000000000000 uxTaskGetSystemState
     /tmp/ccjYyDGQ.s:3954   .text.uxTaskGetSystemState:0000000000000074 $d
     /tmp/ccjYyDGQ.s:3962   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/ccjYyDGQ.s:3968   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/ccjYyDGQ.s:3987   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/ccjYyDGQ.s:3992   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/ccjYyDGQ.s:3998   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/ccjYyDGQ.s:4179   .text.xTaskPriorityInherit:00000000000000a4 $d
     /tmp/ccjYyDGQ.s:4186   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/ccjYyDGQ.s:4192   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/ccjYyDGQ.s:4399   .text.xTaskPriorityDisinherit:00000000000000a0 $d
     /tmp/ccjYyDGQ.s:4406   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/ccjYyDGQ.s:4412   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/ccjYyDGQ.s:4627   .text.vTaskPriorityDisinheritAfterTimeout:00000000000000b0 $d
     /tmp/ccjYyDGQ.s:4634   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/ccjYyDGQ.s:4640   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/ccjYyDGQ.s:4667   .text.uxTaskResetEventItemValue:0000000000000014 $d
ARM GAS  /tmp/ccjYyDGQ.s 			page 248


     /tmp/ccjYyDGQ.s:4672   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/ccjYyDGQ.s:4678   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/ccjYyDGQ.s:4709   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/ccjYyDGQ.s:4714   .text.ulTaskGenericNotifyTake:0000000000000000 $t
     /tmp/ccjYyDGQ.s:4720   .text.ulTaskGenericNotifyTake:0000000000000000 ulTaskGenericNotifyTake
     /tmp/ccjYyDGQ.s:4885   .text.ulTaskGenericNotifyTake:00000000000000a8 $d
     /tmp/ccjYyDGQ.s:4890   .text.xTaskGenericNotifyWait:0000000000000000 $t
     /tmp/ccjYyDGQ.s:4896   .text.xTaskGenericNotifyWait:0000000000000000 xTaskGenericNotifyWait
     /tmp/ccjYyDGQ.s:5086   .text.xTaskGenericNotifyWait:00000000000000cc $d
     /tmp/ccjYyDGQ.s:5091   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/ccjYyDGQ.s:5097   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/ccjYyDGQ.s:5190   .text.xTaskGenericNotify:000000000000004c $d
     /tmp/ccjYyDGQ.s:5501   .text.xTaskGenericNotify:000000000000016c $d
     /tmp/ccjYyDGQ.s:5509   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/ccjYyDGQ.s:5515   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/ccjYyDGQ.s:5658   .text.xTaskGenericNotifyFromISR:0000000000000072 $d
     /tmp/ccjYyDGQ.s:5978   .text.xTaskGenericNotifyFromISR:00000000000001a0 $d
     /tmp/ccjYyDGQ.s:5990   .text.vTaskGenericNotifyGiveFromISR:0000000000000000 $t
     /tmp/ccjYyDGQ.s:5996   .text.vTaskGenericNotifyGiveFromISR:0000000000000000 vTaskGenericNotifyGiveFromISR
     /tmp/ccjYyDGQ.s:6346   .text.vTaskGenericNotifyGiveFromISR:0000000000000120 $d
     /tmp/ccjYyDGQ.s:6357   .text.xTaskGenericNotifyStateClear:0000000000000000 $t
     /tmp/ccjYyDGQ.s:6363   .text.xTaskGenericNotifyStateClear:0000000000000000 xTaskGenericNotifyStateClear
     /tmp/ccjYyDGQ.s:6464   .text.xTaskGenericNotifyStateClear:0000000000000048 $d
     /tmp/ccjYyDGQ.s:6469   .text.ulTaskGenericNotifyValueClear:0000000000000000 $t
     /tmp/ccjYyDGQ.s:6475   .text.ulTaskGenericNotifyValueClear:0000000000000000 ulTaskGenericNotifyValueClear
     /tmp/ccjYyDGQ.s:6532   .text.ulTaskGenericNotifyValueClear:0000000000000030 $d
     /tmp/ccjYyDGQ.s:6669   .data.uxTopUsedPriority:0000000000000000 uxTopUsedPriority
     /tmp/ccjYyDGQ.s:6543   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/ccjYyDGQ.s:6539   .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6546   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6550   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/ccjYyDGQ.s:6553   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6557   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/ccjYyDGQ.s:6560   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6564   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/ccjYyDGQ.s:6567   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6571   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/ccjYyDGQ.s:6574   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6578   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/ccjYyDGQ.s:6581   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6585   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/ccjYyDGQ.s:6588   .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6592   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/ccjYyDGQ.s:6595   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6599   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/ccjYyDGQ.s:6602   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6606   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/ccjYyDGQ.s:6609   .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6613   .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/ccjYyDGQ.s:6616   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6620   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/ccjYyDGQ.s:6623   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6627   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/ccjYyDGQ.s:6630   .bss.xPendedTicks:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6634   .bss.xPendedTicks:0000000000000000 xPendedTicks
     /tmp/ccjYyDGQ.s:6637   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6641   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
ARM GAS  /tmp/ccjYyDGQ.s 			page 249


     /tmp/ccjYyDGQ.s:6644   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6648   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/ccjYyDGQ.s:6651   .bss.xTickCount:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6655   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/ccjYyDGQ.s:6658   .bss.xYieldPending:0000000000000000 $d
     /tmp/ccjYyDGQ.s:6662   .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/ccjYyDGQ.s:6665   .data.uxTopUsedPriority:0000000000000000 $d
     /tmp/ccjYyDGQ.s:5196   .text.xTaskGenericNotify:0000000000000051 $d
     /tmp/ccjYyDGQ.s:5196   .text.xTaskGenericNotify:0000000000000052 $t
     /tmp/ccjYyDGQ.s:5663   .text.xTaskGenericNotifyFromISR:0000000000000077 $d
     /tmp/ccjYyDGQ.s:5663   .text.xTaskGenericNotifyFromISR:0000000000000078 $t

UNDEFINED SYMBOLS
memset
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vPortExitCritical
uxListRemove
vListInsert
pvPortMalloc
vPortFree
xPortStartScheduler
vPortEndScheduler
vPortValidateInterruptPriority
